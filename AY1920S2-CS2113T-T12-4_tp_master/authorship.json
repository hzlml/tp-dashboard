[
  {
    "path": "docs/AboutUs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Low Jia Yee | [Github](https://github.com/lowjiayee) | [Portfolio](docs/team/lowjiayee.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Haritha Divakaran | [Github](https://github.com/harithadiv) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yang Anqi | [Github](https://github.com/anqi-nus) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Benjamin Chan | [Github](https://github.com/benchan911) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 1,
      "lowjiayee": 1,
      "harithadiv": 1,
      "benchan911": 1,
      "-": 4
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "## Professor Assistant Console (PAC)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "![alt text][https://github.com/AY1920S2-CS2113T-T12-4/docs/images/PAC.png \"PAC ver1\"]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "![alt text][https://github.com/benchan911/tp/blob/Benjamin-UserGuide/docs/images/PAC.png \"PAC ver1\"]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### 1.1 What is PAC?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "PAC is a professor assistant console which helps you keep track of your "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "upcoming events. PAC also allows you to add in attendance to keep track "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "of your students and their grades. Being a simple Command Line Interface "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "(CLI) application, PAC ensures its usability and suitability regardless "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "of your expertise level."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### 1.2 Who are our audience?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Professors, teachers, etc."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "As long as you need to keep track of upcoming events or class, you are our audience."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "## 2. Setting Up"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### 2.1 Requirements "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1.  Ensure you have [Java 11](https://www.oracle.com/java/technologies/javase-jdk11-downloads.html) or above installed in your Computer."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1.  Download the latest .jar. from [here](http://link.to/duke)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1.  Copy the file to the folder you want to use as the home folder for this application."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1.  Type `java -jar pac.jar` to start the application."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    \u003cINSERT SCREENSHOT\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1.  You should see this screen if everything is successful."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### 2.2 Startup using Command Line"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1.  Open your terminal."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1.  Navigate to the home folder containing PAC."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1.  cd followed by the file path into the terminal as shown below"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    \u003cINSERT IMAGE\u003e "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1.  Type `java -jar` followed by the name of the jar file and press **Enter**."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### 2.3 Startup using JAR"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1.  Open home folder containing PAC."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1.  Run the packaged JAR file by double clicking it "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    and a window should appear in a few seconds."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    \u003cINSERT IMAGE\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1. Once opened, type in the command when prompted and press **Enter**."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "benchan911"
        },
        "content": "## 3. Quick Start"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### 3.1 Using PAC"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "benchan911"
        },
        "content": "You can type any command, then press **Enter** to execute it."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "benchan911"
        },
        "content": "e.g. typing help then pressing **Enter** will open the help window."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Some example commands to try:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "benchan911"
        },
        "content": "* `listEvent:`\t\t\tList all events"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "benchan911"
        },
        "content": "* `addEvent n/CS1010:` \tAdd an event named “CS1010”"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "benchan911"
        },
        "content": "* `deleteEvent 2:`\t\tDelete 2nd item shown in the list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "benchan911"
        },
        "content": "* `exit:`\t\t\t\tExits the app"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Refer to [“Features”](#Features) for details of each command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### 4.1 Adding new event: event  `-Event add`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Adds a new event to the event list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "benchan911"
        },
        "content": "If the event has time/date/venue, use the following commands respectively. "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "benchan911"
        },
        "content": "If the date input does not specify the year, it is by default the current year. "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "benchan911"
        },
        "content": "If the event is a repeatable event, you may add one of the following command:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1. Use r/FREQ[/TIME], when FREQ is “Day”, TIME is in 24hr format."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1. Use r/FREQ[/DAY], where FREQ is “Week”, DAY is “Monday”, “Friday”, etc. "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1. Use r/FREQ, where FREQ is “Year”."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Commands: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "benchan911"
        },
        "content": "`Event add n/EVENTNAME [t/EVENTTIME] [d/EVENTDATE] [v/EVENTVENUE] [r/FREQ[/TIME or /DAY]]`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "benchan911"
        },
        "content": "`Event add n/Event1 t/2.30pm d/6Jun`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "benchan911"
        },
        "content": "`Event add n/Event2 t/5.30pm r/Week/Monday`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### 4.2 Adding students’ attendance to event: attendance `-Attendance add`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Mark a student’s or students’ attendance in the attendance sheet."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Input “yes” or “no” for  p/PRESENT. You may not need to state  p/PRESENT, by default it would be a “yes”.  "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "benchan911"
        },
        "content": "You can take multiple students’ attendance at a time, separate the names using “|”."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Command: "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "benchan911"
        },
        "content": "`Attendance add c/CLASS p/PRESENT n/STUDENT_NAME`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "benchan911"
        },
        "content": "`Attendance add c/CS2113T_Tut1 n/John|Mary|...`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "benchan911"
        },
        "content": "`Attendance add c/CS2113T_Tut1 p/no n/Alice`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### 4.3 Adding students’ performance: performance `-Performance add`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Add a student’s grade or mark to the grade list. "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Grade refers to an alphabetical grade while mark refers to a numerical mark given to the student. "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Only one of g/GRADE m/MARK should be provided. "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Command: "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "benchan911"
        },
        "content": "`Performance add a/Assignment n/STUDENT_NAME [g/GRADE or m/MARK]`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "benchan911"
        },
        "content": "`Performance add a/CS2113T_Assignment1 n/John g/A`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "benchan911"
        },
        "content": "`Performance add a/CS2113T_Assignment2 n/John m/70`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: Well, write the User Guide in active voice anyway."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a \u0027cheat sheet\u0027 of commands here}"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "* Add to-do `todo n/TODO_NAME d/DEADLINE`"
      }
    ],
    "authorContributionMap": {
      "benchan911": 104,
      "-": 27
    }
  },
  {
    "path": "src/main/java/seedu/attendance/Attendance.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.attendance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class representing attendance of a student."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "public class Attendance {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public String eventName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String studentName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String hasAttended;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * The class that handles the attendance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Contains hasAttended input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param eventName The name of the module."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param studentName The name of the student."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param description The description of the lesson."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param hasAttended The status of the attendance."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public Attendance(String eventName, String studentName, String description, String hasAttended) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        this.eventName \u003d eventName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.studentName \u003d studentName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.hasAttended \u003d hasAttended;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * The class that handles the attendance."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Does not contain hasAttended input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param studentName The name of the student."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param description The description of the lesson."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public Attendance(String eventName, String studentName, String description) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        this.eventName \u003d eventName;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.studentName \u003d studentName;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.hasAttended \u003d \"false\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * To retrieve the name of the module."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return The name of the module."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public String getEventName() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        return eventName;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * To retrieve the name of student."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return The name of student."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String getStudentName() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return studentName;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * To retrieve the description of the lesson."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return The description of the lesson."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * To retrieve the status of the attendance."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return The status of the attendance."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String getAttendance() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return hasAttended;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        return eventName + \" \" + studentName + \" \" + description + \" \" + hasAttended;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 12,
      "benchan911": 73
    }
  },
  {
    "path": "src/main/java/seedu/attendance/AttendanceList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.attendance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class AttendanceList extends ArrayList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public ArrayList\u003cAttendance\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Empty constructor. Creates an empty list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public AttendanceList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 1,
      "benchan911": 15
    }
  },
  {
    "path": "src/main/java/seedu/command/Bye.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "public class Bye extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        //TODO: replace with an appropriate method from UI"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        System.out.println(\"Bye, see you again!\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiayee": 9
    }
  },
  {
    "path": "src/main/java/seedu/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public abstract void execute();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 3,
      "benchan911": 1,
      "lowjiayee": 1
    }
  },
  {
    "path": "src/main/java/seedu/command/CommandInterpreter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.event.EventList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import seedu.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class CommandInterpreter {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    protected Parser parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    protected EventList eventList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public CommandInterpreter(EventList eventList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        this.eventList \u003d eventList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Returns the first word in lower cases."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param userInput raw user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @return the first word in lower cases"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    protected String getFirstWord(String userInput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String commandType \u003d userInput.split(\" \")[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        commandType \u003d commandType.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        commandType \u003d commandType.toLowerCase();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        return commandType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Returns the 2nd to last words."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param userInput raw user input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @return the 2nd to last words"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @throws DukeException if there is only 1 word from the input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    protected String getSubsequentWords(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        int startIndexOfSpace \u003d userInput.trim().indexOf(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        if (startIndexOfSpace \u003d\u003d -1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            throw new DukeException(\"No parameters provided\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        int startIndexOfParameter \u003d startIndexOfSpace + 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        return userInput.substring(startIndexOfParameter);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Decide the command from userInput."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param userInput The userInput from the Ui."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @throws DukeException If the command is undefined."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public Command decideCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String commandCategory \u003d getFirstWord(userInput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String commandDescription \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        // only look for 2nd to last words if commandCategory requires."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        if (!commandCategory.equals(\"bye\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            commandDescription \u003d getSubsequentWords(userInput);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        switch (commandCategory) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            command \u003d new Bye();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            EventCommandInterpreter eci \u003d new EventCommandInterpreter(eventList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            command \u003d eci.decideCommand(commandDescription);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        case \"attendance\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            //TODO AttendanceCommandInterpreter"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        case \"performance\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            PerformanceCommandInterpreter pci \u003d new PerformanceCommandInterpreter(eventList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            command \u003d pci.decideCommand(commandDescription);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            throw new DukeException(\"Unknown command type.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            throw new DukeException(\"Duke is null.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 6,
      "benchan911": 14,
      "lowjiayee": 66
    }
  },
  {
    "path": "src/main/java/seedu/command/EventCommandInterpreter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.command.event.AddEvent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.command.event.DeleteEvent;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.event.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.event.EventList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "public class EventCommandInterpreter extends CommandInterpreter {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public EventCommandInterpreter(EventList eventList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        super(eventList);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public Command decideCommand(String commandDescription) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String commandType \u003d getFirstWord(commandDescription);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String commandParameters \u003d getSubsequentWords(commandDescription);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            event \u003d parser.parseEvent(commandParameters);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            command \u003d new AddEvent(event, this.eventList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        case \"edit\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            //TODO edit"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            index \u003d parser.parseIndex(commandParameters);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            command \u003d new DeleteEvent(index, this.eventList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            //TODO list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            throw new DukeException(\"Event: Unknown command\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            throw new DukeException(\"Event: Command is null\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 2,
      "lowjiayee": 45
    }
  },
  {
    "path": "src/main/java/seedu/command/PerformanceCommandInterpreter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.command.performance.AddPerformance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.command.performance.DeletePerformance;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.command.performance.ViewAssignmentResult;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.command.performance.ViewStudentResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.event.EventList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "public class PerformanceCommandInterpreter extends CommandInterpreter {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public PerformanceCommandInterpreter(EventList eventList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        super(eventList);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * Execute the command from userInput."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param commandDescription The userInput from the Ui."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @throws DukeException If the command is undefined."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public Command decideCommand(String commandDescription) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        String commandType \u003d getFirstWord(commandDescription);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        String commandParameters \u003d getSubsequentWords(commandDescription);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            return new AddPerformance(commandParameters);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            return new DeletePerformance(commandParameters);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        case \"view_student_result\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            return new ViewStudentResult(commandParameters);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        case \"view_assignment_result\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            return new ViewAssignmentResult(commandParameters);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            throw new DukeException(\"Performance: Unknown command.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 38
    }
  },
  {
    "path": "src/main/java/seedu/command/attendance/AddAttendance.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "package seedu.command.attendance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.attendance.Attendance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "public class AddAttendance extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    private final Attendance attendance;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Creates a new AddAttendanceCommand with the given task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param attendance The student attendance to add."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public AddAttendance(Attendance attendance) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        this.attendance \u003d attendance;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 1,
      "lowjiayee": 26
    }
  },
  {
    "path": "src/main/java/seedu/command/event/AddEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "package seedu.command.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.event.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.event.EventList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "public class AddEvent extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    private Event newEvent;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    private EventList eventList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public AddEvent(Event newEvent, EventList eventList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        this.newEvent \u003d newEvent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        this.eventList \u003d eventList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        eventList.add(newEvent);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiayee": 20
    }
  },
  {
    "path": "src/main/java/seedu/command/event/DeleteEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "package seedu.command.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.event.EventList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "public class DeleteEvent extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    private Integer index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    private EventList eventList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public DeleteEvent(Integer index, EventList eventList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        this.eventList \u003d eventList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        eventList.delete(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiayee": 19
    }
  },
  {
    "path": "src/main/java/seedu/command/performance/AddPerformance.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.command.performance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.parser.PerformanceParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.performance.Performance;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.performance.PerformanceList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "public class AddPerformance extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    Performance performance;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public String commandParameters;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * Constructor for AddPerformanceCommand. Takes String userInput"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * and parse it to get the Performance to be added."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param commandParameters A String to be parsed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public AddPerformance(String commandParameters) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        this.commandParameters \u003d commandParameters;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        performance \u003d new PerformanceParser().parsePerformance(commandParameters);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * Add the performance to performance list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public void addToList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        String eventName \u003d performance.getEvent();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        PerformanceList performanceList \u003d new PerformanceList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        //TODO: change this list to the performance list under event input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        performanceList.addToList(performance, eventName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        addToList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 32,
      "lowjiayee": 2,
      "benchan911": 2
    }
  },
  {
    "path": "src/main/java/seedu/command/performance/DeletePerformance.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.command.performance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.performance.Performance;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.performance.PerformanceList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.parser.PerformanceParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "public class DeletePerformance extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    Performance performance;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public String userInput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * Constructor for DeletePerformanceCommand. Takes String userInput"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * and parse it to get the Performance to be deleted."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param commandParameters A String to be parsed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public DeletePerformance(String commandParameters) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        this.userInput \u003d commandParameters;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        performance \u003d new PerformanceParser().parsePerformance(commandParameters);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        PerformanceList.deletePerformance(performance);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 23,
      "lowjiayee": 2,
      "benchan911": 3
    }
  },
  {
    "path": "src/main/java/seedu/command/performance/ViewAssignmentResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.command.performance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.performance.Performance;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.performance.PerformanceList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "public class ViewAssignmentResult extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static List\u003cPerformance\u003e performances;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    private String assignment;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * Constructor for ViewAssignmentResultCommand. Takes String userInput"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * and parse it to get the assignment result list to be showed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param userInput A String to be parsed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public ViewAssignmentResult(String userInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        String[] instructions \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        assignment \u003d instructions[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        performances \u003d new PerformanceList().getPerformanceList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * Selects specific results of the assignment input by user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * from the Performance list, and print the list in the format of"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * [module][student]result."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public void printAssignmentPerformanceList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        int size \u003d performances.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            UI.display(\"The list is empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            UI.printListHeader(\"Index\", \"Module\", \"Assignment\", \"Result\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            for (Performance performance : performances) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                if (performance.assignment.equals(assignment)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    UI.printListBody(i, performance.eventName, performance.assignment, performance.getResult());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        printAssignmentPerformanceList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 45,
      "lowjiayee": 3,
      "benchan911": 3
    }
  },
  {
    "path": "src/main/java/seedu/command/performance/ViewStudentResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.command.performance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import seedu.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.performance.Performance;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.performance.PerformanceList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "public class ViewStudentResult extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static List\u003cPerformance\u003e performances;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * Constructor for ViewAssignmentResultCommand. Takes String userInput"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * and parse it to get the student result list to be showed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param userInput A String to be parsed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public ViewStudentResult(String userInput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        String[] instructions \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        name \u003d instructions[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        performances \u003d new PerformanceList().getPerformanceList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * Selects specific results of the assignment input by user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * from the Performance list, and print the list in the format of"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * [module][assignment]result."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public void printStudentPerformanceList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        int size \u003d performances.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            System.out.println(\"empty\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            for (Performance performance : performances) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                if (performance.studentName.equals(name)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    System.out.println(i + performance.formatForStudentList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        printStudentPerformanceList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 44,
      "benchan911": 5,
      "lowjiayee": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.command.Bye;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.command.CommandInterpreter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.event.EventList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    protected UI ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    protected CommandInterpreter interpreter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    protected EventList eventList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        eventList \u003d new EventList();  //TODO: new Storage().load()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        interpreter \u003d new CommandInterpreter(eventList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        UI.setUserName();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            UI.readUserInput();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                command \u003d interpreter.decideCommand(ui.getUserInput());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                command.execute();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            } catch (DukeException m) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                System.out.println(m);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        } while (isNotBye(command));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    private boolean isNotBye(Command command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        return !(command instanceof Bye);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 6,
      "lowjiayee": 30,
      "-": 10
    }
  },
  {
    "path": "src/main/java/seedu/event/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package seedu.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private String dateTimeFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public DateTime(String arguments) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.dateTime \u003d arguments;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.dateTimeFormat \u003d getDateTimeFormat();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String getDateTimeFormat() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            LocalDateTime localDateTime \u003d LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            return localDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            return \"Please provide correct format\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return this.dateTimeFormat;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 28
    }
  },
  {
    "path": "src/main/java/seedu/event/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "package seedu.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "public class Event {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private DateTime datetime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    private String venue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    private ArrayList\u003cString\u003e participantList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    private ArrayList\u003cString\u003e attendanceList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Empty constructor. Sets name as \"unnamed\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public Event() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        setName(\"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        setDatetime(\"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        setVenue(\"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        this.participantList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        this.attendanceList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Constructor with name, datetime, venue provided."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param name name of event"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param datetime datetime of event"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param venue venue of event"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public Event(String name, String datetime, String venue) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        setName(name);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        setDatetime(datetime);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        setVenue(venue);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Returns the name of the event."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @return the name of the event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Sets the name of the event. If the specified name is empty or {@code null},"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * and the original name is also empty or {@code null},"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * the name will take the form: event_(secondsSinceEpoch)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param name the new name for the event"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @throws InvalidParameterException when trying to overwrite a non-empty"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     *      and non-null name with an empty or null name"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void setName(String name) throws InvalidParameterException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        if (this.name \u003d\u003d null || this.name.isEmpty()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            // if original name is empty or null"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            if (name \u003d\u003d null || name.isEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                // if new name is empty or null"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                this.name \u003d \"event_\" + Instant.now().getEpochSecond();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                this.name \u003d name;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            // if original name is not empty and null"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            if (name \u003d\u003d null || name.isEmpty()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                // if new name is empty or null"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                throw new InvalidParameterException(\"Empty name\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                // if new name is not empty and not null"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                this.name \u003d name;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Returns the datetime of the event."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @return the datetime of the event"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return datetime.getDateTimeFormat();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Sets the datetime of the event."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param datetime the new datetime for the event"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void setDatetime(String datetime) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.datetime \u003d new DateTime(datetime);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Returns the venue of the event."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @return the venue of the event"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public String getVenue() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        return this.venue;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Sets the venue of the event."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param venue the new venue for the event"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void setVenue(String venue) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        this.venue \u003d venue;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return \"[E] + \" + getName() + getDatetime() + getVenue();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 1,
      "lowjiayee": 99,
      "harithadiv": 10
    }
  },
  {
    "path": "src/main/java/seedu/event/EventList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "package seedu.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import seedu.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "public class EventList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public ArrayList\u003cEvent\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Empty constructor. Creates an empty list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public EventList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Add the specified event to the end of list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param event the event to be appended"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void add(Event event) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Delete the first instance of the specified event in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Returns {@code true} if the specified event is found (and removed)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * from the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param event the event to be deleted"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @return {@code true} if the specified event is found (and removed)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     *      from the list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public boolean delete(Event event) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        return list.remove(event);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Removes the event at the specified position in this list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Shifts any subsequent events to the left (subtracts one from their indices)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param index the index of the element to be removed"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @return the removed event"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public Event delete(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event removedEvent \u003d list.remove(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        return removedEvent;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Returns the event at the specified position in this list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param index index of the event to find"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @return the event in the specified position"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public Event find(int index) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Change the name of the event in the specified index."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param index index of the event"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param name new name for the event"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void editName(int index, String name) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event \u003d this.find(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        event.setName(name);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Change the datetime of the event in the specified index."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param index index of the event"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param datetime new datetime for the event"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void editDatetime(int index, String datetime) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event \u003d this.find(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        event.setDatetime(datetime);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Change the venue of the event in the specified index."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param index index of the event"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param venue new venue for the event"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public void editVenue(int index, String venue) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event \u003d this.find(index);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        event.setVenue(venue);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 1,
      "lowjiayee": 83,
      "harithadiv": 2
    }
  },
  {
    "path": "src/main/java/seedu/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 7
    }
  },
  {
    "path": "src/main/java/seedu/exception/PerformanceAssignmentListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "public class PerformanceAssignmentListException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public PerformanceAssignmentListException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 7
    }
  },
  {
    "path": "src/main/java/seedu/exception/PerformanceStudentListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "public class PerformanceStudentListException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public PerformanceStudentListException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 7
    }
  },
  {
    "path": "src/main/java/seedu/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "package seedu.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.event.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import seedu.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Returns the index in a string of parameters with this format:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * [i/INDEX] ... ."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param parameters original parameters"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @return the index in a string of parameters"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public int parseIndex(String parameters) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String[] tokens \u003d parameters.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        for (String token: tokens) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            switch (token.substring(0, 2)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            case \"i/\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                index \u003d Integer.parseInt(parameters.substring(2));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                // does nothing, as intended"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            throw new DukeException(\"index not found\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    // TODO: [r/FREQ[/TIME or /DAY]]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Parse parameters based on the following format:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * n/EVENTNAME [t/EVENTTIME] [d/EVENTDATE] [v/EVENTVENUE]."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param parameters original parameters"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @return an Event object with the relevant information"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    public Event parseEvent(String parameters) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String[] tokens \u003d parameters.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String name \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String venue \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        splitByEventFlags(tokens, name, time, date, venue);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String datetime \u003d date + \" \" + time;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        return new Event(name, datetime, venue);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    private void splitByEventFlags(String[] tokens, String name, String time,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                                   String date, String venue) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String mostRecent \u003d null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        for (String token : tokens) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            switch (token.substring(0, 2)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            case \"n/\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                ensureNotDuplicateFlag(name, \"duplicate name flag\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                name +\u003d token.substring(2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                mostRecent \u003d name;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            case \"t/\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                ensureNotDuplicateFlag(time, \"duplicate time flag\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                time +\u003d token.substring(2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                mostRecent \u003d time;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            case \"d/\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                ensureNotDuplicateFlag(date, \"duplicate date flag\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                date +\u003d token.substring(2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                mostRecent \u003d date;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            case \"v/\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                ensureNotDuplicateFlag(venue, \"duplicate venue flag\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                venue +\u003d token.substring(2);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                mostRecent \u003d venue;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                // assumes that all valid flags have been processed before this line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                if (isUnknownFlag(token)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                    throw new DukeException(\"unknown flag\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                if (mostRecent \u003d\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                    throw new DukeException(\"parameter without flag\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "                mostRecent +\u003d (\" \" + token);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    private void ensureNotDuplicateFlag(String name, String message) throws DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        if (!name.isEmpty()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "            throw new DukeException(message);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * Returns {@code true} if the input contains a flag."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * It is assumed that all valid flags have been handled"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * before the execution of this function."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @param input the token to be checked"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     * @return {@code true} if the input contains a flag"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    private boolean isUnknownFlag(String input) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        return input.charAt(1) \u003d\u003d \u0027/\u0027;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiayee": 108
    }
  },
  {
    "path": "src/main/java/seedu/parser/ParserStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package seedu.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import seedu.event.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import seedu.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.attendance.Attendance;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class ParserStorage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Parses an event from String format back to task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param line description of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return The corresponding task object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @throws DukeException If the line is corrupted."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static Attendance createTaskFromStorageAttendance(String line) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        String[] taskParts \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            String nameOfModule \u003d taskParts[0].strip();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            String nameOfStudent \u003d taskParts[0].strip();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            String description \u003d taskParts[1].strip();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            String hasAttended \u003d taskParts[2].strip();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            Attendance attendance \u003d new Attendance(nameOfModule, nameOfStudent, description, hasAttended);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            return attendance;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            throw new DukeException(\"CORRUPTED_TASK\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Parses an event from String format back to task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param line description of the event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return The corresponding task object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @throws DukeException If the line is corrupted."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static Event createTaskFromStorageEvent(String line) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        String[] taskParts \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            String name \u003d taskParts[0].strip();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            String datetime \u003d taskParts[1].strip();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            String venue \u003d taskParts[2].strip();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            Event event \u003d new Event(name,datetime,venue);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            return event;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            throw new DukeException(\"CORRUPTED_TASK\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Parses an event from events to String format."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param event The event."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return The corresponding String format of the task object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static String toStorageStringEvent(Event event) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return event.getName() + \" | \" + event.getDatetime() + \" | \" + event.getVenue();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static String toStorageStringAttendance(Attendance attendance) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return attendance.getStudentName() + \" | \" + attendance.getDescription() + \" | \" + attendance.getAttendance();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 1,
      "benchan911": 66
    }
  },
  {
    "path": "src/main/java/seedu/parser/PerformanceParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.performance.Performance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.ui.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "public class PerformanceParser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    int mark \u003d -1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    String grade \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public PerformanceParser() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static String[] performanceDataToParse(String userInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        String[] instructions \u003d userInput.split(\" \",20);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        return Arrays.copyOfRange(instructions, 1, instructions.length);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public Performance parsePerformance(String commandParameters) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        String[] dataToRead \u003d commandParameters.split(\" \", 5);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        String eventName \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        String studentName \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        String assignment \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        int r \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        for (String s : dataToRead) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            if (s !\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                String[] data \u003d s.split(\"/\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                switch (data[0]) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                case \"a\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    assignment \u003d data[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                case \"e\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    eventName \u003d data[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                case \"n\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    studentName \u003d data[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                case \"g\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    grade \u003d data[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    r \u003d 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                case \"m\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    mark \u003d Integer.parseInt(data[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    r \u003d 2;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    UI.printWrongInput(s);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        Performance performance \u003d new Performance(eventName, studentName, assignment);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        setResult(performance, r);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        return performance;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    private void setResult(Performance performance, int r) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        if (r \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            performance.setGrade(grade);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        } else if (r \u003d\u003d 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            performance.setMark(mark);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        } "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    } "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 64
    }
  },
  {
    "path": "src/main/java/seedu/performance/Performance.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.performance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "public class Performance {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public String eventName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public String studentName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public String assignment;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public String grade;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public int mark;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    private static boolean isMark \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    private static boolean isGrade \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * Save the result of student base on a set of module, student and assignment,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * the result can be saved as either mark in integer or grade in string."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param eventName A string input by user, that is the name of the module"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     *                     of the result saved."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param studentName A string input by user, the name of student who scored"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     *                      the result."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param assignment A string input by user, the name of the assignment of the"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     *                   result."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public Performance(String eventName, String studentName, String assignment) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        this.eventName \u003d eventName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        this.studentName \u003d studentName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        this.assignment \u003d assignment;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public String getEvent() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        return eventName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public String getStudent() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        return studentName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public String getAssignment() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        return assignment;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public void setMark(int mark) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        this.mark \u003d mark;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        isMark \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public void setGrade(String grade) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        this.grade \u003d grade;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        isGrade \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * The string to be saved to the student list, in the format"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * of [name of module][name of assignment] result of student."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @return A string that shows the result of a student base on assignment."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public String formatForStudentList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        return \"[\" + eventName + \"] \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                + \"[\" + assignment + \"] \" + getResult();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * To determine whether a string grade or an integer mark"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * result is used as the result of student."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @return A serializable result, either grade in string or"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     *         mark in integer."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public Serializable getResult() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        if (isMark) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            return mark;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        } else if (isGrade) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            return grade;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        return \"No result updated\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 78
    }
  },
  {
    "path": "src/main/java/seedu/performance/PerformanceList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.performance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.ui.UI;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "public class PerformanceList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static List\u003cPerformance\u003e performanceList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static int numberOfPerformance;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public PerformanceList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        performanceList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        numberOfPerformance \u003d performanceList.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public List\u003cPerformance\u003e getPerformanceList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        return performanceList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        return performanceList.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public void addToList(Performance performance, String eventName) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        performanceList.add(performance);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        UI.addPerformanceMessage(performance.studentName, eventName);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * Delete the student\u0027s performance from the performance list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * It detects whether the current list is empty, contains the"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * input student\u0027s performance, and delete whenever is allowed."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param performance The Performance of student to be deleted."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void deletePerformance(Performance performance) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        boolean hasDeleted \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        if (numberOfPerformance \u003e 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            for (Performance p : performanceList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                if (p !\u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                        \u0026\u0026 performance.getAssignment().equals(p.getAssignment())"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                        \u0026\u0026 performance.getEvent().equals(p.getEvent())"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                        \u0026\u0026 performance.getStudent().equals(p.getStudent())) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    performanceList.remove(p);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    hasDeleted \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        UI.deletePerformanceMessage(performance, hasDeleted);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 52
    }
  },
  {
    "path": "src/main/java/seedu/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package seedu.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import seedu.event.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import seedu.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.attendance.Attendance;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import seedu.parser.ParserStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private ArrayList\u003cEvent\u003e events;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private ArrayList\u003cAttendance\u003e attendances;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Constructs a Storage object that contains duke.tasks and duke.storage related operations."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Mainly save duke.tasks and get duke.tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param filePath The filepath to the txt file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public Storage(String filePath, UI ui) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        readEvent();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        readAttendance();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Reads events.tasks from filepath. Creates empty duke.tasks if file cannot be read."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private void readEvent() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        ArrayList\u003cEvent\u003e newEvents \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            } catch (java.io.FileNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                newEvents.add(ParserStorage.createTaskFromStorageEvent(s.nextLine()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            s.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } catch (DukeException | FileNotFoundException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            UI.display(\"FILE_NOT_FOUND\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            UI.display(\"NEW_FILE_CREATED\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        events \u003d newEvents;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Reads attendances.tasks from filepath. Creates empty duke.tasks if file cannot be read."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private void readAttendance() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        ArrayList\u003cAttendance\u003e newAttendance \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            } catch (java.io.FileNotFoundException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                newAttendance.add(ParserStorage.createTaskFromStorageAttendance(s.nextLine()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            s.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } catch (DukeException | FileNotFoundException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            UI.display(\"FILE_NOT_FOUND\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            UI.display(\"NEW_FILE_CREATED\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        attendances \u003d newAttendance;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Writes the duke.events into a file of the given filepath."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public void writeEvent() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            for (Event event : events) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                writer.write(ParserStorage.toStorageStringEvent(event));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            UI.display(\"FILE_NOT_SAVE\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Writes the duke.events into a file of the given filepath."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public void writeAttendance() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            for (Attendance attendance : attendances) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                writer.write(ParserStorage.toStorageStringAttendance(attendance));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            UI.display(\"FILE_NOT_SAVE\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Retrieves the existing events."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public ArrayList\u003cEvent\u003e getEvents() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return events;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Retrieves the existing attendances."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public ArrayList\u003cAttendance\u003e getAttendance() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return attendances;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 12,
      "benchan911": 119
    }
  },
  {
    "path": "src/main/java/seedu/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "package seedu.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.attendance.Attendance;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.event.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import seedu.performance.Performance;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    private static Scanner in;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    private static String userInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    private static String userName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    static final String LIST_FORMAT \u003d (\"| %-10d|  %-30s|  %-35s|  %-10s|%n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * Advances this scanner past the current line and stores the input that"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * was skipped, excluding any line separator at the end."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * The position is set to the beginning of the next line."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void readUserInput() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * Returns the string that is read from"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * {@code readUserInput()} most recently."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @return the most recent line of user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * Close the scanner."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void close() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        in.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void display(String message) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * This prints the welcome message and set username for the application."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void setUserName() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        display(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        display(\"What is your name?\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        userName \u003d in.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        display(\"Hello \" + userName + \". Welcome to your \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                + \"personal Professor Assistant Console.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * This prints the horizontal split for a 4 columns table."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void printSplitContent() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.print(\"|\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        Stream.generate(() -\u003e \"_\").limit(11).forEach(System.out::print);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.print(\"|\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        Stream.generate(() -\u003e \"_\").limit(32).forEach(System.out::print);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.print(\"|\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        Stream.generate(() -\u003e \"_\").limit(37).forEach(System.out::print);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.print(\"|\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        Stream.generate(() -\u003e \"_\").limit(12).forEach(System.out::print);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.print(\"|\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void printSplit() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        Stream.generate(() -\u003e \"_\").limit(97).forEach(System.out::print);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * This prints the headers, index, header1, header2, and header 3"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * in order respectively."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param index A String printed at row 1 column 1."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param header1 A String printed at row 1 column 2."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param header2 A String printed at row 1 column 3."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param header3 A String printed at row 1 column 4."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void printListHeader(String index, String header1,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                                       String header2, String header3) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        String headerFormat \u003d (\"| %-10s|  %-30s|  %-35s|  %-10s|%n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        printSplit();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.printf(headerFormat, index, header1, header2, header3);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        printSplitContent();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * This prints the headers, index, body1, body2, and body3"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * in order respectively."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param index A String printed at column 1."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param body1 A String printed at column 2."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param body2 A String printed at column 3."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param body3 A String printed at column 4."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void printListBody(int index, String body1,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                                     String body2, Serializable body3) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.printf(LIST_FORMAT, index, body1, body2, body3);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        printSplitContent();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void addEventMessage(String eventType, String eventName) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.printf(\"New %s: %s was added successfully to \""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                + \"your Event list.\\n\", eventType, eventName);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void addAttendanceMessage(String studentName, String eventName) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.printf(\"Attendance of %s has been taken successfully\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                + \" under event %s.\\n\", studentName, eventName);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void addPerformanceMessage(String studentName, String taskName) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.printf(\"The result of student %s has been added \""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                + \"successfully under event %s.\\n\", studentName, taskName);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void deleteEventMessage(String eventType, String eventName) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.printf(\"%s: %s was deleted successfully from \""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                + \"your Event list.\\n\", eventType, eventName);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * The message showed to the user after successful deletion of a attendance."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param attendance The Attendance deleted."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void deleteAttendanceMessage(Attendance attendance, boolean hasDeleted) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        if (hasDeleted) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            String studentName \u003d attendance.getStudentName();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            String eventName \u003d attendance.getEventName();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            System.out.printf(\"Attendance of %s has been taken successfully\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    + \" under event %s.\\n\", studentName, eventName);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            System.out.printf(\"There is no %s\u0027s attendance record in the list\\n\","
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    attendance.getStudentName());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * The message showed to the user after successful deletion of a performance."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     * @param performance The Performance deleted."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void deletePerformanceMessage(Performance performance, boolean hasDeleted) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        if (hasDeleted) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            String studentName \u003d performance.getStudent();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            String eventName \u003d performance.getEvent();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            System.out.printf(\"The result of student %s has been added \""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    + \"successfully under event %s.\\n\", studentName, eventName);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "            System.out.printf(\"There is no %s\u0027s performance record in the list\\n\","
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                    performance.getStudent());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void printWrongInput(String typeInput) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.printf(\"Wrong %s input. If you need help with \""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                + \"the input format, please input help.\\n\", typeInput);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    public static void printInsufficientInput(String typeInput) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        System.out.printf(\"No %s input. If you need help with \""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "                + \"the input format, please input help.\\n\", typeInput);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 177
    }
  },
  {
    "path": "src/test/java/seedu/attendance/AttendanceTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package seedu.attendance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class AttendanceTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    void getModuleName() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "        assertEquals(\"CS2040C\", new Attendance(\"CS2040C\",\"Richard\", \"Tutorial 1\").getEventName());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    void getStudentName() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        assertEquals(\"Richard\", new Attendance(\"CS2040C\",\"Richard\", \"Tutorial 1\").getStudentName());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        assertEquals(\"Tutorial 1\", new Attendance(\"CS2040C\",\"Richard\", \"Tutorial 1\").getDescription());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    void getAttendance() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        assertEquals(\"false\", new Attendance(\"CS2040C\",\"Richard\", \"Tutorial 1\").getAttendance());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        assertEquals(\"false\", new Attendance(\"CS2040C\",\"Richard\", \"Tutorial 1\", \"false\").getAttendance());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        assertEquals(\"true\", new Attendance(\"CS2040C\",\"Richard\", \"Tutorial 1\", \"true\").getAttendance());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 1,
      "benchan911": 30
    }
  },
  {
    "path": "src/test/java/seedu/event/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "package seedu.event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import seedu.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "    void getName() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event1 \u003d new Event();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        long time \u003d Instant.now().getEpochSecond();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        String expectedName \u003d \"event_\" + time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        // might throw error, if event1 and time are created at different seconds"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        assertEquals(expectedName, event1.getName());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event2 \u003d new Event(\"1\", \"2\", \"3\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        assertEquals(\"1\", event2.getName());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    void setName() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event1 \u003d new Event();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        event1.setName(\"event1\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        assertEquals(\"event1\", event1.getName());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event2 \u003d new Event();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        assertThrows(InvalidParameterException.class, () -\u003e event2.setName(null));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event3 \u003d new Event(\"1\", \"2\", \"3\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        assertThrows(InvalidParameterException.class, () -\u003e event3.setName(\"\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event4 \u003d new Event(\"1\", \"2\", \"3\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        event4.setName(\"event4\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        assertEquals(\"event4\", event4.getName());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    void getDatetime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        Event event1 \u003d new Event(\"1\", \"4\", \"3\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        assertEquals(\"Please provide correct format\", event1.getDatetime());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        Event event2 \u003d new Event(\"1\", \"2020-05-04 0130\", \"3\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        assertEquals(\"May 04 2020 0130\", event2.getDatetime());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    void setDatetime() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event1 \u003d new Event();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        event1.setDatetime(\"2020-05-04 0130\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        assertEquals(\"May 04 2020 0130\", event1.getDatetime());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    void getVenue() throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event1 \u003d new Event();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        assertEquals(\"\", event1.getVenue());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event2 \u003d new Event(\"1\", \"2\", \"3\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        assertEquals(\"3\", event2.getVenue());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    void setVenue() throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        Event event1 \u003d new Event();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        event1.setVenue(\"sea\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "        assertEquals(\"sea\", event1.getVenue());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 1,
      "lowjiayee": 58,
      "harithadiv": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "James Gosling"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi-nus"
        },
        "content": "input"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiayee"
        },
        "content": "Bye"
      }
    ],
    "authorContributionMap": {
      "anqi-nus": 1,
      "lowjiayee": 1,
      "-": 1
    }
  }
]
