[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    mainClassName \u003d \"seedu.tp.Main\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.0.1\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 1,
      "-": 39
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Guo Lilian | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "![](https://picsum.photos/200) | Zhilin Huang | [Github](https://github.com/Zhilin-Huang) | [Portfolio](docs/team/zhilinhuang.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Shiyue Liu | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Quinn Meurer | [Github](https://github.com/quinnyyy) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 1,
      "sliu107": 1,
      "quinnyyy": 1,
      "g-lilian": 1,
      "-": 4
    }
  },
  {
    "path": "docs/team/zhilinhuang.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "# Zhilin Huang - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 2
    }
  },
  {
    "path": "src/main/java/seedu/tp/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.HistoryFlashcardException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.InvalidFlashcardIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.flashcard.FlashcardFactory;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " * Main class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private FlashcardFactory flashcardFactory;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private FlashcardList flashcardList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * Program entry point."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @param args CLI args (unused)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        new Main().run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        setup();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        runLoop();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    private void setup() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        flashcardFactory \u003d new FlashcardFactory(ui);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        flashcardList \u003d new FlashcardList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        parser \u003d new Parser(flashcardFactory, flashcardList, ui);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    private void runLoop() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        ui.sendWelcomeMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        while (!isBye) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "                String fullCommand \u003d ui.getNextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "                Command command \u003d parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "                command.execute();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "                isBye \u003d command.isBye();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "                ui.sendUnknownCommandResponse();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            } catch (InvalidFlashcardIndexException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "                ui.sendInvalidFlashcardIndexResponse();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            } catch (HistoryFlashcardException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "                ui.printException(e);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        ui.sendByeMessage();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 31,
      "quinnyyy": 30
    }
  },
  {
    "path": "src/main/java/seedu/tp/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " * Bye command used in the application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Checks whether the command is a bye command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return Boolean value true value since this is a bye command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 22
    }
  },
  {
    "path": "src/main/java/seedu/tp/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.HistoryFlashcardException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " * Command used in the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public abstract void execute()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        throws HistoryFlashcardException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Checks whether the command is a bye command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return Boolean value indicating whether or not the command is a bye command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 24
    }
  },
  {
    "path": "src/main/java/seedu/tp/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.InvalidFlashcardIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private FlashcardList flashcardList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Constructor for delete command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param flashcardList flashcard list for the command to execute on"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param index         index in the delete command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public DeleteCommand(FlashcardList flashcardList, int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.flashcardList \u003d flashcardList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void execute()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        throws InvalidFlashcardIndexException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        flashcardList.deleteFlashcard(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 27
    }
  },
  {
    "path": "src/main/java/seedu/tp/commands/EventFlashcardCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.UnrecognizedFlashcardTypeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.EVENT_FLASHCARD_COMMAND;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " * Command to create an event flashcard."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class EventFlashcardCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private FlashcardList flashcardList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private FlashcardFactory flashcardFactory;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Constructor for Event Flashcard Command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param flashcardList    flashcard list for the command to execute on"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param flashcardFactory the flashcard factory to be used in the command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public EventFlashcardCommand(FlashcardList flashcardList, FlashcardFactory flashcardFactory) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.flashcardList \u003d flashcardList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.flashcardFactory \u003d flashcardFactory;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void execute() throws UnrecognizedFlashcardTypeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        flashcardList.addFlashcard(flashcardFactory.create(EVENT_FLASHCARD_COMMAND));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 32
    }
  },
  {
    "path": "src/main/java/seedu/tp/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private FlashcardList flashcardList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public ListCommand(FlashcardList flashcardList, Ui ui) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.flashcardList \u003d flashcardList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        ui.listAllFlashcards(flashcardList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 20
    }
  },
  {
    "path": "src/main/java/seedu/tp/commands/OtherFlashcardCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.UnrecognizedFlashcardTypeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.OTHER_FLASHCARD_COMMAND;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " * Command to create an other flashcard."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class OtherFlashcardCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private FlashcardList flashcardList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private FlashcardFactory flashcardFactory;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Constructor for Other Flashcard Command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param flashcardList    flashcard list for the command to execute on"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param flashcardFactory the flashcard factory to be used in the command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public OtherFlashcardCommand(FlashcardList flashcardList, FlashcardFactory flashcardFactory) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.flashcardList \u003d flashcardList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.flashcardFactory \u003d flashcardFactory;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void execute() throws UnrecognizedFlashcardTypeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        flashcardList.addFlashcard(flashcardFactory.create(OTHER_FLASHCARD_COMMAND));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 32
    }
  },
  {
    "path": "src/main/java/seedu/tp/commands/PersonFlashcardCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.UnrecognizedFlashcardTypeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.PERSON_FLASHCARD_COMMAND;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " * Command to create a person flashcard."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class PersonFlashcardCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private FlashcardList flashcardList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private FlashcardFactory flashcardFactory;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Constructor for Person Flashcard Command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param flashcardList    flashcard list for the command to execute on"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param flashcardFactory the flashcard factory to be used in the command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public PersonFlashcardCommand(FlashcardList flashcardList, FlashcardFactory flashcardFactory) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.flashcardList \u003d flashcardList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.flashcardFactory \u003d flashcardFactory;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void execute() throws UnrecognizedFlashcardTypeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        flashcardList.addFlashcard(flashcardFactory.create(PERSON_FLASHCARD_COMMAND));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 32
    }
  },
  {
    "path": "src/main/java/seedu/tp/exceptions/HistoryFlashcardException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " * Exceptions specific to the History Flashcard app."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public abstract class HistoryFlashcardException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public HistoryFlashcardException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public HistoryFlashcardException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 14
    }
  },
  {
    "path": "src/main/java/seedu/tp/exceptions/InvalidFlashcardIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class InvalidFlashcardIndexException extends HistoryFlashcardException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 5
    }
  },
  {
    "path": "src/main/java/seedu/tp/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class UnknownCommandException extends HistoryFlashcardException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 7
    }
  },
  {
    "path": "src/main/java/seedu/tp/exceptions/UnrecognizedFlashcardTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " * Unrecognized flashcard type exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class UnrecognizedFlashcardTypeException extends HistoryFlashcardException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public UnrecognizedFlashcardTypeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 4,
      "quinnyyy": 6
    }
  },
  {
    "path": "src/main/java/seedu/tp/flashcard/EventFlashcard.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.END_DATE_FIELD;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.NAME_FIELD;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.START_DATE_FIELD;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.SUMMARY_FIELD;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " * Event flashcard."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class EventFlashcard extends Flashcard {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    private String startDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    private String endDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Constructs an \u003ccode\u003eEventFlashcard\u003c/code\u003e."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public EventFlashcard(String name, String startDate, String endDate, String summary, List\u003cString\u003e details) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(name, summary, details);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Creates an \u003ccode\u003eEventFlashcard\u003c/code\u003e  by prompting the user to enter info."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param ui used to prompt the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return the created \u003ccode\u003eEventFlashcard\u003c/code\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static EventFlashcard createEventFlashcard(Ui ui) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String name \u003d ui.promptUserForRequiredField(NAME_FIELD);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String startDate \u003d ui.promptUserForRequiredField(START_DATE_FIELD);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String endDate \u003d ui.promptUserForRequiredField(END_DATE_FIELD);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String summary \u003d ui.promptUserForRequiredField(SUMMARY_FIELD);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        List\u003cString\u003e details \u003d ui.promptUserForDetails();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return new EventFlashcard(name, startDate, endDate, summary, details);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * Get the start date of this event flashcard."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return the start date of this event flashcard"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String getStartDate() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * Get the end date of this event flashcard."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return the end date of this event flashcard"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String getEndDate() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Gets the string representation of event flashcard."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return string representation"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(\"Event name: \").append(name).append(System.lineSeparator());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(\"Event period: \").append(startDate).append(\"-\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "                .append(endDate).append(System.lineSeparator());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(\"Summary: \").append(summary).append(System.lineSeparator());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(\"Details: \").append(System.lineSeparator());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(getDetailsString(details));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * Check if the current instance is equal to the object passed in."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @param obj The object to be compared against the current instance"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return whether or not the two objects are equal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (!(obj instanceof EventFlashcard)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        // Will have to make sure in the future to check for null here if we make other optional fields."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        EventFlashcard otherEventFlashcard \u003d (EventFlashcard) obj;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return super.equals(obj) \u0026\u0026 startDate.equals(otherEventFlashcard.getStartDate())"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                \u0026\u0026 endDate.equals(otherEventFlashcard.getEndDate());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 33,
      "quinnyyy": 66
    }
  },
  {
    "path": "src/main/java/seedu/tp/flashcard/Flashcard.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " * Abstract flashcard class to represent basic properties of flashcard."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public abstract class Flashcard {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected String summary;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    protected List\u003cString\u003e details;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    protected Flashcard(String name, String summary, List\u003cString\u003e details) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.summary \u003d summary;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    protected static String getDetailsString(List\u003cString\u003e details) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        StringBuilder detailsStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        for (String detail : details) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            detailsStringBuilder.append(\"* \").append(detail).append(System.lineSeparator());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return detailsStringBuilder.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Gets the name of the flashcard."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return the name of the flashcard"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * Gets the summary of the flashcard."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return the summary of the flashcard."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String getSummary() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return summary;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * Gets the details of the flashcard."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return the details of the flashcard"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public List\u003cString\u003e getDetails() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * Check if the current instance is equal to the object passed in."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @param obj The object to be compared against the current instance"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return whether or not the two objects are equal"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (!(obj instanceof Flashcard)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Flashcard otherFlashcard \u003d (Flashcard) obj;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return name.equals(otherFlashcard.getName()) \u0026\u0026 summary.equals(otherFlashcard.getSummary())"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                \u0026\u0026 details.equals(otherFlashcard.getDetails());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 20,
      "quinnyyy": 54
    }
  },
  {
    "path": "src/main/java/seedu/tp/flashcard/FlashcardFactory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.exceptions.UnrecognizedFlashcardTypeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " * Flashcard factory class to create flashcards given string."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class FlashcardFactory {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public FlashcardFactory(Ui ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * Create a \u003ccode\u003eFlashcard\u003c/code\u003e given a string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @param flashcardType string representing type of flashcard to create"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return constructed \u003ccode\u003eFlashcard\u003c/code\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @throws UnrecognizedFlashcardTypeException if the string is not a valid flashcard type"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public Flashcard create(String flashcardType) throws UnrecognizedFlashcardTypeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        switch (flashcardType.toLowerCase()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            EventFlashcard eventFlashcard \u003d EventFlashcard.createEventFlashcard(ui);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            ui.confirmFlashcardCreation(eventFlashcard);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            return eventFlashcard;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        case \"person\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            PersonFlashcard personFlashcard \u003d PersonFlashcard.createPersonFlashcard(ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            ui.confirmFlashcardCreation(personFlashcard);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            return personFlashcard;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        case \"other\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            OtherFlashcard otherFlashcard \u003d OtherFlashcard.createOtherFlashcard(ui);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            ui.confirmFlashcardCreation(otherFlashcard);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            return otherFlashcard;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new UnrecognizedFlashcardTypeException(\"Flashcard types: event, person, other\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 10,
      "quinnyyy": 31
    }
  },
  {
    "path": "src/main/java/seedu/tp/flashcard/FlashcardList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.InvalidFlashcardIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " * List of flashcards."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class FlashcardList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private ArrayList\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Constructor for FlashcardList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public FlashcardList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.flashcards \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Adds a flashcard to the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param flashcard the task to be added to the list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void addFlashcard(Flashcard flashcard) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        flashcards.add(flashcard);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Deletes a flashcard from the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param index the index of the flashcard to be deleted"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return the deleted flashcard"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public Flashcard deleteFlashcard(int index) throws InvalidFlashcardIndexException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            return flashcards.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            throw new InvalidFlashcardIndexException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Gets the flashcard at a specific index."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param idx the index."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return the flashcard at the specified index"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public Flashcard getFlashcardAtIdx(int idx) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return flashcards.get(idx);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Checks if the flashcard list is empty."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return boolean value indicating whether or not the flashcard list is empty"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return flashcards.isEmpty();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Gets the total number of flashcards in the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return total number of flashcards in the list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public int getTotalFlashcardNum() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return flashcards.size();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Check if the current instance is equal to the object passed in."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param obj The object to be compared against the current instance"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return whether or not the two objects are equal"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        FlashcardList otherFlashcardList \u003d (FlashcardList) obj;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        if (this.getTotalFlashcardNum() !\u003d otherFlashcardList.getTotalFlashcardNum()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        for (int idx \u003d 0; idx \u003c this.getTotalFlashcardNum(); idx++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            if (!this.getFlashcardAtIdx(idx).equals(otherFlashcardList.getFlashcardAtIdx(idx))) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 91
    }
  },
  {
    "path": "src/main/java/seedu/tp/flashcard/OtherFlashcard.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.NAME_FIELD;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.SUMMARY_FIELD;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " * Other flashcard."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class OtherFlashcard extends Flashcard {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Constructs an \u003ccode\u003eOtherFlashcard\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public OtherFlashcard(String name, String summary, List\u003cString\u003e details) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        super(name, summary, details);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Creates an \u003ccode\u003eOtherFlashcard\u003c/code\u003e by prompting the user to enter info."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param ui used to prompt the user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return the created \u003ccode\u003eOtherFlashcard\u003c/code\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static OtherFlashcard createOtherFlashcard(Ui ui) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String name \u003d ui.promptUserForRequiredField(NAME_FIELD);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String summary \u003d ui.promptUserForRequiredField(SUMMARY_FIELD);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        List\u003cString\u003e details \u003d ui.promptUserForDetails();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return new OtherFlashcard(name, summary, details);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Gets the string representation of this flashcard."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return string representation"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(\"Title: \").append(name).append(System.lineSeparator());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(\"Summary: \").append(summary).append(System.lineSeparator());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(\"Details: \").append(System.lineSeparator());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(getDetailsString(details));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 24,
      "quinnyyy": 24
    }
  },
  {
    "path": "src/main/java/seedu/tp/flashcard/PersonFlashcard.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.BIRTH_DATE_FIELD;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.DEATH_DATE_FIELD;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.NAME_FIELD;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.SUMMARY_FIELD;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " * Person flashcard."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class PersonFlashcard extends Flashcard {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    private String birthDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    private String deathDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Constructs a \u003ccode\u003ePersonFlashcard\u003c/code\u003e."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public PersonFlashcard(String name, String birthDate, String deathDate, String summary, List\u003cString\u003e details) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(name, summary, details);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.birthDate \u003d birthDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.deathDate \u003d deathDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Creates a \u003ccode\u003ePersonFlashcard\u003c/code\u003e by prompting the user to enter info."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param ui used to prompt the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return the created \u003ccode\u003ePersonFlashcard\u003c/code\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static PersonFlashcard createPersonFlashcard(Ui ui) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String name \u003d ui.promptUserForRequiredField(NAME_FIELD);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String birthDate \u003d ui.promptUserForRequiredField(BIRTH_DATE_FIELD);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String deathDate \u003d ui.promptUserForRequiredField(DEATH_DATE_FIELD);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String summary \u003d ui.promptUserForRequiredField(SUMMARY_FIELD);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        List\u003cString\u003e details \u003d ui.promptUserForDetails();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return new PersonFlashcard(name, birthDate, deathDate, summary, details);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * Get the birth date of this person flashcard."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return the birth date of this person flashcard"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String getBirthDate() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return birthDate;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * Get the death date of this person flashcard."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return the death date of this person flashcard"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String getDeathDate() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return deathDate;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Gets the string representation of this flashcard."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return string representation"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(\"Person name: \").append(name).append(System.lineSeparator());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(\"Born: \").append(birthDate).append(System.lineSeparator());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(\"Died: \").append(deathDate).append(System.lineSeparator());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(\"Summary: \").append(summary).append(System.lineSeparator());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(\"Details: \").append(System.lineSeparator());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        stringBuilder.append(getDetailsString(details));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * Check if the current instance is equal to the object passed in."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @param obj The object to be compared against the current instance"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return whether or not the two objects are equal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (!(obj instanceof PersonFlashcard)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        // Will have to make sure in the future to check for null here if we make other optional fields."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        PersonFlashcard otherEventFlashcard \u003d (PersonFlashcard) obj;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return super.equals(obj) \u0026\u0026 birthDate.equals(otherEventFlashcard.getBirthDate())"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                \u0026\u0026 deathDate.equals(otherEventFlashcard.getDeathDate());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 33,
      "quinnyyy": 66
    }
  },
  {
    "path": "src/main/java/seedu/tp/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.EventFlashcardCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.OtherFlashcardCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.PersonFlashcardCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.HistoryFlashcardException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.InvalidFlashcardIndexException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardFactory;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.BYE_COMMAND;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.DELETE_COMMAND;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.EVENT_FLASHCARD_COMMAND;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.LIST_COMMAND;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.OTHER_FLASHCARD_COMMAND;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.PERSON_FLASHCARD_COMMAND;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " * Parser class to handle parsing of user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private FlashcardFactory flashcardFactory;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private FlashcardList flashcardList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Constructs the Parser class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param flashcardFactory flashcard factory to be passed in as argument to commands"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param flashcardList    flashcard list to be passed in as argument to commands"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param ui               UI to be passed in as argument to commands"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public Parser(FlashcardFactory flashcardFactory, FlashcardList flashcardList, Ui ui) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.flashcardFactory \u003d flashcardFactory;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.flashcardList \u003d flashcardList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Parses user input and return the command parsed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param userInput the user input"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return the command parsed from user input"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @throws HistoryFlashcardException exception that occurred when parsing user input"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public Command parseCommand(String userInput) throws HistoryFlashcardException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String[] splittedInput \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String commandType \u003d splittedInput[0].toLowerCase();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        case EVENT_FLASHCARD_COMMAND:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            return new EventFlashcardCommand(flashcardList, flashcardFactory);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        case PERSON_FLASHCARD_COMMAND:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            return new PersonFlashcardCommand(flashcardList, flashcardFactory);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        case OTHER_FLASHCARD_COMMAND:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            return new OtherFlashcardCommand(flashcardList, flashcardFactory);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        case LIST_COMMAND:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            return new ListCommand(flashcardList, ui);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        case DELETE_COMMAND:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "                return new DeleteCommand(flashcardList, Integer.parseInt(splittedInput[1]) - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "                throw new InvalidFlashcardIndexException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        case BYE_COMMAND:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 78
    }
  },
  {
    "path": "src/main/java/seedu/tp/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.Flashcard;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.DETAIL_FIELD;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static seedu.tp.utils.Constants.EMPTY_STRING;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " * Ui class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    private final Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Sends welcome message to user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void sendWelcomeMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        System.out.println(\"Welcome to History Flashcard App!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Sends bye message to user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void sendByeMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        System.out.println(\"Thanks for using History Flashcard!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Prompts the user for a list of details for a flashcard."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return the list of details entered by user"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public List\u003cString\u003e promptUserForDetails() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        List\u003cString\u003e details \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Optional\u003cString\u003e newDetailOptional \u003d promptUserForOptionalField(DETAIL_FIELD);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        while (newDetailOptional.isPresent()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            details.add(newDetailOptional.get());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            newDetailOptional \u003d promptUserForOptionalField(DETAIL_FIELD);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Prompts the user for a piece of optional data used in the construction of a \u003ccode\u003eFlashcard\u003c/code\u003e."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * The user can leave the line empty."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param fieldName string representing the name of the data to prompt for"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return the user\u0027s input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public Optional\u003cString\u003e promptUserForOptionalField(String fieldName) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        System.out.println(\"Please enter \" + fieldName + \" (optional):\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String input \u003d getNextLine().trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return input.equals(EMPTY_STRING) ? Optional.empty() : Optional.of(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Prompts the user for a piece of required data used in the construction of a \u003ccode\u003eFlashcard\u003c/code\u003e."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param fieldName string representing the name of the data to prompt for"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @return the user\u0027s input"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public String promptUserForRequiredField(String fieldName) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        System.out.println(\"Please enter \" + fieldName + \":\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        String input \u003d getNextLine().trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        while (input.equals(EMPTY_STRING)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            System.out.println(\"That is a required field! Please enter again.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            input \u003d getNextLine().trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Sends flashcard creation confirmation to user."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param flashcard the flashcard created"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void confirmFlashcardCreation(Flashcard flashcard) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        System.out.println(\"You\u0027ve successfully created the flashcard below:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        System.out.println(flashcard);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Prints out all flashcards in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param flashcardList the list of flashcards to be printed out"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void listAllFlashcards(FlashcardList flashcardList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        if (flashcardList.isEmpty()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            System.out.println(\"You have no flashcard at this moment!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        System.out.println(\"Here\u0027s the list of flashcards you have:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        for (int i \u003d 0; i \u003c flashcardList.getTotalFlashcardNum(); i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            Flashcard flashcard \u003d flashcardList.getFlashcardAtIdx(i);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            System.out.println((i + 1) + \": \" + flashcard.getName());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Prints out exception to UI."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * @param exception the exception to be printed out"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void printException(Exception exception) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        System.out.println(\"An exception has occurred!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Sends response to unknown command entered by user."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void sendUnknownCommandResponse() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        System.out.println(\"Sorry, I don\u0027t know how to help with that yet.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Sends response to invalid flashcard index entered by user."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void sendInvalidFlashcardIndexResponse() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        System.out.println(\"The flashcard index you entered is invalid\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Gets the next user input line."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return next line"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String getNextLine() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 108,
      "quinnyyy": 30
    }
  },
  {
    "path": "src/main/java/seedu/tp/utils/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String EVENT_FLASHCARD_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String PERSON_FLASHCARD_COMMAND \u003d \"person\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String OTHER_FLASHCARD_COMMAND \u003d \"other\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String NAME_FIELD \u003d \"name\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String START_DATE_FIELD \u003d \"start date\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String END_DATE_FIELD \u003d \"end date\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String SUMMARY_FIELD \u003d \"summary\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String DETAIL_FIELD \u003d \"detail\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String BIRTH_DATE_FIELD \u003d \"birth date\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String DEATH_DATE_FIELD \u003d \"death date\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public static final String EMPTY_STRING \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 21
    }
  },
  {
    "path": "src/test/java/seedu/tp/MainTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "class MainTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 3,
      "quinnyyy": 1,
      "-": 8
    }
  },
  {
    "path": "src/test/java/seedu/tp/commands/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.InvalidFlashcardIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.EventFlashcard;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.OtherFlashcard;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.PersonFlashcard;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private static final FlashcardList EMPTY_FLASHCARD_LIST \u003d new FlashcardList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private static Ui UI \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private static List\u003cString\u003e DETAILS_LIST \u003d createFlashcardDetailsList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private static final EventFlashcard EVENT_FLASHCARD \u003d new EventFlashcard("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        \"Event 1\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        \"1900\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        \"2000\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        \"This is an event summary\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        DETAILS_LIST"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    );"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private static final PersonFlashcard PERSON_FLASHCARD \u003d new PersonFlashcard("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        \"Person 1\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        \"1990\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        \"1998\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        \"This is a person\u0027s summmary\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        DETAILS_LIST"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private static final OtherFlashcard OTHER_FLASHCARD \u003d new OtherFlashcard("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        \"Title 1\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        \"This is a summary\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        DETAILS_LIST"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private static FlashcardList createFullFlashcardList() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        FlashcardList flashcardList \u003d new FlashcardList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        flashcardList.addFlashcard(EVENT_FLASHCARD);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        flashcardList.addFlashcard(PERSON_FLASHCARD);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        flashcardList.addFlashcard(OTHER_FLASHCARD);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return flashcardList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private static List\u003cString\u003e createFlashcardDetailsList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        List\u003cString\u003e details \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        details.add(\"Detail 1\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        details.add(\"Detail 2\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        details.add(\"Detail 3\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void execute_delete_successful() throws InvalidFlashcardIndexException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        FlashcardList expectedFlashcardList \u003d new FlashcardList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        expectedFlashcardList.addFlashcard(EVENT_FLASHCARD);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        expectedFlashcardList.addFlashcard(OTHER_FLASHCARD);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        FlashcardList flashcardList \u003d createFullFlashcardList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(flashcardList, 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        deleteCommand.execute();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertEquals(expectedFlashcardList, flashcardList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void execute_deleteFromEmptyList_throwsInvalidFlashcardIndexException() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(EMPTY_FLASHCARD_LIST, 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertThrows("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            InvalidFlashcardIndexException.class,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            deleteCommand::execute,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            \"Expected InvalidFlashcardIndexException\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void execute_deleteNegativeIndex_throwsInvalidFlashcardIndexException() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(createFullFlashcardList(), -10);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertThrows("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            InvalidFlashcardIndexException.class,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            deleteCommand::execute,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            \"Expected InvalidFlashcardIndexException\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void execute_deleteOutOfBoundIndex_throwsInvalidFlashcardIndexException() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(createFullFlashcardList(), 100);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertThrows("
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            InvalidFlashcardIndexException.class,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            deleteCommand::execute,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            \"Expected InvalidFlashcardIndexException\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 99
    }
  },
  {
    "path": "src/test/java/seedu/tp/commands/EventFlashcardCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.exceptions.UnrecognizedFlashcardTypeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.flashcard.EventFlashcard;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.flashcard.FlashcardFactory;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.flashcard.FlashcardList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.DETAILS;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.END_DATE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.FULL_SIMULATED_INPUT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.NAME;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.START_DATE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.SUMMARY;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.InputTestUtil.getFlashcardFactoryWithInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class EventFlashcardCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public void eventFlashcardCommand_execute_addsFlashcardSuccessfully() throws UnrecognizedFlashcardTypeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardList expectedFlashcardList \u003d new FlashcardList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        expectedFlashcardList.addFlashcard(new EventFlashcard(NAME, START_DATE, END_DATE, SUMMARY, DETAILS));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardList actualFlashcardList \u003d new FlashcardList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardFactory flashcardFactory \u003d getFlashcardFactoryWithInput(FULL_SIMULATED_INPUT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        EventFlashcardCommand eventFlashcardCommand \u003d new EventFlashcardCommand(actualFlashcardList, flashcardFactory);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        eventFlashcardCommand.execute();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        assertEquals(expectedFlashcardList, actualFlashcardList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        assertTrue(actualFlashcardList.getFlashcardAtIdx(0) instanceof EventFlashcard);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 33
    }
  },
  {
    "path": "src/test/java/seedu/tp/commands/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    Execution of ListCommand only involves UI interaction with users and is tested in text-ui-test."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 7
    }
  },
  {
    "path": "src/test/java/seedu/tp/commands/OtherFlashcardCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.exceptions.UnrecognizedFlashcardTypeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.flashcard.FlashcardFactory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.flashcard.FlashcardList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.flashcard.OtherFlashcard;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.NAME;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.PARTIAL_SIMULATED_INPUT;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.SUMMARY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.DETAILS;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.InputTestUtil.getFlashcardFactoryWithInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class OtherFlashcardCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public void otherFlashcardCommand_execute_addsFlashcardSuccessfully() throws UnrecognizedFlashcardTypeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardList expectedFlashcardList \u003d new FlashcardList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        expectedFlashcardList.addFlashcard(new OtherFlashcard(NAME, SUMMARY, DETAILS));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardList actualFlashcardList \u003d new FlashcardList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardFactory flashcardFactory \u003d getFlashcardFactoryWithInput(PARTIAL_SIMULATED_INPUT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        OtherFlashcardCommand otherFlashcardCommand \u003d new OtherFlashcardCommand(actualFlashcardList, flashcardFactory);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        otherFlashcardCommand.execute();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        assertEquals(expectedFlashcardList, actualFlashcardList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        assertTrue(actualFlashcardList.getFlashcardAtIdx(0) instanceof OtherFlashcard);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 31
    }
  },
  {
    "path": "src/test/java/seedu/tp/commands/PersonFlashcardCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.exceptions.UnrecognizedFlashcardTypeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.flashcard.EventFlashcard;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.flashcard.FlashcardFactory;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.flashcard.FlashcardList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.flashcard.PersonFlashcard;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.DETAILS;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.END_DATE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.FULL_SIMULATED_INPUT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.NAME;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.START_DATE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.SUMMARY;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.InputTestUtil.getFlashcardFactoryWithInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class PersonFlashcardCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public void personFlashcardCommand_execute_addsFlashcardSuccessfully() throws UnrecognizedFlashcardTypeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardList expectedFlashcardList \u003d new FlashcardList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        expectedFlashcardList.addFlashcard(new PersonFlashcard(NAME, START_DATE, END_DATE, SUMMARY, DETAILS));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardList actualFlashcardList \u003d new FlashcardList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardFactory flashcardFactory \u003d getFlashcardFactoryWithInput(FULL_SIMULATED_INPUT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        PersonFlashcardCommand personFlashcardCommand \u003d new PersonFlashcardCommand(actualFlashcardList,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                flashcardFactory);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        personFlashcardCommand.execute();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        assertEquals(expectedFlashcardList, actualFlashcardList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        assertTrue(actualFlashcardList.getFlashcardAtIdx(0) instanceof PersonFlashcard);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 35
    }
  },
  {
    "path": "src/test/java/seedu/tp/flashcard/FlashcardFactoryTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.exceptions.UnrecognizedFlashcardTypeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.Constants.EVENT_FLASHCARD_COMMAND;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.Constants.OTHER_FLASHCARD_COMMAND;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.Constants.PERSON_FLASHCARD_COMMAND;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.FULL_SIMULATED_INPUT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.NAME;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.NEWLINE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.PARTIAL_SIMULATED_INPUT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.START_DATE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.END_DATE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.SUMMARY;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.ExampleInputConstants.DETAILS;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import static seedu.tp.utils.InputTestUtil.getFlashcardFactoryWithInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class FlashcardFactoryTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public void flashcardFactory_eventFlashcard_correctlyConstructed() throws UnrecognizedFlashcardTypeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Flashcard expectedFlashcard \u003d new EventFlashcard(NAME, START_DATE, END_DATE, SUMMARY, DETAILS);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardFactory flashcardFactory \u003d getFlashcardFactoryWithInput(FULL_SIMULATED_INPUT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Flashcard actualFlashcard \u003d flashcardFactory.create(EVENT_FLASHCARD_COMMAND);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        assertTrue(actualFlashcard instanceof EventFlashcard);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        assertEquals(expectedFlashcard, actualFlashcard);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public void flashcardFactory_personFlashcard_correctlyConstructed() throws UnrecognizedFlashcardTypeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Flashcard expectedFlashcard \u003d new PersonFlashcard(NAME, START_DATE, END_DATE, SUMMARY, DETAILS);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardFactory flashcardFactory \u003d getFlashcardFactoryWithInput(FULL_SIMULATED_INPUT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Flashcard actualFlashcard \u003d flashcardFactory.create(PERSON_FLASHCARD_COMMAND);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        assertTrue(actualFlashcard instanceof PersonFlashcard);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        assertEquals(expectedFlashcard, actualFlashcard);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public void flashcardFactory_otherFlashcard_correctlyConstructed() throws UnrecognizedFlashcardTypeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Flashcard expectedFlashcard \u003d new OtherFlashcard(NAME, SUMMARY, DETAILS);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardFactory flashcardFactory \u003d getFlashcardFactoryWithInput(PARTIAL_SIMULATED_INPUT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Flashcard actualFlashcard \u003d flashcardFactory.create(OTHER_FLASHCARD_COMMAND);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        assertTrue(actualFlashcard instanceof OtherFlashcard);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        assertEquals(expectedFlashcard, actualFlashcard);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public void flashcardFactory_unrecognizedFlashcardType_throwsException() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        final String[] unrecognizedFlashcardTypes \u003d {\"eventbds\", \"PeRson123\", \"OTHERASDF\", \"\", \"List\", NEWLINE};"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardFactory flashcardFactory \u003d new FlashcardFactory(new Ui());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        for (String unrecognizedFlashcardType : unrecognizedFlashcardTypes) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            assertThrows("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                UnrecognizedFlashcardTypeException.class, "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                () -\u003e flashcardFactory.create(unrecognizedFlashcardType)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 65
    }
  },
  {
    "path": "src/test/java/seedu/tp/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "package seedu.tp.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.ByeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.EventFlashcardCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.OtherFlashcardCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.commands.PersonFlashcardCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.HistoryFlashcardException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.exceptions.InvalidFlashcardIndexException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardFactory;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.flashcard.FlashcardList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import seedu.tp.ui.Ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "// Solution below referenced and adopted from:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "// https://github.com/se-edu/addressbook-level2/blob/master/test/java/seedu/addressbook/parser/ParserTest.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     * Initializes a new Parser for each test case."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        FlashcardFactory flashcardFactory \u003d new FlashcardFactory(ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        FlashcardList flashcardList \u003d new FlashcardList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        parser \u003d new Parser(flashcardFactory, flashcardList, ui);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void parse_eventFlashcardCommand_lowerCaseCorrect() throws HistoryFlashcardException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Command command \u003d parser.parseCommand(\"event\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertTrue(command instanceof EventFlashcardCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void parse_eventFlashcardCommand_mixedCaseCorrect() throws HistoryFlashcardException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Command command \u003d parser.parseCommand(\"EveNt\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertTrue(command instanceof EventFlashcardCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void parse_personFlashcardCommand_lowerCaseCorrect() throws HistoryFlashcardException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Command command \u003d parser.parseCommand(\"person\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertTrue(command instanceof PersonFlashcardCommand);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void parse_personFlashcardCommand_mixedCaseCorrect() throws HistoryFlashcardException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Command command \u003d parser.parseCommand(\"pERson\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertTrue(command instanceof PersonFlashcardCommand);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void parse_otherFlashcardCommand_lowerCaseCorrect() throws HistoryFlashcardException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Command command \u003d parser.parseCommand(\"other\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertTrue(command instanceof OtherFlashcardCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void parse_otherFlashcardCommand_mixedCaseCorrect() throws HistoryFlashcardException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Command command \u003d parser.parseCommand(\"oThER\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertTrue(command instanceof OtherFlashcardCommand);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void parse_listCommand_lowerCaseCorrect() throws HistoryFlashcardException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Command command \u003d parser.parseCommand(\"list\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertTrue(command instanceof ListCommand);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void parse_listCommand_mixedCaseCorrect() throws HistoryFlashcardException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Command command \u003d parser.parseCommand(\"LISt\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertTrue(command instanceof ListCommand);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void parse_deleteCommand_lowerCaseCorrect() throws HistoryFlashcardException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Command command \u003d parser.parseCommand(\"delete 1\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertTrue(command instanceof DeleteCommand);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void parse_deleteCommand_mixedCaseCorrect() throws HistoryFlashcardException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Command command \u003d parser.parseCommand(\"dELEte 1\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertTrue(command instanceof DeleteCommand);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void parse_deleteCommand_wrongNumberFormat() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        // Solution below adopted from:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        // https://stackoverflow.com/questions/40268446/junit-5-how-to-assert-an-exception-is-thrown"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertThrows("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            InvalidFlashcardIndexException.class,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            () -\u003e parser.parseCommand(\"delete random\"),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "            \"Expected InvalidFlashcardIndexException\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void parse_byeCommand_lowerCaseCorrect() throws HistoryFlashcardException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Command command \u003d parser.parseCommand(\"bye\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertTrue(command instanceof ByeCommand);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    public void parse_byeCommand_mixedCaseCorrect() throws HistoryFlashcardException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        Command command \u003d parser.parseCommand(\"ByE\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "        assertTrue(command instanceof ByeCommand);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 120
    }
  },
  {
    "path": "src/test/java/seedu/tp/utils/ExampleInputConstants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class ExampleInputConstants {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static final String NAME \u003d \"Example name\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static final String START_DATE \u003d \"10/5/1784\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static final String END_DATE \u003d \"17/4/1892\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static final String SUMMARY \u003d \"Example summary\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static final String DETAIL_1 \u003d \"Detail 1\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static final String DETAIL_2 \u003d \"Detail 2\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static final List\u003cString\u003e DETAILS \u003d Arrays.asList(DETAIL_1, DETAIL_2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static final String NEWLINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static final String FULL_SIMULATED_INPUT \u003d NAME + NEWLINE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            + START_DATE + NEWLINE"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            + END_DATE + NEWLINE"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            + SUMMARY + NEWLINE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            + DETAIL_1 + NEWLINE"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            + DETAIL_2 + NEWLINE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            + NEWLINE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static final String PARTIAL_SIMULATED_INPUT \u003d NAME + NEWLINE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            + SUMMARY + NEWLINE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            + DETAIL_1 + NEWLINE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            + DETAIL_2 + NEWLINE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            + NEWLINE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 27
    }
  },
  {
    "path": "src/test/java/seedu/tp/utils/InputTestUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package seedu.tp.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.flashcard.FlashcardFactory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import seedu.tp.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class InputTestUtil {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    private static final InputStream SYS_IN_BACKUP \u003d System.in;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * Used to simulate user creation of a flashcard in JUnit testing environment."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @param simulatedInput The desired input of the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     * @return a \u003ccode\u003eFlashcardFactory\u003c/code\u003e object that can be used to create Flashcards based on simualtedInput"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static FlashcardFactory getFlashcardFactoryWithInput(String simulatedInput) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        ByteArrayInputStream simulatedSystemIn \u003d new ByteArrayInputStream(simulatedInput.getBytes());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.setIn(simulatedSystemIn);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        FlashcardFactory flashcardFactory \u003d new FlashcardFactory(new Ui());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.setIn(SYS_IN_BACKUP);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return flashcardFactory;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "asdf"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "event"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "Meiji Restoration"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "1868"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "1868"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "Turning point in Japanese history"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "End of Shogunate"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "Centralization of power"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "Functional end of Samurai Class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "person"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "Albus Dumbledore"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "Late August, 1881"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "30 June‎, ‎1997‎"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "Albus Dumbledore was never proud or vain."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "He could find something to value in anyone, however apparently insignificant or wretched"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "Dumbledore became most famous for his defeat of Gellert Grindelwald, the discovery of the twelve uses of dragon\u0027s blood, and his work on alchemy with Nicolas Flamel"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "other"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "Resurrection Stone"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "The Resurrection Stone is one of the fabled Deathly Hallows."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "In \"The Tale of the Three Brothers\", it was the second Hallow created, supposedly by Death himself"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "It was bestowed upon Cadmus Peverell after he requested, as his bounty, something with the power to recall loved ones from Death"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "According to legend, whoever reunited it with the other two Hallows (the Elder Wand and the Cloak of Invisibility) would become the Master of Death"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "delete random"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhilin-Huang"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Zhilin-Huang": 30,
      "quinnyyy": 10
    }
  }
]
