[
  {
    "path": "docs/AboutUs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Kok Joon | [Github](https://github.com/kokjoon97) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Trisha Labi | [Github](https://github.com/trishaangelica) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Joshua Loh | [Github](https://github.com/JLoh579) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jia Juin | [Github](https://github.com/jiajuinphoon) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wong Jin En Shannon | [Github](https://github.com/Shannonwje) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 1,
      "JLoh579": 1,
      "Shannonwje": 1,
      "jiajuinphoon": 2,
      "-": 4,
      "trishaangelica": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import seedu.duke.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import seedu.duke.data.Budget;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import seedu.duke.data.ShoppingList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\t /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static Budget myBudget \u003d new Budget();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static ShoppingList items \u003d new ShoppingList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /** Runs the program until termination.  */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Sets up the required objects, loads up the data from the storage file, and prints the welcome message."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.println(\"HELLO\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /** Prints the Goodbye message and exits. */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.println(\"BYE\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /** Reads the user command and executes it, until the user issues the exit command.  */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            String userCommandText \u003d readCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            command \u003d new Parser().parseCommand(userCommandText);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            CommandResult result \u003d executeCommand(command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(result.feedbackToUser);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } while (!ExitCommand.isExit(command));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        while(input.isEmpty()){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            input \u003d in.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            input \u003d input.trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param command user command"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @return result of the command"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private CommandResult executeCommand(Command command) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            command.setData(items,myBudget);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            CommandResult result \u003d command.execute();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            command.setData(items,myBudget);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 4,
      "kokjoon97": 2,
      "-": 15,
      "trishaangelica": 63
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import seedu.duke.data.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import seedu.duke.data.ShoppingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"ADD\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String SUCCESS_ACK \u003d \"Added this item: \" + \"%s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private Item Add;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public AddCommand(String description, double price){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.Add \u003d new Item(description, price);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandResult execute()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        ShoppingList.add(Add);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return new CommandResult(String.format(SUCCESS_ACK,Add));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    //By right should be able to run once the other function is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"CLEAR\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Your shopping list has been cleared.\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        items.clearList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import seedu.duke.data.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import seedu.duke.data.ShoppingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    protected ShoppingList items;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    protected Budget myBudget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public void setData(ShoppingList items,Budget myBudget) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.items \u003d items;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.myBudget \u003d myBudget;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 4,
      "kokjoon97": 5,
      "trishaangelica": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import seedu.duke.data.Item;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /** The feedback message to be shown to the user. Contains a description of the execution result */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public final ArrayList\u003cItem\u003e items;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.items \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult(String feedbackToUser, ArrayList\u003cItem\u003e items) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.items \u003d items;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import seedu.duke.data.ShoppingList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"DEL\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String DELETE_MESSAGE \u003d \"Got it! I have removed the following item:\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        index -\u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String feedback \u003d DELETE_MESSAGE + ShoppingList.getItem(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ShoppingList.deleteItem(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 23,
      "JLoh579": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/EditCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import seedu.duke.data.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import seedu.duke.data.ShoppingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"EDIT\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d System.lineSeparator() + \"The item has been updated to: %s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_FAILURE \u003d System.lineSeparator() + \"OOPS! You have entered an invalid index no. ..\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private int indexOfItem;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private String newDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private String newPrice;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public EditCommand(int index, String description, String price) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.indexOfItem \u003d index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.newDescription \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.newPrice \u003d price;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            indexOfItem -\u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            Item item \u003d ShoppingList.getItem(indexOfItem);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if(newDescription \u003d\u003d null \u0026\u0026 newPrice !\u003d null){ //only edit price"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                 item.setPrice(Double.parseDouble(newPrice));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            else if(newPrice \u003d\u003d null \u0026\u0026 newDescription !\u003d null){ //only edit description"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                item.setDescription(newDescription);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            else if(newPrice !\u003d null \u0026\u0026 newDescription !\u003d null){ //edit both price and description"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                item.setDescription(newDescription);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                item.setPrice(Double.parseDouble(newPrice));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, item.toString()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (NullPointerException | NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(MESSAGE_FAILURE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 2,
      "trishaangelica": 41
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"BYE\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting SHOCO as requested ...\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return command instanceof ExitCommand; // instanceof returns false if it is null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 3,
      "trishaangelica": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Shows help instructions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"HELP\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + System.lineSeparator();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return new CommandResult(HelpCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Represents an incorrect command. Upon execution, produces some feedback to the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public IncorrectCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return new CommandResult(feedbackToUser);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import seedu.duke.data.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"DISPLAY\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String LIST_MESSAGE \u003d \"Here is your shopping list:\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String TOTAL_COST_MESSAGE \u003d \"Total cost of items: %.2f\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String BUDGET_MESSAGE \u003d \"Your remaining budget / total budget: %.2f / %.2f\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String feedback \u003d LIST_MESSAGE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        feedback \u003d items.compileList(feedback);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        double totalCost \u003d 0.0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        for (Item item : items.getList()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            totalCost +\u003d item.getPrice();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        feedback \u003d feedback + String.format(TOTAL_COST_MESSAGE, totalCost);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        feedback \u003d feedback + String.format(BUDGET_MESSAGE, myBudget.getRemainingBudget(totalCost), myBudget.getAmount());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/MarkCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import seedu.duke.data.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import seedu.duke.data.ShoppingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "public class MarkCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"MARK\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String SUCCESS_MESSAGE \u003d \"Yes! I\u0027ve marked this item as bought: \""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            + System.lineSeparator() + \"%s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String FAIL_MESSAGE \u003d \"Oh No! This item does not exist in the list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    private int indexOfItem;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public MarkCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        this.indexOfItem \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Item markItem \u003d ShoppingList.markAsBought(indexOfItem);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return new CommandResult(String.format(SUCCESS_MESSAGE, markItem));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ResetBudgetCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "public class ResetBudgetCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"RES\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String SUCCESS_RESET_BUDGET \u003d \"Budget has been reset to $0.00\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public ResetBudgetCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        myBudget.resetBudget();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return new CommandResult(SUCCESS_RESET_BUDGET);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/SetBudgetCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class SetBudgetCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"SET\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String SET_BUDGET_MESSAGE \u003d \"Setting budget to \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public SetBudgetCommand(double amount) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        myBudget.setBudget(amount);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String feedback \u003d SET_BUDGET_MESSAGE + \"$\" + amount;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 21,
      "JLoh579": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/UnmarkCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import seedu.duke.data.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import seedu.duke.data.ShoppingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "public class UnmarkCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"UNMARK\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String SUCCESS_MESSAGE \u003d \"Yes! I\u0027ve unmarked this item as bought: \""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            + System.lineSeparator() + \"%s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String FAIL_MESSAGE \u003d \"Oh No! This item does not exist in the list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    private int indexOfItem;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public UnmarkCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        this.indexOfItem \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Item unmarkItem \u003d ShoppingList.unmarkAsBought(indexOfItem);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return new CommandResult(String.format(SUCCESS_MESSAGE, unmarkItem));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/Budget.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Budget {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    final static double MAX \u003d 5000;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    final static double MIN \u003d 0;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public Budget() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.amount \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void setBudget(double amount){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.amount \u003d Math.min(amount,MAX);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.amount \u003d Math.max(amount,MIN);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public double getRemainingBudget(double totalCost) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return amount - totalCost;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public void resetBudget() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        this.amount \u003d 0.0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 21,
      "Shannonwje": 3,
      "trishaangelica": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/Item.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Item {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private double price;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    private boolean isBought;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String BOUGHT \u003d \"B\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String NOT_BOUGHT \u003d \"0\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public Item(String description,double price) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.price \u003d price;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        this.isBought \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public Item(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.price \u003d 0.0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        this.isBought \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public void setPrice(double price) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.price \u003d price;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public double getPrice() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return price;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (isBought) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            return BOUGHT;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            return NOT_BOUGHT;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public void markAsBought() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        isBought \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public void unmarkAsBought() { isBought \u003d false; }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description + \" $\" + price;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 1,
      "Shannonwje": 20,
      "jiajuinphoon": 1,
      "trishaangelica": 37
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/ShoppingList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import seedu.duke.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import seedu.duke.commands.MarkCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import seedu.duke.commands.UnmarkCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class ShoppingList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static ArrayList\u003cItem\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static double budget;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static double cost;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    private static Command newCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public ShoppingList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public ArrayList\u003cItem\u003e getList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return items;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String compileList(String feedback) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int bulletNum \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String itemLine;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        for (Item item : items) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            itemLine \u003d bulletNum + \". \" + item.toString() + \"\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            feedback \u003d feedback + itemLine;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            bulletNum++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return feedback;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void clearList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        items.clear();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Marks item in index as bought"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param index index of item to mark"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @return item that is marked"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static Item markAsBought(int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (index \u003e\u003d items.size()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            newCommand \u003d new IncorrectCommand(MarkCommand.FAIL_MESSAGE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Item itemBought \u003d items.get(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        itemBought.markAsBought();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return itemBought;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Returns the item at the specified index."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param index Index of the item requested."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @return Item at the specified index."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static Item getItem(int index) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return items.get(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Unmarks item in index as bought"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param index index of item to unmark"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @return item that is unmarked"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static Item unmarkAsBought(int index) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (index \u003e\u003d items.size()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            newCommand \u003d new IncorrectCommand(UnmarkCommand.FAIL_MESSAGE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Item itemNotBought \u003d items.get(index);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        itemNotBought.unmarkAsBought();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return itemNotBought;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Removes an item at the specified index."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param index Index of the item to be removed."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static void deleteItem(int index) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        Item unwantedItem \u003d items.get(index);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        items.remove(unwantedItem);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static void add(Item toAdd) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        items.add(toAdd);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 26,
      "kokjoon97": 8,
      "Shannonwje": 36,
      "jiajuinphoon": 3,
      "trishaangelica": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import seedu.duke.commands.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import seedu.duke.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import seedu.duke.commands.ClearCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import seedu.duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import seedu.duke.commands.SetBudgetCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import seedu.duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import seedu.duke.commands.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import seedu.duke.commands.UnmarkCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import seedu.duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import seedu.duke.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import seedu.duke.commands.EditCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    private static Command newCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e^[\\\\S]+)(?\u003carguments\u003e[\\\\d\\\\s\\\\S]*$)\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            newCommand \u003d new IncorrectCommand(\"Invalid input. Please try again or type \u0027help\u0027 to show a list of instructions.\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\").trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\").trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return prepareAdd(arguments);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        case MarkCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            createMarkCommand(arguments);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        case UnmarkCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            createUnmarkCommand(arguments);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            createEditCommand(arguments);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            createDeleteCommand(arguments);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            createListCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case ClearCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            createClearCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        case SetBudgetCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            createSetBudgetCommand(arguments);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        case ResetBudgetCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            createResetBudgetCommand();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case HelpCommand.COMMAND_WORD: // Fallthrough"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            createExitCommand();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            createHelpCommand();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return newCommand;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private void createClearCommand() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        newCommand \u003d new ClearCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private void createListCommand() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        newCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Initialises the ResetBudgetCommand"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void createResetBudgetCommand() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        newCommand \u003d new ResetBudgetCommand();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private Command prepareAdd(String arguments) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        String[] args \u003d splitArgsForAddCommand(arguments);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        String prices;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        description \u003d args[1];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        prices \u003d args[2];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        double price \u003d Double.parseDouble(prices);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return new AddCommand(description,price);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private String[] splitArgsForAddCommand(String arguments) throws NullPointerException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        String[] ArgsArray;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        String descriptionDelimiter \u003d \"i/\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        String priceDelimiter \u003d \"p/\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        String  itemPrice, itemDescription;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        int buffer \u003d 2;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        int indexOfiPrefix, indexOfpPrefix;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        boolean descriptionPresent \u003d arguments.contains(descriptionDelimiter);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        boolean pricePresent \u003d arguments.contains(priceDelimiter);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if(descriptionPresent \u0026\u0026 !pricePresent) { //eg: add i/apple"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            indexOfiPrefix \u003d arguments.trim().indexOf(descriptionDelimiter);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            itemDescription \u003d arguments.trim().substring(indexOfiPrefix + buffer);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            ArgsArray \u003d new String[]{itemDescription, null};"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else if (descriptionPresent \u0026\u0026 pricePresent) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            indexOfiPrefix \u003d arguments.trim().indexOf(descriptionDelimiter);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            indexOfpPrefix \u003d arguments.trim().indexOf(priceDelimiter);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            if(indexOfpPrefix \u003c indexOfiPrefix) { //e.g args: edit 2 p/4.50 i/apple"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                itemDescription \u003d arguments.trim().substring(indexOfiPrefix + buffer);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                itemPrice \u003d arguments.substring(indexOfpPrefix + buffer, indexOfiPrefix);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                itemDescription \u003d arguments.trim().substring(indexOfiPrefix + buffer, indexOfpPrefix);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                itemPrice \u003d arguments.substring(indexOfpPrefix + buffer);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            ArgsArray \u003d new String[]{itemDescription, itemPrice};"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            ArgsArray \u003d new String[]{null, null};"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if(ArgsArray[1] \u003d\u003d null \u0026\u0026 ArgsArray[2] \u003d\u003d null){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return ArgsArray;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Initialises the EditCommand."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private void createEditCommand(String arguments) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        int indexOfItem;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String newItemPrice;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String newItemDescription;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            String[] args \u003d splitArgsforEditCommand(arguments);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            indexOfItem \u003d Integer.parseInt(args[0]);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            newItemDescription \u003d args[1];"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            newItemPrice \u003d args[2];"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            newCommand \u003d new EditCommand(indexOfItem, newItemDescription, newItemPrice);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (NumberFormatException | NullPointerException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            newCommand \u003d new IncorrectCommand(System.lineSeparator()"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + \"Error! Index of item must be a positive number and the price of an item\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + \"has to be in decimal form\\n  Example: edit 2 i/apple p/2.50\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Initialises the Unmark Command"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void createUnmarkCommand(String arguments) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String[] words \u003d arguments.trim().split(\" \");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (words.length !\u003d 1) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            newCommand \u003d new IncorrectCommand(\"Can\u0027t find the item to unmark! Try again\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        int index \u003d Integer.parseInt(words[0]) - 1;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        newCommand \u003d new UnmarkCommand(index);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Initialises the MarkCommand"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void createMarkCommand(String arguments) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String[] words \u003d arguments.trim().split(\" \");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (words.length !\u003d 1) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            newCommand \u003d new IncorrectCommand(\"Can\u0027t find the item to mark! Try again\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        int index \u003d Integer.parseInt(words[0]) - 1;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        newCommand \u003d new MarkCommand(index);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Split args for Edit Command"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private String[] splitArgsforEditCommand(String arguments) throws NullPointerException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String[] ArgsArray;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String descriptionDelimiter \u003d \"i/\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String priceDelimiter \u003d \"p/\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String indexOfItem, itemPrice, itemDescription;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        int buffer \u003d 2;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        int indexOfiPrefix, indexOfpPrefix;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        boolean descriptionPresent \u003d arguments.contains(descriptionDelimiter);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        boolean pricePresent \u003d arguments.contains(priceDelimiter);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (descriptionPresent \u0026\u0026 !pricePresent) { //e.g args: edit 2 i/apple"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            indexOfiPrefix \u003d arguments.trim().indexOf(descriptionDelimiter);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            itemDescription \u003d arguments.trim().substring(indexOfiPrefix + buffer);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            indexOfItem \u003d arguments.substring(0, indexOfiPrefix).trim();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ArgsArray \u003d new String[]{indexOfItem, itemDescription, null};"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else if (pricePresent \u0026\u0026 !descriptionPresent) { //e.g args: edit 2 p/4.50"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            indexOfpPrefix \u003d arguments.trim().indexOf(priceDelimiter);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            itemPrice \u003d arguments.trim().substring(indexOfpPrefix + buffer);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            indexOfItem \u003d arguments.substring(0, indexOfpPrefix).trim();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ArgsArray \u003d new String[]{indexOfItem, null, itemPrice};"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else if (descriptionPresent \u0026\u0026 pricePresent) { //e.g args: edit 2 i/apple p/4.50"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            indexOfiPrefix \u003d arguments.trim().indexOf(descriptionDelimiter);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            indexOfpPrefix \u003d arguments.trim().indexOf(priceDelimiter);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if (indexOfpPrefix \u003c indexOfiPrefix) { //e.g args: edit 2 p/4.50 i/apple"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                indexOfItem \u003d arguments.substring(0, indexOfpPrefix).trim();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                itemDescription \u003d arguments.trim().substring(indexOfiPrefix + buffer);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                itemPrice \u003d arguments.substring(indexOfpPrefix + buffer, indexOfiPrefix);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                indexOfItem \u003d arguments.substring(0, indexOfiPrefix).trim();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                itemDescription \u003d arguments.trim().substring(indexOfiPrefix + buffer, indexOfpPrefix);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                itemPrice \u003d arguments.substring(indexOfpPrefix + buffer);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ArgsArray \u003d new String[]{indexOfItem, itemDescription, itemPrice};"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ArgsArray \u003d new String[]{null, null, null};"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (ArgsArray[1] \u003d\u003d null \u0026\u0026 ArgsArray[2] \u003d\u003d null) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return ArgsArray;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Initialises the ExitCommand."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static void createExitCommand() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        newCommand \u003d new ExitCommand();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Initialises the SetBudgetCommand."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static void createSetBudgetCommand(String arguments) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        double amount \u003d Double.parseDouble(arguments.substring(2));"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        newCommand \u003d new SetBudgetCommand(amount);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Initialises the DeleteCommand."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static void createDeleteCommand(String arguments) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int index \u003d Integer.parseInt(arguments);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        newCommand \u003d new DeleteCommand(index);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Initialises the HelpCommand."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static void createHelpCommand(){"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        newCommand \u003d new HelpCommand();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 25,
      "kokjoon97": 22,
      "Shannonwje": 42,
      "jiajuinphoon": 54,
      "trishaangelica": 127
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/BudgetTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class BudgetTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private Budget testBudget \u003d new Budget();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void getRemaining_zeroTotalCost_remainingEqualsBudget() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        testBudget.setBudget(50);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        double totalCost \u003d 0.0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        assertEquals(testBudget.getRemainingBudget(totalCost), testBudget.getAmount());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void getRemaining_totalCostExceedsBudget_remainingIsNegative() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        testBudget.setBudget(50);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        double totalCost \u003d 60;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        double expectedResult \u003d -10;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        assertEquals(testBudget.getRemainingBudget(totalCost), expectedResult);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public void setBudget_negativeInput_setToZero() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        testBudget.setBudget(0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        double testAmount \u003d -100;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        double expectedResult \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        testBudget.setBudget(testAmount);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        assertEquals(testBudget.getAmount(),expectedResult);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public void setBudget_tooLargeInput_setToMax() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        testBudget.setBudget(0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        double testAmount \u003d 6000;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        double expectedResult \u003d 5000;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        testBudget.setBudget(testAmount);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        assertEquals(testBudget.getAmount(),expectedResult);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 28,
      "kokjoon97": 16
    }
  }
]
