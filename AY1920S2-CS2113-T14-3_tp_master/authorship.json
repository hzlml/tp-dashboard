[
  {
    "path": "CONTRIBUTORS.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Contributors"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Homepage"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---|:---:|:---:|:---:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/123?s\u003d100) | Yuchen Li | [Github](https://github.com/yuchenlichuck/) | [Homepage](http://liyc.fun)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# I would like to join this list. How can I help the project"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/)."
      }
    ],
    "authorContributionMap": {
      "yuchenlichuck": 3,
      "-": 9
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "group \u0027seedu.cafs\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    mainClassName \u003d \"seedu.cafs.Main\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    archiveBaseName \u003d \"Main\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.0.1\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 3,
      "-": 37
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Jingtan | [Github](https://github.com/JTWang2000) | [Portfolio](docs/team/jingtan.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "![](https://www.wework.com/ideas/wp-content/uploads/sites/4/2015/11/cookie-monster1-1120x630.jpg) | Daniel Ho | [Github](https://github.com/Bencotti) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "![](https://img1.looper.com/img/gallery/detective-pikachu-2-release-date-cast-and-plot/intro-1568566852.jpg) | Ricardo Sanchez-Macias | [Github](https://github.com/rsanchez-macias) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 1,
      "rsanchez-macias": 1,
      "Bencotti": 1,
      "-": 7
    }
  },
  {
    "path": "src/main/java/seedu/cafs/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.cafs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Entry point of the Address Book application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Main Duke constructor to set up required classes and check for data file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Main() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // search for folder, create if not found"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        storage.checkFolderPath();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // populate if data file is found"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (storage.checkFileExists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "           // storage.populateList(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Reads the user command and executes it, until the user issues the exit command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String userCommandText \u003d ui.readCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            command \u003d new Parser().parseCommand(userCommandText);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            command.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                command.execute();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            } catch (ProjException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } while (!command.isExit()); // will be solved when do is enabled"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        new Main().run();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 9,
      "Bencotti": 53
    }
  },
  {
    "path": "src/main/java/seedu/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static seedu.common.Constants.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private int wordArrayLength;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private char taskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public AddCommand(String userCommand, int wordArrayLength, char taskType) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.userInput \u003d userCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.wordArrayLength  \u003d wordArrayLength;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Checks if the input task format is correct for deadline and event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return True if it is correct."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private Boolean isFormatCorrect() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String[] inputSections \u003d userInput.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        int dividerPosition \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (inputSections.length \u003c 4) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            /** handle command : command / time*/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } else if (dividerPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            /** handle command : command task/ time */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "             return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } else if (dividerPosition \u003d\u003d userInput.length() - 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            /** handle command without time*/"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } else if (taskType \u003d\u003d TASK_DEADLINE) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            /** handle command: deadline / time task*/"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int deadlineDividerPosition \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if(deadlineDividerPosition \u003d\u003d DEADLINE_LENGTH + 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } else if (taskType \u003d\u003d TASK_EVENT) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            /** handle command: event / time task*/"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int eventDividerPosition \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if(eventDividerPosition \u003d\u003d EVENT_LENGTH + 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Adds different types of tasks in list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void execute() throws ProjException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String[] inputSections \u003d userInput.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (inputSections.length \u003c 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new ProjException(\"The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case TASK_DEADLINE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            /** Format: deadline tasks / yyyy-mm-dd*/"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if (!isFormatCorrect()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                throw new ProjException(\"Please follow the format: deadline tasks / yyyy-mm-dd\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            tasks.addDeadline(userInput, wordArrayLength);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case TASK_EVENT:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            /** Format: event tasks / yyyy-mm-dd*/"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if (!isFormatCorrect()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                throw new ProjException(\"Please follow the format: deadline tasks / yyyy-mm-dd\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            tasks.addEvent(userInput, wordArrayLength);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case TASK_TODO:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            /** Format: todo tasks*/"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            tasks.addTodo(userInput, wordArrayLength);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            System.out.println(\"[Error][New Task]: Keyword not recognised!\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            System.out.println(\"Task types:\\ntodo\\nevent\\ndeadline\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "         * Can replace the userInput into the task type."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "         * E.g. Ui.showAddTask(Task tasks[i]) where i is the index of the newly added tasks"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "         */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Ui.showAddTask(userInput,tasks.size());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        //storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 94
    }
  },
  {
    "path": "src/main/java/seedu/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Represents an executable command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Called to check if exit command is given"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return condition whether program should continue looping or exit"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Supplies the objects other commands will call upon"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param tasks  current instance of tasks and corresponding tasklist methods"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param storage instance of storage object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param ui instance of user interaction object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void setCommandVariables(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Executes user command processed by parser"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public abstract void execute() throws ProjException;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 2,
      "Bencotti": 43
    }
  },
  {
    "path": "src/main/java/seedu/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Sends the exit signal to main loop, program is exited after this command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    final String BYE_MESSAGE \u003d \"CAFS: Bye, hope to see you again!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Check if exit command is given"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return signal to main loop that program will be terminated"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui.showUserMessage(BYE_MESSAGE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Bencotti": 24
    }
  },
  {
    "path": "src/main/java/seedu/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class HelpCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String legend \u003d Messages.getLegend();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String commands \u003d Messages.getCommands();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui.showUserMessage(commands, legend);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 13
    }
  },
  {
    "path": "src/main/java/seedu/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 7
    }
  },
  {
    "path": "src/main/java/seedu/common/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public final class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final char TASK_TODO \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final char TASK_EVENT \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final char TASK_DEADLINE \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final int DEADLINE_LENGTH \u003d 8;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final int EVENT_LENGTH \u003d 5;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 9
    }
  },
  {
    "path": "src/main/java/seedu/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.command.HelpCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Container class for repeated static Strings"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    final static String HELP_COMMAND \u003d \"Command List:\\n\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    final static String HELP_LEGEND \u003d \"Legend:\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    + \"[Y]: Task is completed\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    + \"[N]: Task is not completed\\n\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    final static String HELP_EXIT \u003d \"Exit: Exits program \\nUsage: bye\\n\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    final static String HELP_LIST \u003d \"List: Lists all recorded tasks \\nUsage: list\\n\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    final static String HELP_DONE \u003d \"Done: Mark task as completed \\nUsage: \\n\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    final static String HELP_TODO \u003d \"Todo: Basic Tasks without date/time \\nUsage:  \\n\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    final static String HELP_EVENT \u003d \"Event: Event tasks including date/time \\nUsage:  \\n\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    final static String HELP_DEADLINE \u003d \"Deadline: Deadline tasks including date/time \\nUsage: \\n\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    final static String HELP_DELETE \u003d \"Delete: Deletes task from list \\nUsage: \\n\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    final static String HELP_FIND \u003d \"Find: Search for task using keyword \\nUsage: \\n\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String getCommands() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String fullCommand \u003d HELP_COMMAND + HELP_EXIT + HELP_LIST + HELP_DONE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + HELP_TODO + HELP_EVENT + HELP_DEADLINE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + HELP_DELETE + HELP_FIND;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return fullCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String getLegend() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return HELP_LEGEND;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 32
    }
  },
  {
    "path": "src/main/java/seedu/exception/ProjException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class ProjException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public ProjException(String error) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 7
    }
  },
  {
    "path": "src/main/java/seedu/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static seedu.common.Constants.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Parses user input into command for execution"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param userCommand user input including command word and parameters"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return  command based on user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static Command parseCommand(String userCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        //parsing based on first word of command string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String[] commandSections \u003d userCommand.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        int wordLength \u003d commandSections.length;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        switch (commandSections[0]) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            // return prepareDoneCommand(commandSections[1], wordLength);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            // return new HelpCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            // return prepareDeleteCommand(commandSections[1], wordLength);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new AddCommand(userCommand, wordLength,TASK_TODO);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new AddCommand(userCommand, wordLength, TASK_EVENT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new AddCommand(userCommand, wordLength, TASK_DEADLINE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            // return new FindCommand(commandSections[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Command not recognised\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 8,
      "Bencotti": 37
    }
  },
  {
    "path": "src/main/java/seedu/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final String WORKING_DIRECTORY \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final java.nio.file.Path FOLDER_PATH \u003d java.nio.file.Paths.get(WORKING_DIRECTORY, \"Duke\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final java.nio.file.Path FILE_PATH \u003d java.nio.file.Paths.get(WORKING_DIRECTORY, \"Duke\", \"data.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Locate folder location and check availability"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * If missing create folder"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void checkFolderPath() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean directoryExists \u003d java.nio.file.Files.exists(FOLDER_PATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            if (!directoryExists) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                Files.createDirectory(FOLDER_PATH);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Directory created\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Directory found\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error creating folder!\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Check whether data file has is present in directory"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return status of file availability"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static boolean checkFileExists() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean fileExists \u003d java.nio.file.Files.exists(FILE_PATH);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return fileExists;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static void writeToFile(TaskList tasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            File file \u003d new File(String.valueOf(FILE_PATH));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            for(int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                myWriter.write(tasks.getTask(i));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            System.out.println(\"Successfully updated data file!\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 19,
      "Bencotti": 40
    }
  },
  {
    "path": "src/main/java/seedu/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private static ArrayList\u003cString\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        tasks \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static void addDeadline(String userInput, int wordArrayLength) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        tasks.add(userInput);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static void addEvent(String userInput, int wordArrayLength) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        tasks.add(userInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static void addTodo(String userInput, int wordArrayLength) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        tasks.add(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static int size() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static String getTask(int taskIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return tasks.get(taskIndex);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 27,
      "Bencotti": 4
    }
  },
  {
    "path": "src/main/java/seedu/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /** A platform independent line separator. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final String NEW_LINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final String DIVIDER \u003d \"________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private  static final  String LOGO \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                \" ______     ______     ______   ______\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"/\\\\  ___\\\\   /\\\\  __ \\\\   /\\\\  ___\\\\ /\\\\  ___\\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"\\\\ \\\\ \\\\____  \\\\ \\\\  __ \\\\  \\\\ \\\\  __\\\\ \\\\ \\\\___  \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \" \\\\ \\\\_____\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\    \\\\/\\\\_____\\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"  \\\\/_____/   \\\\/_/\\\\/_/   \\\\/_/     \\\\/_____/\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Returns true if the user input line should be ignored."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Input should be ignored if it is only whitespace, or is empty. (add more conditions if needed)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param rawInputLine full raw user input line."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return true if the entire user input line should be ignored."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private boolean shouldIgnoreInput(String rawInputLine) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return rawInputLine.trim().isEmpty();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Method used to print all messages back to user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Meant to improve performance by reducing number of system calls used"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param messages  Variable length argument to display to users"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void showUserMessage(String... messages) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        for (String message : messages)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        showUserMessage(LOGO, NEW_LINE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Prompts user for input"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return String containing user command for parsing"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String userCommand \u003d input.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Prints prompt message that a task is successfully added"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param userInput can be replaced with Task addedTask if there is task type implemented later"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static void showAddTask(String userInput, int taskCount) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.print(\"Successfully add tasks: \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(userInput);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"There are \" + taskCount + \" in your list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static void showTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"There are \" + tasks.size() + \" tasks in your list now.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            System.out.print((i + 1) + \". \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            System.out.println(tasks.getTask(i));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 20,
      "Bencotti": 55
    }
  },
  {
    "path": "src/test/java/seedu/cafs/MainTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.cafs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "class MainTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 2,
      "-": 10
    }
  },
  {
    "path": "src/test/seedu/cafs/MainTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.cafs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "class MainTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    void run() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    void main() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 17
    }
  },
  {
    "path": "src/test/seedu/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    void parseCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "       assertNotNull(new Object());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "       //assertNull(null);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 1,
      "-": 18
    }
  }
]
