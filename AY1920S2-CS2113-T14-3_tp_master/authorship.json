[
  {
    "path": "CONTRIBUTORS.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Contributors"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Homepage"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---|:---:|:---:|:---:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Daniel Ho | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Ricardo | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/123?s\u003d100) | Yuchen Li | [Github](https://github.com/yuchenlichuck/) | [Homepage](http://liyc.fun)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/123?s\u003d100) | Jintan Wang | [Github](https://github.com/yuchenlichuck/) | [Homepage](http://liyc.fun)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# I would like to join this list. How can I help the project"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/)."
      }
    ],
    "authorContributionMap": {
      "yuchenlichuck": 6,
      "-": 7
    }
  },
  {
    "path": "Save/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "[{\"title\":\"task \",\"description\":\"\",\"date\":\"2020-04-12\",\"time\":\"11.15 AM\",\"location\":\"\",\"reminder\":\"\",\"category\":\"TODO\"}]"
      }
    ],
    "authorContributionMap": {
      "yuchenlichuck": 1
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "group \u0027seedu.cafs\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    mainClassName \u003d \"seedu.cafs.Main\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    archiveBaseName \u003d \"Main\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.0.1\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 1,
      "Bencotti": 4,
      "-": 37
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Jingtan | [Github](https://github.com/JTWang2000) | [Portfolio](docs/team/jingtan.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "![](https://www.wework.com/ideas/wp-content/uploads/sites/4/2015/11/cookie-monster1-1120x630.jpg) | Daniel Ho | [Github](https://github.com/Bencotti) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "![](https://img1.looper.com/img/gallery/detective-pikachu-2-release-date-cast-and-plot/intro-1568566852.jpg) | Ricardo Sanchez-Macias | [Github](https://github.com/rsanchez-macias) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 1,
      "rsanchez-macias": 1,
      "Bencotti": 1,
      "-": 7
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "CAFS - va CLI task scheduler that supports three "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "different types of tasks (todo, event and deadline). "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "It is simple to use, and comes with a save function to "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "remember your tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "1. Download the latest cafs.jar"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "1. Copy the file to the folder you want to use as the home folder."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "1. Run the jar file using `java - jar caf.jar`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "## 3. Features"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "### 3.1 - Add"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "Users add tasks using this command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `Add  n/\u003cNAME\u003e t/\u003cTime\u003e l/\u003cLOCATION\u003e d/\u003cDATE\u003e i/\u003cINFORMATION\u003e r/\u003cREMINDER\u003e c/\u003cCATEGORY\u003e`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Examples:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        * add t/12:00pm n/UG d/02/18/2020 i/UG deadline r/NUS r/1d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        * add t/15:00 n/Project Meeting  d/01/01/2020   i/Work on awesome features"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        * add t/11:00 n/Response Paper  d/2/2/2020 i/Finish essay c/"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "### 3.2 - List"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* Lists all tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `list`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "### 3.3 - Delete"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* Deletes a task from the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `delete \u003ctask index\u003e`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * use `list` to derive task index"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * index has to be an _integer_"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "### 3.4 - Done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* Changes the status of a task to completed"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `done \u003ctask index\u003e`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * use `list` to derive task index"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * index has to be an _integer_"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "### 3.5 - Find"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* Searches all task descriptions for supplied keyword"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * Keyword has to be a _**single word**_"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * Keyword is case _insensitive_"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "### 3.6 - Help"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* displays the set of commands supported"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `help`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "### 3.7 - Exit"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* Exits the program"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `bye`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "## 4. Sample Usage"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "1. Search for specific keyword: `find class`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * Expected outcome: displays the above two tasks since they contain keyword \"class\" in description"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "## 5. FAQ"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * How do I save my tasks?"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * Tasks are saved automatically and loaded upon start up of application"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * If unable to load, check the directory and file name"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        * Default folder (windows): `C:\\Users\\\u003ccomputer name\u003e\\Save`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        * Default file name: `data.txt`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "## 6. Command Summary"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **Add**: `add n/\u003cNAME\u003e t/\u003cTime\u003e l/\u003cLOCATION\u003e d/\u003cDATE\u003e i/\u003cINFORMATION\u003e r/\u003cREMINDER\u003e c/\u003cCATEGORY\u003e`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **List**: `list` "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **Delete**: `delete \u003ctask index\u003e` "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **Done**: `done \u003ctask index\u003e` "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **Find**: `find \u003ckeyword\u003e` "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **Help**: `help`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **Exit**: `bye`"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 77,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/cafs/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.cafs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Entry point of the CAFS"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static Logger logger \u003d Logger.getLogger(\"Foo\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Main constructor to set up required classes and check for data file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public Main() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // search for folder, create if not found"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        storage.checkFolderPath();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // populate if data file is found"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (storage.checkFileExists()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            // log a message at INFO level"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            logger.log(Level.INFO, \"Attempting to read from data file\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            storage.loadFromFile(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Reads the user command and executes it, until the user issues the exit command."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String userCommandText \u003d ui.readCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            command \u003d new Parser().parseCommand(userCommandText);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            command.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                CommandResult result \u003d command.execute();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                ui.showResultToUser(result);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            } catch (ProjException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } while (!command.isExit()); // will be solved when do is enabled"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        logger.log(Level.INFO, \"end of processing\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        new Main().run();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 5,
      "rsanchez-macias": 7,
      "Bencotti": 62
    }
  },
  {
    "path": "src/main/java/seedu/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.TAB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"Nice! Added the following task to the calendar:\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private static final String MESSAGE_CURRENT_TASKS \u003d \"Now you have %d task/tasks in your list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public AddCommand(String userInput) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.userInput \u003d userInput.trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public CommandResult execute() throws ProjException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String title \u003d getTitle(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (title.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new ProjException(\"Please input a title for the task.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String date \u003d getDate(userInput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String description \u003d getDescription(userInput);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String reminder \u003d getReminder(userInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String time \u003d getTime(userInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String location \u003d getLocation(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String category \u003d getCategory(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        Task task \u003d new Task(title, description, date, time, location, reminder,category);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        storage.overwriteFile(taskList.getList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String feedback \u003d formatFeedback(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        assert !title.isEmpty() : \"Task title should contain at least one char\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private String formatFeedback(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String feedback \u003d MESSAGE_SUCCESS + TAB + TAB + task.toString() + System.lineSeparator()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                + TAB + String.format(MESSAGE_CURRENT_TASKS, taskList.getListSize())"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return feedback;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 28,
      "rsanchez-macias": 26,
      "Bencotti": 1
    }
  },
  {
    "path": "src/main/java/seedu/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /** Lines to print to clear out the console. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private static final int LINES_TO_PRINT \u003d 100;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String feedback \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        for (int i \u003d 0; i \u003c LINES_TO_PRINT; i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            feedback +\u003d System.lineSeparator();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rsanchez-macias": 20
    }
  },
  {
    "path": "src/main/java/seedu/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    // add  n/\u003cNAME\u003e t/\u003cTime\u003e d/\u003cDATE\u003e i/\u003cINFORMATION\u003e l/\u003cLOCATION\u003e r/\u003cREMINDER\u003e c/\u003cCATEGORY\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected static final String TITLE \u003d \"n/\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected static final String TIME \u003d \"t/\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected static final String DATE \u003d \"d/\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected static final String DESCRIPTION \u003d \"i/\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected static final String LOCATION \u003d \"l/\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected static final String REMINDER \u003d \"r/\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected static final String CATEGORY \u003d \"c/\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Called to check if exit command is given."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return condition whether program should continue looping or exit"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Supplies the objects other commands will call upon."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param taskList  current instance of tasks and corresponding tasklist methods"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param storage instance of storage object"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param ui instance of user interaction object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public void setCommandVariables(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Gets the title, if any, from the user input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param userInput raw user input"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return title"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getTitle(String userInput) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String title \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (userInput.contains(TITLE)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int index \u003d userInput.indexOf(TITLE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            title \u003d findField(userInput, index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return title;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Gets the description, if any, from the user input."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param userInput raw user input"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getDescription(String userInput) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (userInput.contains(DESCRIPTION)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int index \u003d userInput.indexOf(DESCRIPTION);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            description \u003d findField(userInput, index);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return description;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Gets the date, if any, from the user input."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param userInput raw user input"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return date"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getDate(String userInput) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (userInput.contains(DATE)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int index \u003d userInput.indexOf(DATE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            date \u003d findField(userInput, index);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Gets the reminder, if any, from the user input."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param userInput raw user input."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return reminder."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getReminder(String userInput) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String reminder \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (userInput.contains(REMINDER)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int index \u003d userInput.indexOf(REMINDER);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            reminder \u003d findField(userInput, index);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return reminder;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return reminder;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Gets the time in format hh:mm, if any, from the user input."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param userInput raw user input."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return time."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getTime(String userInput) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (userInput.contains(TIME)) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int index \u003d userInput.indexOf(TIME);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            time \u003d findField(userInput, index);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return time;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Gets the location, if any, from the user input."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param userInput raw user input."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return location."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getLocation(String userInput) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String location \u003d \"\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (userInput.contains(LOCATION)) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int index \u003d userInput.indexOf(LOCATION);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            location \u003d findField(userInput, index);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return location;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return location;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Gets the category.Default one is TODO."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param userInput raw user input."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return category."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getCategory(String userInput) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String category \u003d \"\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (userInput.contains(CATEGORY)) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int index \u003d userInput.indexOf(CATEGORY);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            category \u003d findField(userInput, index);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return category;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Scans the raw user input to search for the input."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * for a field (e.g. \"essay\" in event n/essay i/world religions)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param userInput raw user input"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param fromIndex index marking the beginning of the field"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return expected field"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private String findField(String userInput, int fromIndex) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String field \u003d \"\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        char nextField \u003d \u0027/\u0027;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        int i \u003d fromIndex + 2;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        while (i \u003c userInput.length() \u0026\u0026 userInput.charAt(i) !\u003d nextField) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            field +\u003d userInput.charAt(i);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (i \u003c userInput.length() \u0026\u0026 userInput.charAt(i) \u003d\u003d nextField) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return field.substring(0, field.length() - 1);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return field;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Executes user command processed by parser."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public abstract CommandResult execute() throws ProjException;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 167,
      "rsanchez-macias": 10,
      "Bencotti": 34
    }
  },
  {
    "path": "src/main/java/seedu/command/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private String feedback;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public CommandResult(String feedback) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        this.feedback \u003d feedback;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public String getFeedback() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return feedback;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rsanchez-macias": 15
    }
  },
  {
    "path": "src/main/java/seedu/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import java.util.IllegalFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.TAB;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"The following task has been removed:\\n %s\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private static final String MESSAGE_INVALID_INDEX \u003d \"The entered index %s is invalid. + \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            + \"Please enter a valid task number\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private static final String MESSAGE_MISSING_NUMBER \u003d \"Missing task number to delete\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private static final String MESSAGE_REMAINING_TASKS \u003d \"Now you have %d task/tasks in your calendar\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public DeleteCommand(String userInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        String[] commandSections \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            String strIndex \u003d commandSections[1].trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            int index \u003d Integer.parseInt(strIndex) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "            //assert index \u003c taskList.getListSize() : \"index \u003e the size of taskList\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            Task removedTask \u003d taskList.deleteTask(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            storage.overwriteFile(taskList.getList());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "            assert removedTask !\u003d null : \"Removed-task is null\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return new CommandResult(formatFeedback(removedTask));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return new CommandResult(MESSAGE_MISSING_NUMBER);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        } catch (IllegalFormatException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            String feedback \u003d String.format(MESSAGE_INVALID_INDEX, commandSections[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return new CommandResult(feedback);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private String formatFeedback(Task removed) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String feedback \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String description \u003d TAB + removed.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        description +\u003d String.format(TAB + MESSAGE_REMAINING_TASKS, taskList.getListSize());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        description +\u003d System.lineSeparator();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        feedback \u003d String.format(MESSAGE_SUCCESS, description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return feedback;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rsanchez-macias": 54,
      "Bencotti": 1,
      "yuchenlichuck": 7
    }
  },
  {
    "path": "src/main/java/seedu/command/EditCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private String taskEdited;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public EditCommand(String taskEdited,String userInput) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.taskEdited \u003d taskEdited;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Checks if a string can be casted to a number."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param str input string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return true if it can be casted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static boolean isNumeric(String str) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            Integer.parseInt(str);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Checks if the user has input that field."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param input a field."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return true if user has input that field."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private Boolean hasInput(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Edit a task by the task index number."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Cannot edit title of a class."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return result of command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws ProjException if input invalid task index."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public CommandResult execute() throws ProjException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Boolean isEdit \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (!isNumeric(taskEdited.trim())) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new ProjException(\"Please input a task index.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Integer taskEdited \u003d Integer.parseInt(this.taskEdited.trim()) - 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String title \u003d getTitle(userInput);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(title)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new ProjException(\"Not allowed to change title.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String description \u003d getDescription(userInput);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(description)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            taskList.changeDescription(taskEdited,description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            isEdit \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String reminder \u003d getReminder(userInput);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(reminder)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            taskList.changeReminder(taskEdited,reminder);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            isEdit \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String date \u003d getDate(userInput);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(date)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            taskList.changeDate(taskEdited,date);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            isEdit \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String time \u003d getTime(userInput);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(time)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            taskList.changeTime(taskEdited,time);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            isEdit \u003d true;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String location \u003d getLocation(userInput);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(location)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            taskList.changeLocation(taskEdited,location);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            isEdit \u003d true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String category \u003d getCategory(userInput);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(category)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            taskList.changeCategory(taskEdited,category);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            isEdit \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        //post condition for checking no title input."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        assert (!hasInput(title));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (isEdit) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String feedback \u003d \"Task \" + (taskEdited + 1) + \" edited\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            feedback \u003d feedback + taskList.getTask(taskEdited).toString() + \"\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new CommandResult(feedback);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new ProjException(\"You have not modified any task as no valid field input. \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 108
    }
  },
  {
    "path": "src/main/java/seedu/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": " * Sends the exit signal to main loop, program is exited after this command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String BYE_MESSAGE \u003d \"CAFS: Bye, hope to see you again!\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Check if exit command is given."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return signal to main loop that program will be terminated"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return new CommandResult(BYE_MESSAGE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "rsanchez-macias": 6,
      "Bencotti": 19
    }
  },
  {
    "path": "src/main/java/seedu/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.exception.CommandExceptions.FindEmptyPatternException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.TAB;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private String pattern;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private static final String MESSAGE_SUCCESS \u003d \"Found the followings tasks:\\n%s\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private static final String MESSAGE_EMPTY_PATTERN \u003d \"Please enter a pattern to look for \\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private static final String MESSAGE_NO_FOUND \u003d \"No tasks found with %s in their title or description\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public FindCommand(String pattern) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        this.pattern \u003d pattern.trim().substring(4).trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String feedback \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            if (pattern.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                throw new FindEmptyPatternException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d taskList.findTasks(pattern);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                feedback +\u003d String.format(MESSAGE_NO_FOUND, pattern);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                feedback \u003d formatFeedback(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        } catch (FindEmptyPatternException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            feedback \u003d MESSAGE_EMPTY_PATTERN;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return new CommandResult(feedback);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private String formatFeedback(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String feedback;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            list +\u003d TAB + TAB + (i + 1) + \". \" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        feedback \u003d String.format(MESSAGE_SUCCESS, list);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return feedback;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rsanchez-macias": 62
    }
  },
  {
    "path": "src/main/java/seedu/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String legend \u003d Messages.getLegend();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String commands \u003d Messages.getCommands();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return new CommandResult(legend + commands);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rsanchez-macias": 3,
      "Bencotti": 11
    }
  },
  {
    "path": "src/main/java/seedu/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String feedback \u003d \"There are \" + tasks.size() + \" tasks in your list.\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            feedback +\u003d \"\\t\" + (i + 1) + \". \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            feedback +\u003d tasks.get(i);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            feedback +\u003d \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 5,
      "rsanchez-macias": 19
    }
  },
  {
    "path": "src/main/java/seedu/common/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public final class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    // TODO Can be refactored to be inside Command classes"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String ADD \u003d \"add\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String HELP \u003d \"help\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String EXIT \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String EDIT \u003d \"edit\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String CLEAR \u003d \"clc\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    // TODO Include each usage in corresponding Command class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String ADD_USAGE \u003d \"add n/[title] i/[description] t/[hh:mm] \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            + \"d/[yyyy-mm-dd] l/[LOCATION] r/[REMINDER] c/[CATEGORY]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String DELETE_USAGE \u003d \"delete [task number]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String FIND_USAGE \u003d \"find [pattern]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String TAB \u003d \"  \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 8,
      "rsanchez-macias": 16
    }
  },
  {
    "path": "src/main/java/seedu/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.command.HelpCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.DELETE_USAGE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.FIND_USAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static seedu.common.Constants.ADD_USAGE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": " * Container class for repeated static Strings."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_COMMAND \u003d \"Command List:\\n\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_LEGEND \u003d \"Legend:\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    + \"[Y]: Task is completed\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    + \"[N]: Task is not completed\\n\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_EXIT \u003d \"Exit: Exits program \\nUsage: bye\\n\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_LIST \u003d \"List: Lists all recorded tasks \\nUsage: list\\n\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_DONE \u003d \"Done: Mark task as completed \\nUsage: \\n\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    static final String HELP_ADD \u003d \"Add: add task \\nUsage: \" + ADD_USAGE + \"\\n\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_DELETE \u003d \"Delete: Deletes task from list \\nUsage: \" + DELETE_USAGE + \"\\n\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_FIND \u003d \"Find: Search for task using keyword \\nUsage: \" + FIND_USAGE + \"\\n\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Formats the list of available commands."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @return list of supported commands"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String getCommands() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String fullCommand \u003d HELP_COMMAND + HELP_EXIT + HELP_LIST + HELP_DONE"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                 + HELP_ADD"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + HELP_DELETE + HELP_FIND;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return fullCommand;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Gets the legend information for the supported commands."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @return legend information"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String getLegend() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return HELP_LEGEND;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 3,
      "rsanchez-macias": 23,
      "Bencotti": 20
    }
  },
  {
    "path": "src/main/java/seedu/exception/CommandExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class CommandExceptions extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static class FindEmptyPatternException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        public FindEmptyPatternException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rsanchez-macias": 13
    }
  },
  {
    "path": "src/main/java/seedu/exception/ProjException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class ProjException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public ProjException(String error) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 7,
      "rsanchez-macias": 2
    }
  },
  {
    "path": "src/main/java/seedu/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.HelpCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.FindCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.EditCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.ClearCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static seedu.common.Constants.ADD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.CLEAR;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.FIND;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.DELETE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.EXIT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.HELP;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.LIST;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static seedu.common.Constants.EDIT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param userCommand user input including command word and parameters"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return  command based on user input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static Command parseCommand(String userCommand) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // parsing based on first word of command string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String[] commandSections \u003d userCommand.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        int wordLength \u003d commandSections.length;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        switch (commandSections[0]) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new DeleteCommand(userCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        case HELP:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case ADD:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new AddCommand(userCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return new FindCommand(userCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case EDIT:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new EditCommand(commandSections[1], userCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        case EXIT:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        case CLEAR:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Command not recognised\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 20,
      "rsanchez-macias": 16,
      "Bencotti": 23
    }
  },
  {
    "path": "src/main/java/seedu/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final String WORKING_DIRECTORY \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final java.nio.file.Path FOLDER_PATH \u003d java.nio.file.Paths.get(WORKING_DIRECTORY, \"Save\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final java.nio.file.Path FILE_PATH \u003d java.nio.file.Paths.get(WORKING_DIRECTORY, \"Save\", \"data.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Locate folder location and check availability."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * If missing create folder."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void checkFolderPath() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean directoryExists \u003d java.nio.file.Files.exists(FOLDER_PATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (!directoryExists) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                Files.createDirectory(FOLDER_PATH);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Error creating folder!\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Check whether data file has is present in directory."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return status of file availability"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static boolean checkFileExists() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean fileExists \u003d java.nio.file.Files.exists(FILE_PATH);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return fileExists;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String convertToGson(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Gson gsonTaskList \u003d new Gson();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return gsonTaskList.toJson(taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String convertToGson(Task task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Gson gsonTaskList \u003d new Gson();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return gsonTaskList.toJson(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Converting data file input string to Task objects within array list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * will change to read string by string instead, to prevent buffer overflow."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param gsonTaskList data file contents saved within a string"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return arraylist of task objects"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static ArrayList\u003cTask\u003e convertFromGson(String gsonTaskList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Type userListType \u003d new TypeToken\u003cArrayList\u003cTask\u003e\u003e(){}.getType();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return gson.fromJson(gsonTaskList, userListType);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Over writes saved data file with latest task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param taskList current task list for saving"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void overwriteFile(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String formattedTaskList \u003d convertToGson(taskList);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            File file \u003d new File(String.valueOf(FILE_PATH));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            myWriter.write(formattedTaskList);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            //System.out.println(\"Successfully updated data file!\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[Error] File cannot be written!\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void saveTaskToFile(Task task) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String formattedTask \u003d convertToGson(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            File file \u003d new File(String.valueOf(FILE_PATH));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            myWriter.write(formattedTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            //System.out.println(\"Successfully updated data file!\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[Error] File cannot be written!\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Reading in data file and storing into tasklist."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param taskList tasklist object created in main"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void loadFromFile(TaskList taskList) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String gsonTaskList \u003d new String(Files.readAllBytes(Paths.get(String.valueOf(FILE_PATH))));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            if (!gsonTaskList.isBlank()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                //System.out.println(gsonTaskList);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                ArrayList\u003cTask\u003e tasks \u003d convertFromGson(gsonTaskList);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                taskList.updateTaskList(tasks);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error reading data file! \\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 5,
      "rsanchez-macias": 3,
      "Bencotti": 111
    }
  },
  {
    "path": "src/main/java/seedu/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void updateTaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        taskList \u003d tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Removes a task and return a reference to that object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param index Index of task to remove"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @return Removed task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        Task toRemove \u003d taskList.get(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return toRemove;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Finds the tasks that contain the given pattern in their"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * title or description."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param pattern pattern to look for in the tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @return tasks that match the pattern"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String pattern) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            if (hasPattern(task, pattern)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                foundTasks.add(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return foundTasks;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    // TODO Fix so that method returns a deep copy of the list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Checks if the given task contains the given pattern."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param task task to inspect"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param pattern pattern to look for in task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @return true if task contains pattern"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private boolean hasPattern(Task task, String pattern) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return task.getTitle().contains(pattern) || task.getDescription().contains(pattern);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    //Mutator methods:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public void changeDescription(int taskIndex, String newDescription) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        taskList.get(taskIndex).setDescription(newDescription);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void changeDate(int taskIndex, String newDate) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        taskList.get(taskIndex).setDate(newDate);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void changeTime(int taskIndex, String newTime) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        taskList.get(taskIndex).setTime(newTime);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void changeLocation(int taskIndex, String newLocation) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        taskList.get(taskIndex).setLocation(newLocation);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void changeReminder(int taskIndex, String newReminder) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        taskList.get(taskIndex).setReminder(newReminder);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void changeCategory(int taskIndex, String newCategory) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        taskList.get(taskIndex).setCategory(newCategory);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 23,
      "rsanchez-macias": 71,
      "Bencotti": 10,
      "yuchenlichuck": 1
    }
  },
  {
    "path": "src/main/java/seedu/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected String location;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected String reminder;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected String category;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Initializes Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param title title of deadline if any."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param description description of deadline if any."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param date date in format:yyyy-mm-dd of deadline if any."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param time time in format: hh:mm of deadline if any."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param location location of deadline if any."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param reminder reminder of deadline if any."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Task(String title, String description, String date,String time, String location,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                String reminder,String category) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(date)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            setDate(date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.date \u003d date;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(time)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            setTime(time);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.time \u003d time;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(category)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.category \u003d category;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.category \u003d \"TODO\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        // post condition check for existence of title"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        assert (title.length() !\u003d 0) : title;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.reminder \u003d reminder;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Check if a field is empty of not."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param input a field."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return true if it is not empty."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private Boolean hasInput(String input) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    //Mutator methods:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Sets time to format: hh.mm aa"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param time input time with accepted format: hh:mm"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void setTime(String time) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            DateFormat originalFormat \u003d new SimpleDateFormat(\"hh:mm\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            Date oringialTime \u003d originalFormat.parse(time);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            DateFormat newFormat \u003d new SimpleDateFormat(\"hh.mm aa\", Locale.US);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.time \u003d newFormat.format(oringialTime).toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.time \u003d \"(Unknown time)\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Set Date to format:yyyy-mm-dd and check if date is correct."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param date input date"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void setDate(String date) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String[] dateInfo \u003d date.split(\"-\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int year \u003d Integer.parseInt(dateInfo[0].trim());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int month \u003d Integer.parseInt(dateInfo[1].trim());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int day \u003d Integer.parseInt(dateInfo[2].trim());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if (!(day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d 30)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if (!(month \u003e\u003d 1 \u0026\u0026 month \u003c\u003d 12)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.date \u003d date;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.date \u003d \"(Unknown Date)\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.date \u003d \"(Unknown Date)\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Sets the task description."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param description new description"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void setLocation(String location) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void setReminder(String reminder) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.reminder \u003d reminder;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void setCategory(String category) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    //Accessors:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getLocation() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return this.location;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getReminder() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return this.reminder;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return this.category;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Output correct string format when listing tasks."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return correct format in string."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        // Post condition check that there should always be a category."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        assert (category.length() !\u003d 0);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String formattedDeadline \u003d String.format(\"[%s] Title: %s\", category.toUpperCase().trim(),title.trim());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(description)) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            formattedDeadline \u003d formattedDeadline + String.format(\" | Description: %s\", description);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(date)) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            formattedDeadline \u003d formattedDeadline + String.format(\" | Date: %s\", date);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(time)) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            formattedDeadline \u003d formattedDeadline + String.format(\" | Time: %s\", time);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(location)) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            formattedDeadline \u003d formattedDeadline + String.format(\" | Location: %s\",location);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(reminder)) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            formattedDeadline \u003d formattedDeadline + String.format(\" | Reminder: %s\",reminder);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return formattedDeadline;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 165,
      "rsanchez-macias": 33
    }
  },
  {
    "path": "src/main/java/seedu/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.command.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.TAB;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /** A platform independent line separator. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final String NEW_LINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private static final String DIVIDER \u003d \"__________________________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private static final String PROMPT \u003d \"What is your command?\" + NEW_LINE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private  static final  String LOGO \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                \" ______     ______     ______   ______\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                + TAB + \"/\\\\  ___\\\\   /\\\\  __ \\\\   /\\\\  ___\\\\ /\\\\  ___\\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                + TAB + \"\\\\ \\\\ \\\\____  \\\\ \\\\  __ \\\\  \\\\ \\\\  __\\\\ \\\\ \\\\___  \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                + TAB + \" \\\\ \\\\_____\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\    \\\\/\\\\_____\\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                + TAB + \"  \\\\/_____/   \\\\/_/\\\\/_/   \\\\/_/     \\\\/_____/\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Returns true if the user input line should be ignored."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Input should be ignored if it is only whitespace, or is empty. (add more conditions if needed)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param rawInputLine full raw user input line."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return true if the entire user input line should be ignored."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private boolean shouldIgnoreInput(String rawInputLine) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return rawInputLine.trim().isEmpty();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Method used to print all messages back to user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Meant to improve performance by reducing number of system calls used."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param messages  Variable length argument to display to users"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void showUserMessage(String... messages) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            System.out.print(TAB + message);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        showUserMessage(LOGO);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Prompts user for input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return String containing user command for parsing"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        System.out.print(PROMPT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String userCommand \u003d input.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        assert userCommand.length() \u003e 0 : \"Command input should contain at least one word\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public void showResultToUser(CommandResult result) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        showUserMessage(result.getFeedback());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 5,
      "rsanchez-macias": 27,
      "Bencotti": 43
    }
  },
  {
    "path": "src/test/java/seedu/cafs/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.cafs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "    public void testAddDeadline1() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        String input \u003d \"add n/task t/11:15 d/2020-04-12\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        String expected \u003d \"[TODO] Title: task | Date: 2020-04-12 | Time: 11.15 AM\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        AddCommand command \u003d new AddCommand(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        command.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        } catch (ProjException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "            assertTrue(false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        String output \u003d tasks.getTask(0).toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        boolean isEqual \u003d output.equals(expected);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "        assertTrue(isEqual);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void testAddDeadline() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String input \u003d \"add n/task t/20:18 d/2020-04-10\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String expected \u003d \"[TODO] Title: task | Date: 2020-04-10 | Time: 08.18 PM\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        AddCommand command \u003d new AddCommand(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        command.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ProjException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            assertTrue(false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String output \u003d tasks.getTask(0).toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        boolean isEqual \u003d output.equals(expected);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        assertTrue(isEqual);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void addCommand_noTitle_exceptionThrown() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String firstInput \u003d \"add\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            AddCommand firstCommand \u003d new AddCommand(firstInput);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            firstCommand.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            firstCommand.execute();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ProjException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            assertEquals(\"Please input a title for the task.\", e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 54,
      "yuchenlichuck": 21
    }
  },
  {
    "path": "src/test/java/seedu/cafs/EditCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.cafs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.EditCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class EditCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void testCorrectOutput() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String firstInput \u003d \"add n/Sleep early\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String firstExpected \u003d \"[TODO] Title: Sleep early\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        AddCommand firstCommand \u003d new AddCommand(firstInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        firstCommand.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            firstCommand.execute();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ProjException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            assertTrue(false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String firstOutput \u003d tasks.getTask(0).toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        assertTrue(firstOutput.equals(firstExpected));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String secondInput \u003d \"edit 1 i/for your health\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String secondExpected \u003d \"[TODO] Title: Sleep early | Description: for your health\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        EditCommand secondCommand \u003d new EditCommand(\"1\",secondInput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        secondCommand.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            secondCommand.execute();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ProjException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            assertTrue(false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String secondOutput \u003d tasks.getTask(0).toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        assertTrue(secondOutput.equals(secondExpected));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void editCommand_editTitle_exceptionThrown() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String firstInput \u003d \"add n/Sleep early\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            AddCommand firstCommand \u003d new AddCommand(firstInput);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            firstCommand.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            firstCommand.execute();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String secondInput \u003d \"edit 1 n/Sleep now\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            EditCommand secondCommand \u003d new EditCommand(\"1\", secondInput);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            secondCommand.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            secondCommand.execute();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ProjException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            assertEquals(\"Not allowed to change title.\", e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 70,
      "yuchenlichuck": 3
    }
  },
  {
    "path": "src/test/java/seedu/cafs/MainTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.cafs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.AddCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.command.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.parser.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "class MainTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String input \u003d \"add n/research paper d/02-04-2020 i/essay for writing 101\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String expected \u003d \"[TODO] Title: research paper | Description: essay for writing 101 | Date: (Unknown Date)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        AddCommand command \u003d new AddCommand(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        command.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ProjException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            assertTrue(false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String output \u003d tasks.getTask(0).toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        boolean isEqual \u003d output.equals(expected);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        assertTrue(isEqual);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void emptyCommandTest() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String testInput \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Command command \u003d new Parser().parseCommand(testInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        command.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean checkIfHelpCommand \u003d command instanceof HelpCommand;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        assertTrue(checkIfHelpCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 11,
      "rsanchez-macias": 15,
      "Bencotti": 15,
      "-": 9
    }
  },
  {
    "path": "src/test/seedu/cafs/MainTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.cafs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "class MainTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    void run() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    void main() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 17
    }
  },
  {
    "path": "src/test/seedu/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    void parseCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "       assertNotNull(new Object());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "       //assertNull(null);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 1,
      "-": 18
    }
  }
]
