[
  {
    "path": "CONTRIBUTORS.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Contributors"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Homepage"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---|:---:|:---:|:---:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/123?s\u003d100) | Yuchen Li | [Github](https://github.com/yuchenlichuck/) | [Homepage](http://liyc.fun)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuchenlichuck"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# I would like to join this list. How can I help the project"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/)."
      }
    ],
    "authorContributionMap": {
      "yuchenlichuck": 3,
      "-": 9
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "group \u0027seedu.cafs\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    mainClassName \u003d \"seedu.cafs.Main\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    archiveBaseName \u003d \"Main\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.0.1\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 3,
      "-": 37
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Jingtan | [Github](https://github.com/JTWang2000) | [Portfolio](docs/team/jingtan.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "![](https://www.wework.com/ideas/wp-content/uploads/sites/4/2015/11/cookie-monster1-1120x630.jpg) | Daniel Ho | [Github](https://github.com/Bencotti) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "![](https://img1.looper.com/img/gallery/detective-pikachu-2-release-date-cast-and-plot/intro-1568566852.jpg) | Ricardo Sanchez-Macias | [Github](https://github.com/rsanchez-macias) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 1,
      "rsanchez-macias": 1,
      "Bencotti": 1,
      "-": 7
    }
  },
  {
    "path": "src/main/java/seedu/cafs/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.cafs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Entry point of the CAFS"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Main constructor to set up required classes and check for data file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public Main() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // search for folder, create if not found"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        storage.checkFolderPath();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // populate if data file is found"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (storage.checkFileExists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "           // storage.populateList(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Reads the user command and executes it, until the user issues the exit command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String userCommandText \u003d ui.readCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            command \u003d new Parser().parseCommand(userCommandText);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            command.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                CommandResult result \u003d command.execute();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                ui.showResultToUser(result);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            } catch (ProjException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } while (!command.isExit()); // will be solved when do is enabled"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        new Main().run();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 5,
      "rsanchez-macias": 10,
      "Bencotti": 56
    }
  },
  {
    "path": "src/main/java/seedu/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    //add  n/\u003cNAME\u003e t/\u003cTime\u003e d/\u003cDATE\u003e i/\u003cINFORMATION\u003e l/\u003cLOCATION\u003e r/\u003cREMINDER\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private char taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    protected static final String TITLE \u003d \"n/\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected static final String TIME \u003d \"t/\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    protected static final String DATE \u003d \"d/\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    protected static final String DESCRIPTION \u003d \"i/\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected static final String LOCATION \u003d \"l/\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected static final String REMINDER \u003d \"r/\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //    public AddCommand(String userCommand, int wordArrayLength, char taskType) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        this.userInput \u003d userCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        this.wordArrayLength  \u003d wordArrayLength;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //     * Checks if the input task format is correct for deadline and event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //     * @return True if it is correct."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //    private Boolean isFormatCorrect() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        String[] inputSections \u003d userInput.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        int dividerPosition \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        if (inputSections.length \u003c 4) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            /** handle command : command / time*/"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        } else if (dividerPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            /** handle command : command task/ time */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //             return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        } else if (dividerPosition \u003d\u003d userInput.length() - 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            /** handle command without time*/"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        } else if (taskType \u003d\u003d TASK_DEADLINE) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            /** handle command: deadline / time task*/"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            int deadlineDividerPosition \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            if(deadlineDividerPosition \u003d\u003d DEADLINE_LENGTH + 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //                return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        } else if (taskType \u003d\u003d TASK_EVENT) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            /** handle command: event / time task*/"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            int eventDividerPosition \u003d userInput.indexOf(\"/\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            if(eventDividerPosition \u003d\u003d EVENT_LENGTH + 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //                return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        return true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //     * Adds different types of tasks in list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //    public void execute() throws ProjException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        String[] inputSections \u003d userInput.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        if (inputSections.length \u003c 2) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            throw new ProjException(\"The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        switch (taskType) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        case TASK_DEADLINE:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            /** Format: deadline tasks / yyyy-mm-dd*/"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            if (!isFormatCorrect()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //                throw new ProjException(\"Please follow the format: deadline tasks / yyyy-mm-dd\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            tasks.addDeadline(userInput, wordArrayLength);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        case TASK_EVENT:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            /** Format: event tasks / yyyy-mm-dd*/"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            if (!isFormatCorrect()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //                throw new ProjException(\"Please follow the format: deadline tasks / yyyy-mm-dd\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            tasks.addEvent(userInput, wordArrayLength);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        case TASK_TODO:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            /** Format: todo tasks*/"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            tasks.addTodo(userInput, wordArrayLength);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            System.out.println(\"[Error][New Task]: Keyword not recognised!\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            System.out.println(\"Task types:\\ntodo\\nevent\\ndeadline\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //         * Can replace the userInput into the task type."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //         * E.g. Ui.showAddTask(Task tasks[i]) where i is the index of the newly added tasks"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //         */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        Ui.showAddTask(userInput,tasks.size());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        //storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Gets the title, if any, from the user input."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param userInput raw user input"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @return title"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public String getTitle(String userInput) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String title \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        if (userInput.contains(TITLE)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            int index \u003d userInput.indexOf(TITLE);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            title \u003d findField(userInput, index);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return title;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Gets the description, if any, from the user input."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param userInput raw user input"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public String getDescription(String userInput) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        if (userInput.contains(DESCRIPTION)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            int index \u003d userInput.indexOf(DESCRIPTION);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            description \u003d findField(userInput, index);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return description;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Gets the date, if any, from the user input."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param userInput raw user input"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @return date"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public String getDate(String userInput) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        if (userInput.contains(DATE)) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            int index \u003d userInput.indexOf(DATE);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            date \u003d findField(userInput, index);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Gets the reminder, if any, from the user input."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param userInput raw user input."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return reminder."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getReminder(String userInput) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String reminder \u003d \"\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (userInput.contains(REMINDER)) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int index \u003d userInput.indexOf(REMINDER);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            reminder \u003d findField(userInput, index);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return reminder;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return reminder;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Gets the time in format hh:mm, if any, from the user input."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param userInput raw user input."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return time."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getTime(String userInput) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (userInput.contains(TIME)) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int index \u003d userInput.indexOf(TIME);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            time \u003d findField(userInput, index);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return time;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Gets the location, if any, from the user input."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param userInput raw user input."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return location."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getLocation(String userInput) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String location \u003d \"\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (userInput.contains(LOCATION)) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int index \u003d userInput.indexOf(LOCATION);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            location \u003d findField(userInput, index);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return location;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return location;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Scans the raw user input to search for the input."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * for a field (e.g. \"essay\" in event n/essay i/world religions)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param userInput raw user input"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param fromIndex index marking the beginning of the field"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @return expected field"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private String findField(String userInput, int fromIndex) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String field \u003d \"\";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        char nextField \u003d \u0027/\u0027;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        int i \u003d fromIndex + 2;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        while (i \u003c userInput.length() \u0026\u0026 userInput.charAt(i) !\u003d nextField) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            field +\u003d userInput.charAt(i);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        if (i \u003c userInput.length() \u0026\u0026 userInput.charAt(i) \u003d\u003d nextField) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return field.substring(0, field.length() - 1);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return field;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 76,
      "rsanchez-macias": 162
    }
  },
  {
    "path": "src/main/java/seedu/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Called to check if exit command is given."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return condition whether program should continue looping or exit"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Supplies the objects other commands will call upon."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param taskList  current instance of tasks and corresponding tasklist methods"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param storage instance of storage object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param ui instance of user interaction object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public void setCommandVariables(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Executes user command processed by parser."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public abstract CommandResult execute() throws ProjException;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 1,
      "rsanchez-macias": 10,
      "Bencotti": 35
    }
  },
  {
    "path": "src/main/java/seedu/command/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private String feedback;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public CommandResult(String feedback) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        this.feedback \u003d feedback;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public String getFeedback() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return feedback;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rsanchez-macias": 15
    }
  },
  {
    "path": "src/main/java/seedu/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public DeadlineCommand(String userInput) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        this.userInput \u003d userInput.trim();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public CommandResult execute() throws ProjException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String title \u003d getTitle(userInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (title.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new ProjException(\"Please input a title for the deadline.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String date \u003d getDate(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String description \u003d getDescription(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String reminder \u003d getReminder(userInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String time \u003d getTime(userInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String location \u003d getLocation(userInput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        taskList.addTask(new Deadline(title, description, date, time, location, reminder));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return new CommandResult(\"Added deadline\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 11,
      "rsanchez-macias": 23
    }
  },
  {
    "path": "src/main/java/seedu/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public DeleteCommand(String userInput) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String[] commandSections \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        int index \u003d Integer.parseInt(commandSections[1].trim()) - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        taskList.deleteTask(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return new CommandResult(\"Deleted Task\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rsanchez-macias": 21
    }
  },
  {
    "path": "src/main/java/seedu/command/EditCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class EditCommand extends AddCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private String taskEdited;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public EditCommand(String taskEdited,String userInput) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.taskEdited \u003d taskEdited;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Checks if a string can be casted to a number."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param str input string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return true if it can be casted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static boolean isNumeric(String str) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            Integer.parseInt(str);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Checks if the user has input that field."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param input a field."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return true if user has input that field."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private Boolean hasInput(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Edit a task by the task index number."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Cannot edit title of a class."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return result of command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws ProjException if input invalid task index."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public CommandResult execute() throws ProjException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (!isNumeric(taskEdited.trim())) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new ProjException(\"Please input a task index.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Integer taskEdited \u003d Integer.parseInt(this.taskEdited.trim()) - 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String title \u003d getTitle(userInput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(title)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new ProjException(\"Not allowed to change title.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String description \u003d getDescription(userInput);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(description)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            taskList.changeDescription(taskEdited,description);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String reminder \u003d getReminder(userInput);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(reminder)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            taskList.changeReminder(taskEdited,reminder);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String date \u003d getDate(userInput);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(date)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            taskList.changeDate(taskEdited,date);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String time \u003d getTime(userInput);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(time)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            taskList.changeTime(taskEdited,time);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String location \u003d getLocation(userInput);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(location)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            taskList.changeLocation(taskEdited,location);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String feedback \u003d \"Task \" + (taskEdited + 1) + \" edited\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        feedback  \u003d feedback + taskList.getTask(taskEdited).toString();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 89
    }
  },
  {
    "path": "src/main/java/seedu/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public EventCommand(String userInput) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        this.userInput \u003d userInput.trim();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public CommandResult execute() throws ProjException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String title \u003d getTitle(userInput);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (title.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new ProjException(\"Please input a title for the event.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String date \u003d getDate(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String description \u003d getDescription(userInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String reminder \u003d getReminder(userInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String time \u003d getTime(userInput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String location \u003d getLocation(userInput);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        taskList.addTask(new Deadline(title, description, date, time, location, reminder));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return new CommandResult(\"Added event\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 12,
      "rsanchez-macias": 23
    }
  },
  {
    "path": "src/main/java/seedu/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": " * Sends the exit signal to main loop, program is exited after this command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String BYE_MESSAGE \u003d \"CAFS: Bye, hope to see you again!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Check if exit command is given."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return signal to main loop that program will be terminated"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return new CommandResult(BYE_MESSAGE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "rsanchez-macias": 6,
      "Bencotti": 19
    }
  },
  {
    "path": "src/main/java/seedu/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private String pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public FindCommand(String pattern) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        this.pattern \u003d pattern.trim().substring(4);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.findTasks(pattern);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String feedback \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            feedback +\u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rsanchez-macias": 27
    }
  },
  {
    "path": "src/main/java/seedu/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String legend \u003d Messages.getLegend();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String commands \u003d Messages.getCommands();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return new CommandResult(legend + commands);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rsanchez-macias": 3,
      "Bencotti": 11
    }
  },
  {
    "path": "src/main/java/seedu/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String feedback \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        feedback +\u003d \"There are \" + tasks.size() + \" tasks in your list.\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            feedback +\u003d (i + 1) + \". \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            feedback +\u003d tasks.get(i);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            feedback +\u003d \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 5,
      "rsanchez-macias": 20
    }
  },
  {
    "path": "src/main/java/seedu/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasks.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public TodoCommand(String userInput) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        this.userInput \u003d userInput.trim();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public CommandResult execute() throws ProjException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String title \u003d getTitle(userInput);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (title.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new ProjException(\"Please input a title for the todo task.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String date \u003d getDate(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String description \u003d getDescription(userInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String reminder \u003d getReminder(userInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String time \u003d getTime(userInput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String location \u003d getLocation(userInput);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        taskList.addTask(new Deadline(title, description, date, time, location, reminder));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return new CommandResult(\"Added todo\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 12,
      "rsanchez-macias": 23
    }
  },
  {
    "path": "src/main/java/seedu/common/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public final class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final char TASK_TODO \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final char TASK_EVENT \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final char TASK_DEADLINE \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final int DEADLINE_LENGTH \u003d 8;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final int EVENT_LENGTH \u003d 5;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    // TODO Can be refactored into Command classes"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String HELP \u003d \"help\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String EXIT \u003d \"bye\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String EDIT \u003d \"edit\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String DEADLINE_USAGE \u003d \"deadline n/[title] d/[date] i/[description]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String EVENT_USAGE \u003d \"event n/[title] d/[date] i/[description]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String TODO_USAGE \u003d \"todo n/[title] i/[description]\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String DELETE_USAGE \u003d \"delete [task number]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public static final String FIND_USAGE \u003d \"find [pattern]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 10,
      "rsanchez-macias": 20
    }
  },
  {
    "path": "src/main/java/seedu/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.command.HelpCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.TODO_USAGE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.EVENT_USAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.DEADLINE_USAGE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.DELETE_USAGE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.FIND_USAGE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": " * Container class for repeated static Strings."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_COMMAND \u003d \"Command List:\\n\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_LEGEND \u003d \"Legend:\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    + \"[Y]: Task is completed\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    + \"[N]: Task is not completed\\n\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_EXIT \u003d \"Exit: Exits program \\nUsage: bye\\n\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_LIST \u003d \"List: Lists all recorded tasks \\nUsage: list\\n\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_DONE \u003d \"Done: Mark task as completed \\nUsage: \\n\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_TODO \u003d \"Todo: Basic Tasks without date/time \\nUsage: \" + TODO_USAGE + \"\\n\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_EVENT \u003d \"Event: Event tasks including date/time \\nUsage: \" + EVENT_USAGE + \"\\n\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_DEADLINE \u003d \"Deadline: Deadline tasks including date/time +\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            + \" \\nUsage: \" + DEADLINE_USAGE + \"\\n\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_DELETE \u003d \"Delete: Deletes task from list \\nUsage: \" + DELETE_USAGE + \"\\n\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    static final String HELP_FIND \u003d \"Find: Search for task using keyword \\nUsage: \" + FIND_USAGE + \"\\n\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Formats the list of available commands."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @return list of supported commands"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String getCommands() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String fullCommand \u003d HELP_COMMAND + HELP_EXIT + HELP_LIST + HELP_DONE"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + HELP_TODO + HELP_EVENT + HELP_DEADLINE"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + HELP_DELETE + HELP_FIND;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return fullCommand;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Gets the legend information for the supported commands."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @return legend information"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String getLegend() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return HELP_LEGEND;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rsanchez-macias": 30,
      "Bencotti": 21
    }
  },
  {
    "path": "src/main/java/seedu/exception/ProjException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class ProjException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public ProjException(String error) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 7
    }
  },
  {
    "path": "src/main/java/seedu/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.EditCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.DeadlineCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.EventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.HelpCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.TodoCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.FIND;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.EVENT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.DEADLINE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.TODO;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.DELETE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.EXIT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.HELP;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static seedu.common.Constants.LIST;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static seedu.common.Constants.EDIT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param userCommand user input including command word and parameters"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return  command based on user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static Command parseCommand(String userCommand) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // parsing based on first word of command string"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String[] commandSections \u003d userCommand.split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        int wordLength \u003d commandSections.length;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        switch (commandSections[0]) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        //case DONE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            // return prepareDoneCommand(commandSections[1], wordLength);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        case HELP:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return new DeleteCommand(userCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return new TodoCommand(userCommand);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return new EventCommand(userCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return new DeadlineCommand(userCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            return new FindCommand(userCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case EDIT:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new EditCommand(commandSections[1], userCommand);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        case EXIT:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Command not recognised\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 19,
      "rsanchez-macias": 25,
      "Bencotti": 25
    }
  },
  {
    "path": "src/main/java/seedu/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final String WORKING_DIRECTORY \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final java.nio.file.Path FOLDER_PATH \u003d java.nio.file.Paths.get(WORKING_DIRECTORY, \"Duke\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final java.nio.file.Path FILE_PATH \u003d java.nio.file.Paths.get(WORKING_DIRECTORY, \"Duke\", \"data.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Locate folder location and check availability."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * If missing create folder."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void checkFolderPath() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean directoryExists \u003d java.nio.file.Files.exists(FOLDER_PATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            if (!directoryExists) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                Files.createDirectory(FOLDER_PATH);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Directory created\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Directory found\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error creating folder!\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Check whether data file has is present in directory."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return status of file availability"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static boolean checkFileExists() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean fileExists \u003d java.nio.file.Files.exists(FILE_PATH);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return fileExists;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //    public static void writeToFile(TaskList tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            File file \u003d new File(String.valueOf(FILE_PATH));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            FileWriter myWriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            for(int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //                myWriter.write(tasks.getTask(i));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            myWriter.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //            System.out.println(\"Successfully updated data file!\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 6,
      "rsanchez-macias": 18,
      "Bencotti": 37
    }
  },
  {
    "path": "src/main/java/seedu/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Finds the tasks that contain the given pattern in their"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * title or description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param pattern pattern to look for in the tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @return tasks that match the pattern"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String pattern) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            if (hasPattern(task, pattern)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                foundTasks.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return foundTasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    // TODO Fix so that method returns a deep copy of the list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Checks if the given task contains the given pattern."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param task task to inspect"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param pattern pattern to look for in task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @return true if task contains pattern"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private boolean hasPattern(Task task, String pattern) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return task.getTitle().contains(pattern) || task.getDescription().contains(pattern);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    //Mutator methods:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public void changeDescription(int taskIndex, String newDescription) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        taskList.get(taskIndex).setDescription(newDescription);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void changeDate(int taskIndex, String newDate) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        taskList.get(taskIndex).setDate(newDate);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void changeTime(int taskIndex, String newTime) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        taskList.get(taskIndex).setTime(newTime);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void changeLocation(int taskIndex, String newLocation) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        taskList.get(taskIndex).setLocation(newLocation);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void changeReminder(int taskIndex, String newReminder) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        taskList.get(taskIndex).setReminder(newReminder);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 19,
      "rsanchez-macias": 64,
      "Bencotti": 4
    }
  },
  {
    "path": "src/main/java/seedu/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Initializes Deadline task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param title title of deadline if any."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param description description of deadline if any."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param date date in format:yyyy-mm-dd of deadline if any."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param time time in format: hh:mm of deadline if any."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param location location of deadline if any."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param reminder reminder of deadline if any."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Deadline(String title, String description, String date,String time, String location, String reminder) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        super(title, description,date,time,location,reminder);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 19,
      "rsanchez-macias": 5
    }
  },
  {
    "path": "src/main/java/seedu/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Initializes Event task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param title title of deadline if any."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param description description of deadline if any."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param date date in format:yyyy-mm-dd of deadline if any."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param time time in format: hh:mm of deadline if any."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param location location of deadline if any."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param reminder reminder of deadline if any."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Event(String title, String description, String date,String time, String location, String reminder) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        super(title, description,date,time,location,reminder);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 12,
      "rsanchez-macias": 5
    }
  },
  {
    "path": "src/main/java/seedu/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected String location;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected String reminder;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Initializes Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param title title of deadline if any."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param description description of deadline if any."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param date date in format:yyyy-mm-dd of deadline if any."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param time time in format: hh:mm of deadline if any."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param location location of deadline if any."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param reminder reminder of deadline if any."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Task(String title, String description, String date,String time, String location, String reminder) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(date)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            setDate(date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.date \u003d date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(time)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            setTime(time);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.time \u003d time;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.reminder \u003d reminder;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Check if a field is empty of not."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param input a field."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return true if it is not empty."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private Boolean hasInput(String input) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    //Mutator methods:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Sets time to format: hh.mm aa"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param time input time with accepted format: hh:mm"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void setTime(String time) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            DateFormat originalFormat \u003d new SimpleDateFormat(\"hh:mm\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            Date oringialTime \u003d originalFormat.parse(time);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            DateFormat newFormat \u003d new SimpleDateFormat(\"hh.mm aa\", Locale.US);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.time \u003d newFormat.format(oringialTime).toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.time \u003d \"(Unknown time)\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Set Date to format:yyyy-mm-dd and check if date is correct."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param date input date"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void setDate(String date) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String[] dateInfo \u003d date.split(\"-\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int year \u003d Integer.parseInt(dateInfo[0].trim());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int month \u003d Integer.parseInt(dateInfo[1].trim());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int day \u003d Integer.parseInt(dateInfo[2].trim());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if (!(day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d 30)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if (!(month \u003e\u003d 1 \u0026\u0026 month \u003c\u003d 12)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.date \u003d date;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.date \u003d \"(Unknown Date)\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.date \u003d \"(Unknown Date)\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Sets the task description."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * @param description new description"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void setLocation(String location) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void setReminder(String reminder) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.reminder \u003d reminder;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    //Accessors:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getLocation() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return this.location;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getReminder() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return this.reminder;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Output correct string format when listing tasks."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return correct format in string."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String formattedDeadline \u003d String.format(\"Title: %s\", title);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(description)) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            formattedDeadline \u003d formattedDeadline + String.format(\" | Description: %s\", description);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(date)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            formattedDeadline \u003d formattedDeadline + String.format(\" | Date: %s\", date);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(time)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            formattedDeadline \u003d formattedDeadline + String.format(\" | Time: %s\", time);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(location)) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            formattedDeadline \u003d formattedDeadline + String.format(\" | Location: %s\",location);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (hasInput(reminder)) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            formattedDeadline \u003d formattedDeadline + String.format(\" | Reminder: %s\",reminder);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return formattedDeadline;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 144,
      "rsanchez-macias": 34
    }
  },
  {
    "path": "src/main/java/seedu/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "package seedu.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Initializes Todo task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param title title of deadline if any."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param description description of deadline if any."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param date date in format:yyyy-mm-dd of deadline if any."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param time time in format: hh:mm of deadline if any."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param location location of deadline if any."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param reminder reminder of deadline if any."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Todo(String title, String description, String date,String time, String location, String reminder) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        super(title, description,date,time,location,reminder);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 12,
      "rsanchez-macias": 7
    }
  },
  {
    "path": "src/main/java/seedu/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package seedu.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.command.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /** A platform independent line separator. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final String NEW_LINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final String DIVIDER \u003d \"________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    private static final String PROMPT \u003d \"\u003e \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private  static final  String LOGO \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                \" ______     ______     ______   ______\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"/\\\\  ___\\\\   /\\\\  __ \\\\   /\\\\  ___\\\\ /\\\\  ___\\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"\\\\ \\\\ \\\\____  \\\\ \\\\  __ \\\\  \\\\ \\\\  __\\\\ \\\\ \\\\___  \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \" \\\\ \\\\_____\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\    \\\\/\\\\_____\\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "                + \"  \\\\/_____/   \\\\/_/\\\\/_/   \\\\/_/     \\\\/_____/\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Returns true if the user input line should be ignored."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Input should be ignored if it is only whitespace, or is empty. (add more conditions if needed)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param rawInputLine full raw user input line."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return true if the entire user input line should be ignored."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private boolean shouldIgnoreInput(String rawInputLine) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return rawInputLine.trim().isEmpty();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Method used to print all messages back to user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Meant to improve performance by reducing number of system calls used."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param messages  Variable length argument to display to users"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void showUserMessage(String... messages) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            System.out.print(message + NEW_LINE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        showUserMessage(LOGO, NEW_LINE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Prompts user for input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return String containing user command for parsing"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        System.out.printf(\"%s \", PROMPT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String userCommand \u003d input.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     * Prints prompt message that a task is successfully added."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param userInput can be replaced with Task addedTask if there is task type implemented later"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static void showAddTask(String userInput, int taskCount) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.print(\"Successfully add tasks: \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(userInput);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"There are \" + taskCount + \" in your list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    public void showResultToUser(CommandResult result) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        showUserMessage(result.getFeedback());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 16,
      "rsanchez-macias": 19,
      "Bencotti": 48
    }
  },
  {
    "path": "src/test/java/seedu/cafs/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.cafs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.EditCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.TodoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void testAddDeadline() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String input \u003d \"deadline n/task t/20:18 d/2020-04-10\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String expected \u003d \"Title: task  | Date: 2020-04-10 | Time: 08.18 PM\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        DeadlineCommand command \u003d new DeadlineCommand(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        command.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ProjException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            assertTrue(false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String output \u003d tasks.getTask(0).toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        boolean isEqual \u003d output.equals(expected);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        assertTrue(isEqual);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void addCommand_noTitle_exceptionThrown() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String firstInput \u003d \"deadline\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            DeadlineCommand firstCommand \u003d new DeadlineCommand(firstInput);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            firstCommand.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            firstCommand.execute();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ProjException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            assertEquals(\"Please input a title for the deadline.\", e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 56
    }
  },
  {
    "path": "src/test/java/seedu/cafs/EditCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.cafs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.TodoCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.command.EditCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class EditCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void testCorrectOutput() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String firstInput \u003d \"todo n/Sleep early\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String firstExpected \u003d \"Title: Sleep early\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        TodoCommand firstCommand \u003d new TodoCommand(firstInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        firstCommand.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            firstCommand.execute();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ProjException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            assertTrue(false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String firstOutput \u003d tasks.getTask(0).toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        assertTrue(firstOutput.equals(firstExpected));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String secondInput \u003d \"edit 1 i/for your health\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String secondExpected \u003d \"Title: Sleep early | Description: for your health\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        EditCommand secondCommand \u003d new EditCommand(\"1\",secondInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        secondCommand.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            secondCommand.execute();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ProjException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            assertTrue(false);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String secondOutput \u003d tasks.getTask(0).toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        assertTrue(secondOutput.equals(secondExpected));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void editCommand_editTitle_exceptionThrown() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String firstInput \u003d \"todo n/Sleep early\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            TodoCommand firstCommand \u003d new TodoCommand(firstInput);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            firstCommand.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            firstCommand.execute();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String secondInput \u003d \"edit 1 n/Sleep now\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            EditCommand secondCommand \u003d new EditCommand(\"1\", secondInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            secondCommand.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            secondCommand.execute();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ProjException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            assertEquals(\"Not allowed to change title.\", e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 71
    }
  },
  {
    "path": "src/test/java/seedu/cafs/MainTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package seedu.cafs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.command.DeadlineCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.command.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import seedu.exception.ProjException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import seedu.parser.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.tasklist.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "class MainTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        String input \u003d \"deadline n/research paper d/02-04-2020 i/essay for writing 101\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String expected \u003d \"Title: research paper  | Description: essay for writing 101 | Date: (Unknown Date)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        DeadlineCommand command \u003d new DeadlineCommand(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        command.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (ProjException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            assertTrue(false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String output \u003d tasks.getTask(0).toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        boolean isEqual \u003d output.equals(expected);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rsanchez-macias"
        },
        "content": "        assertTrue(isEqual);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void emptyCommandTest() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String testInput \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Command command \u003d new Parser().parseCommand(testInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        command.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean checkIfHelpCommand \u003d command instanceof HelpCommand;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        assertTrue(checkIfHelpCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 8,
      "rsanchez-macias": 18,
      "Bencotti": 15,
      "-": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 1,
      "-": 18
    }
  }
]
