[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.0.1\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 39,
      "SibingWu": 1
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Doe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Sloe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "bye"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "hello"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 1,
      "-": 8,
      "nguan1": 4
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* [1. Introduction](#introduction)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* [2. Quick Start](#quick-start)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* [3. Features](#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    + [3.1. Add:](#add) `add`"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    + [3.2. Delete:](#delete) `delete`"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    + [3.3. List:](#list) `list`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* [4. Command Summary](#command-summary)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "\u003ca name\u003d\"introduction\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "Restaurant Daily Report is a CLI app that generates a whitepaper, "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "summarizing the internals of a restaurant. It’s aim is to provide "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "restaurant owners a quick overview of how their restaurant is performing "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "daily so that restaurant owners can better manage their business operations."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "As such, the daily report will include these categories:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Menu: Information on all menu items"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Reservation: Information on number of reservations a day"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Stock: Information on all food items/quantities/prices"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "\u003ca name\u003d\"quick-start\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "1. Down the latest version of `Restaurant Report` from [here](https://github.com/AY1920S2-CS2113-T14-4/tp)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "\u003ca name\u003d\"features\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "Add menu items, ingredients and reservations."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "\u003ca name\u003d\"add\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "### Add"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "Add menu items, ingredients, and reservations."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "#### Add menu item: add dish"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `add dish; n/NAME; [i/INGREDIENT1, INGREDIENT2, ...];`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Example: `add dish; n/bacon pizza; i/cheese, bacon;`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "#### Add ingredient into stock: add stock"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `add stock; i/INGREDIENT1; q/QUANTITY; p/PRICE;`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Example: `add stock; i/tomato; q/10; p/$0.50;`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "#### Add reservation into list: add reservation "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `add reservation; p/CONTACT_PERSON_NAME; d/DATE; n/NUMBER_OF_GUESTS; c/CONTACT; [m/COMMENTS];`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Example: `add reservation; r/12;`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "*The `DATE` must be in **yyyy-mm-dd HH:mm** format. The `NUMBER_OF_GUESTS` must be an integer.*"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "\u003ca name\u003d\"delete\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "Delete menu items, ingredients and reservations."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "#### Delete menu item: delete dish"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `delete dish; n/NAME;`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Example: `delete dish; n/bacon pizza;`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "#### Delete stock of ingredient: delete stock"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `delete stock; i/[INGREDIENT]; q/[QUANTITY];` or"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `delete stock; i/[INGREDIENT];`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Example: `delete stock; i/tomato; q/1;`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "#### Mark reservation as invalid: delete reservation"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `delete reservation; r/NUMBER_OF_RESERVATION;`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Example: `delete reservation; r/12;`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "\u003ca name\u003d\"list\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "### List"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "List items in the menu, ingredients and reservations."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* List menu : `list menu`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* List ingredients : `list ingredient`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* List reservation : `list reservation`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "\u003ca name\u003d\"command summary\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `add dish; n/NAME; [i/INGREDIENT1, INGREDIENT2, ...];`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `add stock; i/INGREDIENT1; q/QUANTITY; p/PRICE;`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `add reservation; r/NUMBER_OF_RESERVATIONS;`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `delete dish; n/NAME;`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `delete stock; i/[INGREDIENT]; q/[QUANTITY];`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `delete stock; i/[INGREDIENT];`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "* Format: `delete reservation; r/NUMBER_OF_RESERVATIONS;`"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 62,
      "-": 26,
      "SibingWu": 2
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import menu.Menu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import reservation.ReservationList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import stock.Stock;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import utils.CommandParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * Entry point of the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * Initializes the program and takes command from the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private Stock stock;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    private ReservationList reservations;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    private Menu menu;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /** Driver code for the program. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public static void main(String... args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        new Main().run(args);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /** Runs the program until the user terminates it. */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void run(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        start(args);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        runCommandUntilExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /** Sets up the required objects and shows a welcome message. */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void start(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.stock \u003d new Stock();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.menu \u003d new Menu();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.reservations \u003d new ReservationList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /** Read user\u0027s input, parse it into readable command format and execute it. */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private void runCommandUntilExit() {                     "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            System.out.println(\"Input next command:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            String userInput \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            new CommandParser().parseCommand(userInput,this.menu,this.stock,this.reservations);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            //CommandResult result \u003d executeCommand(command);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /** Executes a command. */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    private CommandResult executeCommand(Command command) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//            command.setData(this.stock);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//            CommandResult output \u003d command.execute();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//            ui.showMessage(output.getCommandResult());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//            return output;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//        } catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//            ui.showMessage(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /** Exits the program with a goodbye message. */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }    "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 45,
      "nguan1": 25
    }
  },
  {
    "path": "src/main/java/commands/AddDishCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "public class AddDishCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 4
    }
  },
  {
    "path": "src/main/java/commands/AddReservationCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import reservation.Reservation;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import reservation.ReservationList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static utils.Constants.DELIMITER;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static utils.Constants.RES_PERSON_MARKER;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static utils.Constants.RES_DATE_MARKER;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static utils.Constants.RES_NUM_MARKER;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static utils.Constants.RES_CONTACT_MARKER;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static utils.Constants.RES_COMMENT_MARKER;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/* Command object for \"add reservation\" command */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class AddReservationCommand extends ReservationCommand {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public AddReservationCommand(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Adds a reservation into the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param reservations Existing reservation list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(ReservationList reservations) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // TODO: may have delimiter missing exception"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // name"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int namePos \u003d description.indexOf(RES_PERSON_MARKER);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int nameEndPos \u003d description.indexOf(DELIMITER, namePos); "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String name \u003d description.substring(namePos + RES_PERSON_MARKER.length(), nameEndPos).trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // date"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int datePos \u003d description.indexOf(RES_DATE_MARKER);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int dateEndPos \u003d description.indexOf(DELIMITER, datePos);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        LocalDateTime date \u003d LocalDateTime.parse(description.substring(datePos + RES_DATE_MARKER.length(), dateEndPos).trim(), "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // numberOfGuests"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int numberPos \u003d description.indexOf(RES_NUM_MARKER);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int numberEndPos \u003d description.indexOf(DELIMITER, numberPos);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int numberOfGuests \u003d Integer.parseInt(description.substring(numberPos + RES_NUM_MARKER.length(), numberEndPos).trim());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // contact"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int contactPos \u003d description.indexOf(RES_CONTACT_MARKER);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int contactEndPos \u003d description.indexOf(DELIMITER, contactPos);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String contact \u003d description.substring(contactPos + RES_CONTACT_MARKER.length(), contactEndPos).trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // comments"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int commentsPos \u003d description.indexOf(RES_COMMENT_MARKER);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int commentsEndPos \u003d description.indexOf(DELIMITER, commentsPos);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String comments \u003d description.substring(commentsPos + RES_COMMENT_MARKER.length(), commentsEndPos).trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // reservationNumber"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int reservationNumber \u003d reservations.getSize();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        Reservation reservation \u003d new Reservation(reservationNumber, name, date, numberOfGuests, contact);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        reservations.addReservation(reservation);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // TODO: display some message"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 3,
      "SibingWu": 64
    }
  },
  {
    "path": "src/main/java/commands/AddStockCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import ingredient.Ingredient;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import stock.Stock;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import utils.Pair;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * This class focuses on the \u0027add\u0027 functionality of the application"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * on the stock category."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "public class AddStockCommand extends StockCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /** The ingredient to be added into the stock. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private final Ingredient ingredientToAdd;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * A convenience constructor that contains information of an ingredient "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * stored in a hashMap."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public AddStockCommand(String ingredientInput) {  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Map\u003cString, Pair\u003cInteger, Double\u003e\u003e ingredientInfo \u003d "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                parseIntoAddIngredientArgs(ingredientInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        String ingredientName \u003d ingredientInfo"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .entrySet()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .map(item -\u003e item.getKey())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .map(Object::toString)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .collect(Collectors.joining(\"\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        int quantity \u003d ingredientInfo.get(ingredientName).first();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        double price \u003d ingredientInfo.get(ingredientName).second();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.ingredientToAdd \u003d new Ingredient(ingredientName, "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                Optional.of(quantity), Optional.of(price));               "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * Parses the user\u0027s input into readable arguments that "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * will be used to construct an Ingredient object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * The arguments are then stored in a HashMap."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * For example: \u0027 i/tomato; q/10; p/$0.50;\u0027 "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * will store \u0027tomato\u0027 as the ingredient name, \u002710\u0027 as"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * the ingredient quantity and \u0027$0.50\u0027 as the ingedient\u0027s "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * price. Note that the constructor of an Ingredient is"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * new Ingredient(NAME, QUANTITY, PRICE)."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private Map\u003cString, Pair\u003cInteger, Double\u003e\u003e parseIntoAddIngredientArgs("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            String fullInputLine) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Map\u003cString, Pair\u003cInteger, Double\u003e\u003e ingredientInfo \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        String[] wordArgs \u003d fullInputLine.split(\";\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        String ingredientName \u003d parseIngredientName(wordArgs[0].trim());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        int quantity \u003d parseIngredientQuantity(wordArgs[1].trim());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        double price \u003d parseIngredientPrice(wordArgs[2].trim());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        ingredientInfo.put(ingredientName, Pair.of(quantity, price));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return ingredientInfo;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void execute(Stock stock) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        stock.addIngredient(ingredientToAdd);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        System.out.println(\"Ingredient \" "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                + ingredientToAdd.getIngredientName() "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                + \" successfully added!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 73,
      "gmuthu17": 4
    }
  },
  {
    "path": "src/main/java/commands/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "///**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "// * Represents the result after executing a command. A CommandResult"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "// * contains a string description of a result that will be used by the"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": "// * Ui to display to the user. As CommandResult is the final stage of"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": "// * executing a command, an IllegalStateException will be thrown when"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "// * executing a CommandResult."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": "// *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "// */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//public class CommandResult extends StockCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    /** String representation of a result after executing. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    public final String commandResult;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//     * Constructor for the CommandResult."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//     * @param commandResult A String description of a command result after"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//     *                      a command is being executed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    public CommandResult(String commandResult) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//        this.commandResult \u003d commandResult;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    public String getCommandResult() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//        return this.commandResult;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    public CommandResult execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//        throw new IllegalStateException(\"Cannot execute a Command Result\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 1,
      "gmuthu17": 1,
      "nguan1": 32
    }
  },
  {
    "path": "src/main/java/commands/DeleteDishCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "public class DeleteDishCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 4
    }
  },
  {
    "path": "src/main/java/commands/DeleteStockCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import ingredient.Ingredient;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import ingredient.IngredientNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import stock.Stock;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * This class focuses on the \u0027delete\u0027 functionality of the application."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "public class DeleteStockCommand extends StockCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private final Ingredient ingredientToDelete;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * A convenience constructor that contains information of an ingredient "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * stored in a hashMap."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public DeleteStockCommand(Map\u003cString, Optional\u003cInteger\u003e\u003e ingredientInfo) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        String ingredientName \u003d ingredientInfo"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .entrySet()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .map(item -\u003e item.getKey())"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .map(Object::toString)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .collect(Collectors.joining(\"\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Optional\u003cInteger\u003e quantity \u003d ingredientInfo.get(ingredientName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.ingredientToDelete \u003d new Ingredient(ingredientName, quantity, Optional.empty());               "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * A convenience constructor that contains information of an ingredient "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * stored in a hashMap."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public DeleteStockCommand(String ingredientInput) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Map\u003cString, Optional\u003cInteger\u003e\u003e ingredientInfo \u003d "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                parseIntoDeleteIngredientArgs(ingredientInput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        String ingredientName \u003d ingredientInfo"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .entrySet()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .map(item -\u003e item.getKey())"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .map(Object::toString)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .collect(Collectors.joining(\"\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Optional\u003cInteger\u003e quantity \u003d ingredientInfo.get(ingredientName);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.ingredientToDelete \u003d new Ingredient(ingredientName, quantity, Optional.empty());               "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * Parses the user\u0027s input into readable arguments that "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * will be used to construct an Ingredient object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * The arguments are then stored in a HashMap."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * For example: \u0027 i/tomato; q/10;\u0027 will store \u0027tomato\u0027 "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * as the ingredient name, \u002710\u0027 as the ingredient quantity "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * to be deleted. Note that the specification of the ingredient\u0027s quantity "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * is optional."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private Map\u003cString, Optional\u003cInteger\u003e\u003e parseIntoDeleteIngredientArgs("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            String fullInputLine) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Map\u003cString, Optional\u003cInteger\u003e\u003e ingredientInfo \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        String[] wordArgs \u003d fullInputLine.split(\";\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        boolean hasQuantitySpecified \u003d fullInputLine.contains(\"q/\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        String ingredientName \u003d parseIngredientName(wordArgs[0].trim());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        if (hasQuantitySpecified) {            "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "            int quantity \u003d parseIngredientQuantity(wordArgs[1].trim());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            ingredientInfo.put(ingredientName, Optional.of(quantity));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            ingredientInfo.put(ingredientName, Optional.empty());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return ingredientInfo;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void execute(Stock stock) {    "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            stock.deleteIngredient(ingredientToDelete);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        } catch (IngredientNotFoundException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            System.out.println(\"Ingredient \" "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + this.ingredientToDelete.getIngredientName() "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + \" not found and cannot be deleted!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        System.out.println(createDeleteResultMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private String createDeleteResultMessage() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        boolean hasQuantitySpecified \u003d ingredientToDelete.isQuantitySpecified();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        String outputMessage \u003d \"Ingredient \" "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + ingredientToDelete.getIngredientName()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + (hasQuantitySpecified "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                            ? \" reduced by \" "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                            + ingredientToDelete.getIngredientQuantity() + \"!\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                            : \" deleted from the stock!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return outputMessage;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 110,
      "gmuthu17": 3
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "///**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "// * Represents the \u0027Exit\u0027 functionality of a command. This command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "// * serves to exit the program upon executed."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": "// *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": "// */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    /** Returns true if a Command is an ExitCommand. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//        return command instanceof ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    public CommandResult execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//        return new CommandResult(\"Program Exited\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 1,
      "gmuthu17": 1,
      "nguan1": 18
    }
  },
  {
    "path": "src/main/java/commands/ListReservationCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import reservation.ReservationList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/** Command object for \"list reservations\" command. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class ListReservationCommand extends ReservationCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Lists all reservations, including served, unserved, and invalid reservations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param reservations Existing reservation list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(ReservationList reservations) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // TODO: wrap it into Ui class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        for (int i \u003d 0; i \u003c reservations.getSize(); i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            System.out.println(reservations.getReservation(i));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 2,
      "SibingWu": 17
    }
  },
  {
    "path": "src/main/java/commands/ListServedCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import reservation.ReservationList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import static utils.Constants.SERVED;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/** Command object for \"list served reservations\" command. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class ListServedCommand extends ReservationCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Lists all served reservations."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param reservations Existing reservation list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(ReservationList reservations) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // TODO: wrap it into Ui class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        for (int i \u003d 0; i \u003c reservations.getSize(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            if (!reservations.getReservation(i).getStatus().equals(SERVED)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            System.out.println(reservations.getReservation(i));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 3,
      "SibingWu": 22
    }
  },
  {
    "path": "src/main/java/commands/ListStockCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import stock.Stock;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * This class focuses on the \u0027list\u0027 functionality of the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "public class ListStockCommand extends StockCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void execute(Stock stock) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        stock.listIngredient();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        System.out.println(\"All ingredients listed successfully!\");     "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 15,
      "gmuthu17": 1
    }
  },
  {
    "path": "src/main/java/commands/ListUnservedCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import reservation.ReservationList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import static utils.Constants.NOT_SERVED;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/** Command object for \"list unserved reservations\" command. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class ListUnservedCommand extends ReservationCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Lists all unserved reservations."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param reservations Existing reservation list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(ReservationList reservations) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // TODO: wrap it into Ui class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        for (int i \u003d 0; i \u003c reservations.getSize(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            if (!reservations.getReservation(i).getStatus().equals(NOT_SERVED)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            System.out.println(reservations.getReservation(i));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 3,
      "SibingWu": 22
    }
  },
  {
    "path": "src/main/java/commands/MarkReservationCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import reservation.ReservationList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import static utils.Constants.DELIMITER;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import static utils.Constants.RES_INDEX_MARKER;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/** Command object for \"mark reservation\" command. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class MarkReservationCommand extends ReservationCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public MarkReservationCommand(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Specifies the index number of the target reservations."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Marks the reservation as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param reservations Existing reservation list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(ReservationList reservations) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // specifies the reservation number"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int numberPos \u003d description.indexOf(RES_INDEX_MARKER);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int numberEndPos \u003d description.indexOf(DELIMITER, numberPos);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int reservationNumber \u003d Integer.parseInt(description.substring(numberPos + RES_INDEX_MARKER.length(),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                numberEndPos + 1).trim());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // mark the reservation as done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        reservations.markReservationAsServed(reservationNumber);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 4,
      "SibingWu": 29
    }
  },
  {
    "path": "src/main/java/commands/QuitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class QuitCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public static void execute() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        System.out.println(\"The menu, stock and reservations have been saved to report.txt\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        System.out.println(\"The program is now exiting\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguan1": 9
    }
  },
  {
    "path": "src/main/java/commands/ReservationCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import reservation.ReservationList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public abstract class ReservationCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public abstract void execute(ReservationList reservations);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 2,
      "SibingWu": 5
    }
  },
  {
    "path": "src/main/java/commands/StockCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import stock.Stock;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * Represents a StockCommand. A StockCommand can be executed by"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * consists of methods to parse user\u0027s input into acceptable format"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * that can be used by its super classes such as AddStockCommand."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "public class StockCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    protected Stock stock;   "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void setData(Stock stock) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.stock \u003d stock;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void execute(Stock stock) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        System.out.println(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * Extract the name of the ingredient from a string."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * For example, \u0027i/tomato\u0027 will return \u0027tomato\u0027."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */ "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    protected String parseIngredientName(String ingredientNameInput) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        String ingredientName \u003d ingredientNameInput.trim()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .substring(2, ingredientNameInput.length());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return ingredientName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * Extract the quantity of the ingredient from a string."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * For example, \u0027q/10\u0027 will return \u002710\u0027."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */ "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    protected int parseIngredientQuantity(String ingredientQuantityInput) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        int quantity \u003d Integer.parseInt(ingredientQuantityInput.trim()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .substring(2, ingredientQuantityInput.length()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return quantity;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * Extract the price of the ingredient from a string."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * For example, \u0027p/$0.50\u0027 will return \u00270.5\u0027."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * Note that the price will not strictly be in 2 decimal "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * places. This will be handled in the AddCommand."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */ "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    protected double parseIngredientPrice(String ingredientPriceInput) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        double price \u003d Double.parseDouble(ingredientPriceInput.trim()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                .substring(3, ingredientPriceInput.length()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return price;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * Convenience constructor for ExitCommand() without parameters."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        throw new IllegalStateException(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 65,
      "gmuthu17": 1
    }
  },
  {
    "path": "src/main/java/commands/VoidReservationCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import reservation.ReservationList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import static utils.Constants.DELIMITER;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import static utils.Constants.RES_INDEX_MARKER;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/** Command object for \"void reservation\" command. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class VoidReservationCommand extends ReservationCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public VoidReservationCommand(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Specifies the index number of the target reservations."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Marks the reservation as invalid in the case like reservation cancellation and etc."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param reservations Existing reservation list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(ReservationList reservations) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // specifies the reservation number"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int numberPos \u003d description.indexOf(RES_INDEX_MARKER);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int numberEndPos \u003d description.indexOf(DELIMITER, numberPos);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int reservationNumber \u003d Integer.parseInt(description.substring(numberPos + RES_INDEX_MARKER.length(),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                numberEndPos).trim());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // voids the reservation"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        reservations.voidReservation(reservationNumber);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 4,
      "SibingWu": 29
    }
  },
  {
    "path": "src/main/java/dish/Dish.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package dish;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "public class Dish {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * Arraylist of all ingredients for dish."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    private ArrayList\u003cString\u003e ingredients;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * Name of dish."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * dish.Dish constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * @param name name of dish"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * @param ingredients arraylist of ingredients in dish"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public Dish(String name, ArrayList\u003cString\u003e ingredients) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        this.ingredients \u003d ingredients;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * Returns ingredients in dish."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * @return arraylist of ingredients in dish"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public ArrayList\u003cString\u003e getIngredients() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        return ingredients;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 35
    }
  },
  {
    "path": "src/main/java/ingredient/Ingredient.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "package ingredient;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "/** "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * The ingredient class that is used by the Stock and the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": " * dish.Dish class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "public class Ingredient {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private final Optional\u003cInteger\u003e quantity;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private final Optional\u003cDouble\u003e price;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /** A convenience constructor to be used for the Command classes. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public Ingredient(String name, Optional\u003cInteger\u003e quantity, Optional\u003cDouble\u003e price) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.quantity \u003d quantity;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.price \u003d price;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /** Returns true if the current ingredient has a specified quantity. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public boolean isQuantitySpecified() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return this.quantity.isPresent();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public double getIngredientPrice() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return this.price.orElseThrow();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public int getIngredientQuantity() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return this.quantity.orElseThrow();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public String getIngredientName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /** Returns true if both ingredients have the same name. */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        } "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        if (obj instanceof Ingredient) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            Ingredient task \u003d (Ingredient) obj;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            return task.name \u003d\u003d (this.name);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 56,
      "gmuthu17": 1
    }
  },
  {
    "path": "src/main/java/ingredient/IngredientNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "package ingredient;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "public class IngredientNotFoundException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public IngredientNotFoundException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 8
    }
  },
  {
    "path": "src/main/java/menu/Menu.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package menu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import com.sun.tools.javac.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import dish.Dish;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "public class Menu {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * Hashmap of all dishes on menu."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    private HashMap\u003cString, Dish\u003e dishMap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public Menu() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        dishMap \u003d new HashMap\u003cString, Dish\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * Adds a dish to the menu based on the input string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * @param input input string that include dish name and ingredients in no specific order"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public void addDish(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        ArrayList\u003cString\u003e ingredients \u003d parseIngredients(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        String name \u003d parseName(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        Dish d \u003d new Dish(name, ingredients);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        dishMap.put(name, d);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * Removes dish from menu."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * @param name name of dish to remove"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public void deleteDish(String name) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        dishMap.remove(name);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * Parses ingredients from string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * @param input string of ingredients"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * @return ArrayList of ingredients"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public ArrayList\u003cString\u003e parseIngredients(String input) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        ArrayList\u003cString\u003e ingredients \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        input \u003d input.substring(input.indexOf(\"i/\") + 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        input \u003d input.substring(0, input.indexOf(\";\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        String[] splitString \u003d input.split(\",\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        for (String str: splitString) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "            ingredients.add(str.trim());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        return ingredients;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * Parses name from input string."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * @param input input string"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * @return name of dish"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public String parseName(String input) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        input \u003d input.substring(input.indexOf(\"n/\") + 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        input \u003d input.substring(0, input.indexOf(\";\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * Print\u0027s dishes out from dishMap."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public void printDishes() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        for (String name: dishMap.keySet()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "            String ingredientList \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "            for (String str: dishMap.get(name).getIngredients()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "                ingredientList +\u003d str + \", \";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "            ingredientList \u003d ingredientList.substring(0, ingredientList.length() - 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "            System.out.println(\"Name: \" + name + \"; Ingredients: \" + ingredientList);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * Return\u0027s dishMap hashmap."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     * @return dishmap hashmap"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public HashMap\u003cString, Dish\u003e getDishMap() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        return dishMap;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 89
    }
  },
  {
    "path": "src/main/java/report/ReportWriter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package report;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import dish.Dish;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import menu.Menu;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import reservation.Reservation;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import reservation.ReservationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import stock.Stock;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import utils.Pair;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class ReportWriter {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    protected Menu menu;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    protected Stock stock;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    protected ReservationList reservations;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public ReportWriter(Stock stock, ReservationList reservations, Menu menu) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.stock \u003d stock;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.reservations \u003d reservations;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.menu \u003d menu;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public void writeToFile() throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        /* Written in menu.Menu \u003e Stock \u003e Reservation Order"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguan1"
        },
        "content": "         */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"./report.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            String menuTitle \u003d String.format(\"Menu Items\\n\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            fw.write(menuTitle);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            HashMap\u003cString, Dish\u003e  menuItems \u003d menu.getDishMap();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            for (String name: menuItems.keySet()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                String iList \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                for (String str: menuItems.get(name).getIngredients()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    iList +\u003d str + \", \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "                iList \u003d iList.substring(0, iList.length()-2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                String writtenString \u003d String.format(\"%d. %s \\t %s \\n\", counter, name, iList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                fw.write(writtenString);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                counter +\u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            String stockTitle \u003d String.format(\"\\nCurrent Stock\\n\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            fw.write(stockTitle);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            counter \u003d 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "            for (Map.Entry\u003cString, Pair\u003cInteger,Double\u003e\u003e ingredient : stock.getStock().entrySet()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "                String writtenString \u003d String.format(\"%d. %s \\t $%.2f %d \\n\", counter, ingredient.getKey(), ingredient.getValue().second(), ingredient.getValue().first());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                fw.write(writtenString);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                counter +\u003d 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            counter \u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            String reserveTitle \u003d String.format(\"\\nReservations\\n\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            fw.write(reserveTitle);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            for (int i \u003d 0; i \u003c reservations.getSize(); i ++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "                Reservation reserved \u003d reservations.getReservation(i);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                String writtenString \u003d String.format(\"%s\\n\",reserved.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                fw.write(writtenString);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                System.out.println(\"Invalid Path\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 12,
      "nguan1": 55
    }
  },
  {
    "path": "src/main/java/reservation/Reservation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package reservation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static utils.Constants.NOT_SERVED;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static utils.Constants.SMALL_TABLE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static utils.Constants.MEDIUM_TABLE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static utils.Constants.LARGE_TABLE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/** Reservation of the restaurant. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class Reservation {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private int reservationNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private int numberOfGuests;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String contact;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String comments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private Character status;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private Character tableSize;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor for a Reservation."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Notes that comments for reservation are optional."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public Reservation(int reservationNumber, String name, LocalDateTime date, int numberOfGuests, String contact) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.reservationNumber \u003d reservationNumber;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.numberOfGuests \u003d numberOfGuests;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.contact \u003d contact;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.comments \u003d \"No comments.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.status \u003d NOT_SERVED;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        setTableSize(this.numberOfGuests);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Gets the index number of the reservation."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Index number of the reservation"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public int getReservationNumber() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return this.reservationNumber;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Sets the contact person\u0027s name in the case that "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * the group who makes the reservation wants to change the contact person."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param name Contact person\u0027s name."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Gets the contact person of the reservation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Name of the contact person"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Sets the date in the case that "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * the group who makes the reservation wants to change the date."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param date When the reservation is. Format: yyyy-MM-dd HH:mm"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void setDate(LocalDateTime date) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Gets the date of the reservation."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Date of the reservation."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public LocalDateTime getDate() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Sets the number of the guests in the case that "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * the group who makes the reservation wants to change."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param numberOfGuests The number of people attending the reserved meal."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void setNumberOfGuests(int numberOfGuests) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.numberOfGuests \u003d numberOfGuests;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // whenever the guest number changes, the table size should change accordingly"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        setTableSize(this.numberOfGuests);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Sets the number of the guests in the case that "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * the group who makes the reservation wants to change."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param contact Contact, can be either phone number or email or etc."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void setContact(String contact) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.contact \u003d contact;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Get the contact details."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Contact details."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String getContact() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return this.contact;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Sets the miscellaneous comments, such as preference, food allergy, etc."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param comments Comments of the reservation."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void setComments(String comments) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.comments \u003d comments;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Gets any comments of the reservation."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Comments of the reservation."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String getComments() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return this.comments;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Sets the status of the reservation as served, not served, or invalid."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param status Status character of the reservation."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void setStatus(Character status) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Gets the status of the reservation, served, not served, or invalid."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Status of the reservation."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public Character getStatus() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return this.status;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Assigns the table according to the number of people attending the reserved meal."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param numberOfGuests The number of people attending the meal."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private void setTableSize(int numberOfGuests) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        if (numberOfGuests \u003c\u003d 4) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            this.tableSize \u003d SMALL_TABLE;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        } else if (numberOfGuests \u003c\u003d 8) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            this.tableSize \u003d MEDIUM_TABLE;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            this.tableSize \u003d LARGE_TABLE;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Gets the table size."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Table size."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public Character getTableSize() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return this.tableSize;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return String.format(\"Reservation [%d]\\n\" +"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                        \"Status: %c\\n\" +"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                        \"contact person: %s\\n\" +"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                        \"date: %s\\n\" +"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                        \"number of guests: %d\\n\" +"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                        \"table size: %c\\n\" +"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                        \"contact details: %s\\n\" +"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                        \"comments: %s\\n\", "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                this.reservationNumber, this.status, this.name, this.date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                this.numberOfGuests, this.tableSize, this.contact, this.comments);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 1,
      "SibingWu": 190
    }
  },
  {
    "path": "src/main/java/reservation/ReservationList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package reservation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import static utils.Constants.INVALID;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import static utils.Constants.SERVED;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/** Contains the reservation list e.g., it has operations to add/delete/list reservations in the list. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class ReservationList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    List\u003cReservation\u003e reservations;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor and starts with an empty list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public ReservationList() { "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        reservations \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor and starts with a given ArrayList of reservations."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param reservations Beginning list of reservations."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public ReservationList(List\u003cReservation\u003e reservations) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.reservations \u003d reservations;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Adds the reservation into the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param reservation Reservation that needs to be added into the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void addReservation(Reservation reservation) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        reservations.add(reservation);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Marks the reservation as served."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param reservationNumber The index number of the reservation."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void markReservationAsServed(int reservationNumber) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        reservations.get(reservationNumber).setStatus(SERVED);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Marks the reservation as invalid, etc. the customer wants to cancel the reservation or wrong reservation"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param reservationNumber The index number of the reservation."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void voidReservation(int reservationNumber) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        reservations.get(reservationNumber).setStatus(INVALID);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Gets the size of the reservation list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Size of reservation list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return this.reservations.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Gets the reservation with the target reservation number."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param reservationNumber Target reservation number."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Reservation indexed with the target number."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public Reservation getReservation(int reservationNumber) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        return reservations.get(reservationNumber);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 4,
      "SibingWu": 70
    }
  },
  {
    "path": "src/main/java/stock/Stock.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "package stock;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import ingredient.Ingredient;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import ingredient.IngredientNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import utils.Pair;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * This class encapsulates all information of the ingredient"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * stock. It contains all the ingredients stored, along with "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * their respective current prices and quantities."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "public class Stock {   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * A HashMap that maps a ingredient\u0027s name to its "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * quantity and price."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * Note that quantity is an Integer and price is a Double."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private final Map\u003cString, Pair\u003cInteger, Double\u003e\u003e stock;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public Stock() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.stock \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * Adds an ingredientName to the current stock. If the ingredient"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * exists previously, update the quantity by adding the current quantity"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * to the previous quantity. Otherwise, add an entirely new entry into"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * the HashMap."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void addIngredient(Ingredient ingredientToAdd) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        String ingredientName \u003d ingredientToAdd.getIngredientName();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        int quantityToAdd \u003d ingredientToAdd.getIngredientQuantity();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        double ingredientPrice \u003d ingredientToAdd.getIngredientPrice();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        if (stock.containsKey(ingredientName)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            int currQuantity \u003d stock.get(ingredientName).first();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            int newQuantity \u003d currQuantity + quantityToAdd;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            stock.replace(ingredientName, Pair.of(newQuantity, ingredientPrice));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            stock.put(ingredientName, Pair.of(quantityToAdd, ingredientPrice));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * Deletes an ingredientName from the current stock. If the ingredient"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * exists previously, update the quantity by subtracting the quantity"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * supplied by the user to the current quantity. If there is no quantity"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * specified, removed the ingredientName from the HashMap. Note that the "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * quantity for an ingredient to be deleted is optional. Also, there is a "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * lower 0 bound such that any subtraction of the quantity"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * cannot be lesser than zero. An ingredient with 0 quantity however, is not"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * deleted from the hashMap."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void deleteIngredient(Ingredient ingredient) "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            throws IngredientNotFoundException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        String ingredientName \u003d ingredient.getIngredientName();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        boolean hasIngredientInStock \u003d stock.containsKey(ingredientName);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        boolean hasQuantitySpecified \u003d ingredient.isQuantitySpecified();        "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        if (hasIngredientInStock \u0026\u0026 hasQuantitySpecified) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            int currQuantity \u003d stock.get(ingredientName).first();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            int quantityToDelete \u003d ingredient.getIngredientQuantity();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            int newQuantity \u003d currQuantity - quantityToDelete;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            newQuantity \u003d ((newQuantity \u003c 0) ? 0 : newQuantity);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            double ingredientPrice \u003d stock.get(ingredientName).second(); "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            stock.replace(ingredientName, Pair.of(newQuantity, ingredientPrice));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        } else if (hasIngredientInStock \u0026\u0026 !hasQuantitySpecified) {    "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            stock.remove(ingredientName);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            throw new IngredientNotFoundException(\"This ingredient \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + \"is not in the stock currently!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * Lists all current ingredients in the stock."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void listIngredient() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        System.out.println(\"Here are the ingredients in the stock currently:\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        printStock();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");       "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * A utility function to print the stock to help to parse the price into 2 decimal places"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * to display as dollars appropriately."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     * "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private void printStock() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        int ingredientCounter \u003d 1;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        for (Map.Entry\u003cString, Pair\u003cInteger, Double\u003e\u003e ingredient : stock.entrySet()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            String ingredientName \u003d ingredient.getKey();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            int quantity \u003d ingredient.getValue().first();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            double price \u003d ingredient.getValue().second();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            System.out.println(ingredientCounter "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + \". \""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + \"[\" "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + quantity "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + \"]\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + \"[$\" "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + String.format(\"%.2f\", price) "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + \"]\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + \" \" "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                    + ingredientName);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "           "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "            ingredientCounter++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public Map\u003cString, Pair\u003cInteger, Double\u003e\u003e getStock() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return this.stock;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 128
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " * TextUi of the application. "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        System.out.println(\"WELCOME!!!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        String fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return fullInputLine;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 37
    }
  },
  {
    "path": "src/main/java/utils/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import menu.Menu;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import report.ReportWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import reservation.ReservationList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import stock.Stock;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public void parseCommand(String command, Menu menu, Stock stock, ReservationList reservations) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        if (command.equals(\"bye\")){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                new ReportWriter(stock,reservations,menu).writeToFile();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                System.out.println(\"Error writing to file\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            new QuitCommand().execute();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        String[] commands \u003d command.split(\";\",2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        String[] split_commands \u003d commands[0].split(\" \",2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        if (split_commands[0].equals(\"add\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            if (split_commands[1].equals(\"dish\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                //Add dish"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                menu.addDish(commands[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                successfulCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else if (split_commands[1].equals(\"stock\")){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                //Add stock"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                new AddStockCommand(commands[1]).execute(stock);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                successfulCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else if (split_commands[1].equals(\"reservation\")){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                //Add reservation"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                new AddReservationCommand(commands[1]).execute(reservations);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                successfulCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                errorCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        } else if (split_commands[0].equals(\"delete\")){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            if (split_commands[1].equals(\"dish\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                //delete dish"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "                String newcomm \u003d commands[1].substring(3, commands[1].length()-1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "                menu.deleteDish(newcomm);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                successfulCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else if (split_commands[1].equals(\"stock\")){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                //delete stock"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                new DeleteStockCommand(commands[1]).execute(stock);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                successfulCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else if (split_commands[1].equals(\"reservation\")){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                //delete reservation"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                new VoidReservationCommand(commands[1]).execute(reservations);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                successfulCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                errorCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        } else if (split_commands[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            if (split_commands[1].equals(\"dish\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                //list dish"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                menu.printDishes();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                successfulCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else if (split_commands[1].equals(\"stock\")){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                //list stock"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "                new ListStockCommand().execute(stock);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                successfulCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else if (split_commands[1].equals(\"reservation\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                //list reservation"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                new ListReservationCommand().execute(reservations);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                successfulCommand();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                errorCommand();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            errorCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public static void errorCommand() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        System.out.println(\"Incorrect command\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public static void successfulCommand() { System.out.println(\"The command has been successfully executed.\");}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 3,
      "gmuthu17": 4,
      "nguan1": 73
    }
  },
  {
    "path": "src/main/java/utils/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/** Constants used in the program. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final Character SERVED \u003d \u0027Y\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final Character NOT_SERVED \u003d \u0027N\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final Character INVALID \u003d \u0027I\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final Character SMALL_TABLE \u003d \u0027S\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final Character MEDIUM_TABLE \u003d \u0027M\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final Character LARGE_TABLE \u003d \u0027L\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String RES_ADD_COMMAND \u003d \"add reservation\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String RES_MARK_COMMAND \u003d \"mark reservation\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String RES_VOID_COMMAND \u003d \"void reservation\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String RES_LIST_COMMAND \u003d \"list reservation\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String RES_LIST_SERVED_COMMAND \u003d \"list served reservation\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String RES_LIST_UNSERVED_COMMAND \u003d \"list unserved reservation\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String RES_INDEX_MARKER \u003d \"r/\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String RES_PERSON_MARKER \u003d \"p/\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String RES_DATE_MARKER \u003d \"d/\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String RES_NUM_MARKER \u003d \"n/\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String RES_CONTACT_MARKER \u003d \"c/\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String RES_COMMENT_MARKER \u003d \"m/\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String DELIMITER \u003d \";\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 1,
      "SibingWu": 27
    }
  },
  {
    "path": "src/main/java/utils/Pair.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "public class Pair\u003cT, U\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private final T firstVal;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private final U secondVal;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    private Pair(T firstVal, U secondVal) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.firstVal \u003d firstVal;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        this.secondVal \u003d secondVal;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }        "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public static \u003cT, U\u003e Pair\u003cT, U\u003e of(T firstVal, U secondVal) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return new Pair\u003cT, U\u003e(firstVal, secondVal);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public T first() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return this.firstVal;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public U second() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return this.secondVal;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "} "
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 23
    }
  },
  {
    "path": "src/test/java/MenuTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import menu.Menu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "class MenuTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public void parseIngredientsTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        Menu m \u003d new Menu();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        ArrayList\u003cString\u003e l1 \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        l1.add(\"cheese\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        l1.add(\"bacon\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        String d1a \u003d \"n/bacon pizza; i/cheese, bacon;\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        assertEquals(l1, m.parseIngredients(d1a));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        String d1b \u003d \"i/cheese, bacon; n/bacon pizza;\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        assertEquals(l1, m.parseIngredients(d1b));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        ArrayList\u003cString\u003e l2 \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        l2.add(\"chicken\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        l2.add(\"rice\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        l2.add(\"chili\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        String d2 \u003d \"i/chicken, rice, chili; n/chicken biryani;\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        assertEquals(l2, m.parseIngredients(d2));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public void parseNameTest() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        Menu m \u003d new Menu();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        String d1 \u003d \"n/bacon pizza; i/cheese, bacon;\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        assertEquals(\"bacon pizza\", m.parseName(d1));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        String d2 \u003d \"i/chicken, rice, chili; n/chicken biryani;\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        assertEquals(\"chicken biryani\", m.parseName(d2));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public void addDishTest() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        Menu m \u003d new Menu();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        String d1 \u003d \"n/bacon pizza; i/cheese, bacon;\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        m.addDish(d1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        assertTrue(m.getDishMap().containsKey(\"bacon pizza\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        String d2 \u003d \"i/chicken, rice, chili; n/chicken biryani;\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        m.addDish(d2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        assertTrue(m.getDishMap().containsKey(\"chicken biryani\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    public void deleteDishTest() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        Menu m \u003d new Menu();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        String d1 \u003d \"n/bacon pizza; i/cheese, bacon;\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        m.addDish(d1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        assertTrue(m.getDishMap().containsKey(\"bacon pizza\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        String d2 \u003d \"i/chicken, rice, chili; n/chicken biryani;\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        m.addDish(d2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        assertTrue(m.getDishMap().containsKey(\"chicken biryani\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        m.deleteDish(\"bacon pizza\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        assertFalse(m.getDishMap().containsKey(\"bacon pizza\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        m.deleteDish(\"chicken biryani\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        assertFalse(m.getDishMap().containsKey(\"chicken biryani\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "        m.printDishes();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmuthu17": 65
    }
  },
  {
    "path": "src/test/java/seedu/duke/IngredientTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import ingredient.Ingredient;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "class IngredientTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void testIngredientToString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        assertEquals(\"tomato\", new Ingredient(\"tomato\", Optional.empty(), Optional.empty()).toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void testIsQuantitySpecified() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        assertTrue(new Ingredient(\"tomato\", Optional.of(1), Optional.empty()).isQuantitySpecified());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        assertFalse( new Ingredient(\"tomato\", Optional.empty(), Optional.empty()).isQuantitySpecified());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void testEquals() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Ingredient tomatoA \u003d new Ingredient(\"tomato\", Optional.of(1), Optional.empty());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Ingredient tomatoACopy \u003d new Ingredient(\"tomato\", Optional.of(1), Optional.empty());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Ingredient tomatoB \u003d new Ingredient(\"tomato\", Optional.of(2), Optional.empty());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        assertTrue(tomatoA.equals(tomatoACopy));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        assertTrue(tomatoA.equals(tomatoB));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 30,
      "SibingWu": 2
    }
  },
  {
    "path": "src/test/java/seedu/duke/StockTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "//import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "//import static org.junit.Assert.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "//import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import ingredient.Ingredient;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import ingredient.IngredientNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import stock.Stock;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import utils.Pair;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "class StockTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public static Map\u003cString, Pair\u003cInteger, Double\u003e\u003e createStockCopy() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Map\u003cString, Pair\u003cInteger, Double\u003e\u003e stockCopy \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        stockCopy.put(\"tomato\", Pair.of(1, 0.50));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        stockCopy.put(\"tomato\", Pair.of(2, 0.50));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        return stockCopy;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void testAddIngredient() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Stock stock \u003d new Stock();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        stock.addIngredient(new Ingredient(\"tomato\", Optional.of(1), Optional.of(0.50)));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        stock.addIngredient(new Ingredient(\"tomato\", Optional.of(2), Optional.of(0.50)));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Map\u003cString, Pair\u003cInteger, Double\u003e\u003e stockCopy \u003d createStockCopy();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        assertEquals(stock.getStock().keySet(), (stockCopy.keySet()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    public void testDeleteIngredient() throws IngredientNotFoundException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Stock stock \u003d new Stock();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        stock.addIngredient(new Ingredient(\"tomato\", Optional.of(1), Optional.of(0.50)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        stock.deleteIngredient(new Ingredient(\"tomato\", Optional.of(1), Optional.empty()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        Map\u003cString, Pair\u003cInteger, Double\u003e\u003e stockCopy \u003d createStockCopy();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "        assertFalse(stock.getStock().equals(stockCopy));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 38,
      "SibingWu": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "add dish; n/pizza; i/cheese, sauce;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "list dish"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "add dish; n/rice; i/rice, salt;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "delete dish; n/pizza;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "list dish"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "add stock; i/tomato; q/10; p/$0.40"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "add stock; i/tomato; q/10; p/$0.50"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "list stock"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "delete stock; i/tomato; q/1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "delete stock; i/tomato; q/9;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "delete stock; i/tomato; "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JosephLimWeiJie"
        },
        "content": "list stock"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmuthu17"
        },
        "content": "add reservation; p/Peter; d/2020-03-12 12:00; n/3; c/98953422;"
      }
    ],
    "authorContributionMap": {
      "JosephLimWeiJie": 7,
      "gmuthu17": 6
    }
  }
]
