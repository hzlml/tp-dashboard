[
  {
    "path": "docs/AboutUs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nyan Wun Paing | [Github](https://github.com/NyanWunPaing) | [Portfolio](docs/team/Nyan.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Janice| [Github](https://github.com/Janicetyy/tp) | [Portfolio](docs/team/janice.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yap Kesin | [Github](https://github.com/itskesin) | [Portfolio](docs/team/Kesin.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Siti Nadiah | [Github](https://github.com/sitinadiah25) | [Portfolio](docs/team/sitinadiah.md)"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 2,
      "Janicetyy": 1,
      "sitinadiah25": 1,
      "-": 4
    }
  },
  {
    "path": "docs/team/Nyan.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "# Nyan - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 6
    }
  },
  {
    "path": "docs/team/janice.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "# Janice - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "Janicetyy": 6
    }
  },
  {
    "path": "docs/team/sitinadiah.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "#Siti Nadiah "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "##Contact: e0318697@u.nus.edu "
      }
    ],
    "authorContributionMap": {
      "sitinadiah25": 2
    }
  },
  {
    "path": "src/main/java/seedu/happypills/HappyPills.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package seedu.happypills;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import seedu.happypills.data.PatientList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import seedu.happypills.exception.HappyPillsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import seedu.happypills.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import seedu.happypills.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class HappyPills {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private PatientList patients;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Sets up the required objects, loads up the data from the storage file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public HappyPills() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        ui \u003d new TextUi();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        patients \u003d new PatientList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        new HappyPills().run();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Runs the program until termination."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                String fullCommand \u003d in.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                System.out.println(ui.DIVIDER);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                c.execute(patients);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            } catch (HappyPillsException hpe) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                System.out.println(hpe.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                System.out.println(ui.DIVIDER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 50,
      "sitinadiah25": 1
    }
  },
  {
    "path": "src/main/java/seedu/happypills/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package seedu.happypills.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import seedu.happypills.data.Patient;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import seedu.happypills.data.PatientList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import seedu.happypills.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String nric;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected int phoneNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String dateOfBirth;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String bloodType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String allergies;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String remarks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for AddCommand Class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new AddCommand Object with the information provided."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param name        Contains the name of the patient."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param nric        Contains the nric of the patient."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param phoneNumber Contains the phone number of the patient."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public AddCommand(String name, String nric, int phoneNumber, String dateOfBirth,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                      String bloodType, String allergies, String remarks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.nric \u003d nric;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.phoneNumber \u003d phoneNumber;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.dateOfBirth \u003d dateOfBirth;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.bloodType \u003d bloodType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.allergies \u003d allergies;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.remarks \u003d remarks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Adds a new task to the list with the information provided by calling."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * {} (or) {}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * (or) {} as require"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param patients Contains the list of tasks on which the commands are executed on."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void execute(PatientList patients) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        int patientNum \u003d patients.size();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        patients.add(new Patient(name, nric, phoneNumber, dateOfBirth, bloodType, allergies, remarks));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        TextUi.printPatient(patients.get(patientNum), patientNum);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 49
    }
  },
  {
    "path": "src/main/java/seedu/happypills/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package seedu.happypills.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import seedu.happypills.data.PatientList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import seedu.happypills.exception.HappyPillsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Used for execution of commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Contains both the information related to user commands and methods to execute them."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Implementation is done on child classes."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "itskesin"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Contain boolean to check for exit condition."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for Command Class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Set isExit to false as default"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Executes the command based on the information provided by the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param patients Contains the list of tasks on which the commands are executed on."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @throws HappyPillsException If issues are found during execution of command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void execute(PatientList patients) throws HappyPillsException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns exit condition."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return isExit Contains information that allow the program to exit."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 42,
      "itskesin": 1
    }
  },
  {
    "path": "src/main/java/seedu/happypills/commands/EditCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "package seedu.happypills.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import org.w3c.dom.Text;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.data.Patient;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.data.PatientList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.exception.HappyPillsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    protected String nric;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    protected String editField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    protected String newContent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * Constructor for EditCommand Class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * It creates a new EditCommand Object with the information provided."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * @param nric Contains the nric of the patient that is to be retrieved."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * @param editField Contains the attribute that is to be edited."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * @param newContent Contains the string that the attribute is to be updated to."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    public EditCommand(String nric, String editField, String newContent) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        this.nric \u003d nric;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        this.editField \u003d editField;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        this.newContent \u003d newContent;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * Edit the attribute of the patient according to the given attribute."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * @param patients Contains the list of tasks on which the commands are executed on."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * @throws HappyPillsException Throws an exception if patient does not exist in patient list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    private void editChanges(PatientList patients) throws HappyPillsException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        boolean inList \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        for (Patient patient : patients) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "            if (patient.getNric().equals(nric)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "                inList \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "                if (editField.equals(\"phone\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "                    patient.setPhoneNumber(Integer.parseInt(newContent));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "                } else if (editField.equals(\"allergies\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "                    patient.setAllergies(newContent);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "                } else if (editField.equals(\"remarks\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "                    patient.setRemarks(newContent);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "                TextUi.printEditSuccess(patient);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        if (!inList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "            throw new HappyPillsException(\"NRIC not in patient list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * Adds a new task to the list with the information provided by calling."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * {} (or) {}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * (or) {} as require"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * @param patients Contains the list of tasks on which the commands are executed on."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * @throws HappyPillsException Throws an exception if the edit field is not valid."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    public void execute(PatientList patients) throws HappyPillsException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        if (editField.equals(\"phone\") || editField.equals(\"allergies\") || editField.equals(\"remarks\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "            editChanges(patients);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "            throw new HappyPillsException(\"Edit field is not valid.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sitinadiah25": 71
    }
  },
  {
    "path": "src/main/java/seedu/happypills/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "package seedu.happypills.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.data.Patient;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.data.PatientList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * Adds a new task to the list with the information provided by calling."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * {} (or) {}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * (or) {} as require"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     * @param patients Contains the list of tasks on which the commands are executed on."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    public void execute(PatientList patients) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        TextUi.printExit();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sitinadiah25": 24
    }
  },
  {
    "path": "src/main/java/seedu/happypills/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "itskesin"
        },
        "content": "package seedu.happypills.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "itskesin"
        },
        "content": "import seedu.happypills.data.PatientList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "itskesin"
        },
        "content": "import seedu.happypills.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "itskesin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "itskesin"
        },
        "content": " * Displays full help instructions for every command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "itskesin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "itskesin"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    public void execute(PatientList patients) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        TextUi.printHelp();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "itskesin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "itskesin": 14
    }
  },
  {
    "path": "src/main/java/seedu/happypills/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "itskesin"
        },
        "content": "package seedu.happypills.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "itskesin"
        },
        "content": "import seedu.happypills.data.PatientList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "itskesin"
        },
        "content": "import seedu.happypills.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "itskesin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "itskesin"
        },
        "content": " * Lists all patients to the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "itskesin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "itskesin"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    public void execute(PatientList patients) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        if (patients.isEmpty()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "itskesin"
        },
        "content": "            TextUi.printEmptyList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "itskesin"
        },
        "content": "            TextUi.printList(patients);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "itskesin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "itskesin": 19
    }
  },
  {
    "path": "src/main/java/seedu/happypills/commands/RetrieveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "package seedu.happypills.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "import seedu.happypills.data.Patient;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "import seedu.happypills.data.PatientList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "import seedu.happypills.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "public class RetrieveCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "    protected String patientNric;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "     * Constructor for RetrieveCommand Class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "     * It creates a new RetrieveCommand Object with the information provided."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "     * @param patientNric        Contains the nric of the patient that is to be retrieved."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "    public RetrieveCommand(String patientNric) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "        this.patientNric \u003d patientNric;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "    public void execute(PatientList patients) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "        for (Patient patient : patients) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "            if (patient.getNric().equals(patientNric)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "                TextUi.printPatient(patient);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Janicetyy": 29
    }
  },
  {
    "path": "src/main/java/seedu/happypills/data/Patient.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package seedu.happypills.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * It also functions as base class from which specialised tasks are inherited from."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class Patient {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Stores the description of the patient."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String nric;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected int phoneNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String dateOfBirth;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String bloodType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String allergies \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String remarks \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for Task Class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new task with the description provided by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It also sets isDone to false as it is a newly created task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param name Name of the patient."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param nric NRIC of the patient."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public Patient(String name, String nric, int phoneNumber, String dateOfBirth,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                   String bloodType, String allergies, String remarks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.nric \u003d nric;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.phoneNumber \u003d phoneNumber;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.dateOfBirth \u003d dateOfBirth;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.bloodType \u003d bloodType;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.allergies \u003d allergies;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.remarks \u003d remarks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for Task Class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new task with the description provided by the user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It also sets isDone to false as it is a newly created task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param name Name of the patient."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param nric NRIC of the patient."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public Patient(String name, String nric, int phoneNumber, String dateOfBirth,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                   String bloodType, String allergies) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.nric \u003d nric;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.phoneNumber \u003d phoneNumber;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.dateOfBirth \u003d dateOfBirth;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.bloodType \u003d bloodType;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.allergies \u003d allergies;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for Task Class."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new task with the description provided by the user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It also sets isDone to false as it is a newly created task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param name Name of the patient."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param nric NRIC of the patient."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public Patient(String name, String nric, String dateOfBirth,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                   int phoneNumber, String bloodType, String remarks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.nric \u003d nric;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.phoneNumber \u003d phoneNumber;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.dateOfBirth \u003d dateOfBirth;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.bloodType \u003d bloodType;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.remarks \u003d remarks;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for Task Class."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new task with the description provided by the user."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It also sets isDone to false as it is a newly created task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param name Name of the patient."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param nric NRIC of the patient."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public Patient(String name, String nric, String dateOfBirth,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                   int phoneNumber, String bloodType) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.nric \u003d nric;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.phoneNumber \u003d phoneNumber;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.dateOfBirth \u003d dateOfBirth;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.bloodType \u003d bloodType;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns the status of the task in form of an icon."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * \"\\u2713\" is returned to denote that the task is complete."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * \"\\u2718\" is returned to denote that the task is incomplete."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return statusIcon Represents the current status of the task as described above."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns the nric of the patient."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return nric Represents the nric of the patient."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String getNric() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return this.nric;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns the phone number of the patient."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return phoneNumber Represents the phone number of the patient."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public int getPhoneNumber() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return this.phoneNumber;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns the date of birth of the patient."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return phoneNumber Represents the date of birth of the patient."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String getDateOfBirth() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return this.dateOfBirth;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns the blood type of the patient."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return phoneNumber Represents the blood type of the patient."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String getBloodType() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return this.bloodType;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns the allergies of the patient."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return allergies Represents the allergies of the patient."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String getAllergies() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return this.allergies;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns the remarks of the patient."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return remarks Represents the remarks of the patient."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String getRemarks() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return this.remarks;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String text \u003d \"        Name : \" + this.name + \"\\n\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                + \"        NRIC : \" + this.nric + \"\\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                + \"        Phone Number : \" + this.phoneNumber + \"\\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                + \"        DOB : \" + this.dateOfBirth + \"\\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                + \"        Blood Type : \" + this.bloodType + \"\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                + \"        Allergies : \" + this.allergies + \"\\n\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                + \"        Remarks : \" + this.remarks + \"\\n\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    public void setPhoneNumber(int phoneNumber) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        this.phoneNumber \u003d phoneNumber;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    public void setAllergies(String allergies) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        this.allergies \u003d allergies;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    public void setRemarks(String remarks) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        this.remarks \u003d remarks;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 169,
      "sitinadiah25": 12
    }
  },
  {
    "path": "src/main/java/seedu/happypills/data/PatientList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package seedu.happypills.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class PatientList extends ArrayList\u003cPatient\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Stores all the tasks provided."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private ArrayList\u003cPatient\u003e patients;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for TaskList Class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public PatientList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.patients \u003d new ArrayList\u003cPatient\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Instructs {} to list the tasks with the search keyword"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * if the correct format is used."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param patients Current list of tasks.."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param keyword  The word used for search."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public boolean findKeyword(String keyword, PatientList patients) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        for (Patient patient : patients) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (patient.getName().contains(keyword)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 34
    }
  },
  {
    "path": "src/main/java/seedu/happypills/exception/HappyPillsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package seedu.happypills.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Signals that some given data does not fulfill some constraints."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class HappyPillsException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Updates Exception message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param message Contain relevant information on the failed constraint(s)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public HappyPillsException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 14
    }
  },
  {
    "path": "src/main/java/seedu/happypills/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package seedu.happypills.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.commands.EditCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.commands.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.commands.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.commands.HelpCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.commands.RetrieveCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import seedu.happypills.exception.HappyPillsException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param fullCommand Full user input string"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return the command Based on the user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @throws HappyPillsException Errors base on invalid input or insufficient input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static Command parse(String fullCommand) throws HappyPillsException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String[] userCommand \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        if (userCommand[0].equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else if (userCommand[0].equalsIgnoreCase(\"add\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (userCommand.length \u003d\u003d 1 || userCommand[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new HappyPillsException(\"    detail is empty\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            String[] patientDetail \u003d userCommand[1].split(\",\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (patientDetail.length !\u003d 7) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new HappyPillsException(\"    please ensure to input your details\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            return new AddCommand(patientDetail[0], patientDetail[1],"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    Integer.parseInt(patientDetail[2]), patientDetail[3],"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    patientDetail[4], patientDetail[5], patientDetail[6]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else if (userCommand[0].equalsIgnoreCase(\"help\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else if (userCommand[0].equalsIgnoreCase(\"get\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            return new RetrieveCommand(userCommand[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        } else if (userCommand[0].equalsIgnoreCase(\"edit\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "            String[] edit \u003d fullCommand.split(\" \", 4);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "            return new EditCommand(edit[1], edit[2], edit[3]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        } else if (userCommand[0].equalsIgnoreCase(\"exit\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            throw new HappyPillsException(\"    Invalid Command\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 40,
      "sitinadiah25": 14
    }
  },
  {
    "path": "src/main/java/seedu/happypills/ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package seedu.happypills.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import seedu.happypills.data.Patient;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "itskesin"
        },
        "content": "import seedu.happypills.data.PatientList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "itskesin"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    public static final String DIVIDER \u003d \"    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "itskesin"
        },
        "content": "     * Shows a list of patients\u0027 name and their NRIC to the user, formatted as an indexed list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "itskesin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    public static void printList(PatientList patients) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        for (Patient patient : patients) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "itskesin"
        },
        "content": "            System.out.println(\"    \" + patient.getName() + \" | \" + patient.getNric());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "itskesin"
        },
        "content": "     * Generates and prints the list of commands."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "itskesin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        String helpMessage \u003d \"    Shows program usage instructions:\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"      add NAME, NRIC, PHONE_NUMBER, DOB, BLOOD_TYPE, [ALLERGIES], [REMARKS]\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"      list \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"      open NRIC\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"      edit phone/allergies/remarks EDITED_INPUT\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"      close\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"      delete NRIC\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"      help\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                + \"      exit\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(helpMessage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "itskesin"
        },
        "content": "     * Displays empty list message when there are no patients in the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "itskesin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    public static void printEmptyList() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        System.out.println(\"    There are no patients in the list.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "itskesin"
        },
        "content": "     * Generates and prints the welcome message upon the start of the application."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "itskesin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        String logo \u003d \"\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \" __   __  _______  _______  _______  __   __  _______  ___   ___      ___      _______ \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"|  | |  ||   _   ||       ||       ||  | |  ||       ||   | |   |    |   |    |       |\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"|  |_|  ||  |_|  ||    _  ||    _  ||  |_|  ||    _  ||   | |   |    |   |    |  _____|\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"|       ||       ||   |_| ||   |_| ||       ||   |_| ||   | |   |    |   |    | |_____ \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"|       ||       ||    ___||    ___||_     _||    ___||   | |   |___ |   |___ |_____  |\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"|   _   ||   _   ||   |    |   |      |   |  |   |    |   | |       ||       | _____| |\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"|__| |__||__| |__||___|    |___|      |___|  |___|    |___| |_______||_______||_______|\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        System.out.println(\"Hello from\" + logo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        System.out.println(\"What can I do for you today, doctor?\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Generates and prints the welcome message upon the start of the application."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static void printPatient(Patient patient, int patientNum) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(\"    Got it! I\u0027ve added this patient:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(patient + DIVIDER);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "    public static void printPatient(Patient patient) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "        System.out.println(patient + DIVIDER);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    public static void printEditSuccess(Patient patient) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        System.out.println(\"Patient details have been updated as follows: \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        System.out.println(patient + DIVIDER);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Janicetyy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    public static void printExit() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        System.out.println(\"Thank you for using HappyPills! ^_^\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        System.out.println(\"See you again!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "itskesin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 13,
      "Janicetyy": 7,
      "sitinadiah25": 9,
      "itskesin": 55
    }
  },
  {
    "path": "src/test/java/seedu/happypills/HappyPillsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package seedu.happypills;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "class HappyPillsTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 2,
      "-": 10
    }
  },
  {
    "path": "src/test/java/seedu/happypills/commands/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package seedu.happypills.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import seedu.happypills.data.PatientList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "itskesin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "class AddCommandTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    void testExecute() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        PatientList patients \u003d new PatientList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        AddCommand testAddCommand \u003d new AddCommand("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"kesin\", \"S0618\", 912, \"22aug\", \"B-\",\"meat\", \"Strong\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        );"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        testAddCommand.execute(patients);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        assertEquals(1,patients.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 18,
      "itskesin": 1
    }
  },
  {
    "path": "src/test/java/seedu/happypills/commands/EditCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "package seedu.happypills.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.data.Patient;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.data.PatientList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import seedu.happypills.exception.HappyPillsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "class EditCommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    void testExecute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        PatientList patients \u003d new PatientList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        AddCommand testAddCommand \u003d new AddCommand("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "                \"kesin\", \"S0618\", 912, \"22aug\", \"B-\",\"meat\", \"Strong\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        );"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        testAddCommand.execute(patients);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        EditCommand testEditCommand \u003d new EditCommand(\"S0618\", \"remarks\", \"Weak\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "            testEditCommand.execute(patients);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        } catch (HappyPillsException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "            // catch exception"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        assertEquals(1, patients.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        for (Patient patient : patients) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "            if (patient.getNric().equals(\"S0618\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "                assertEquals(\"Weak\", patient.getRemarks());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sitinadiah25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sitinadiah25": 32
    }
  },
  {
    "path": "src/test/java/seedu/happypills/data/PatientTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "itskesin"
        },
        "content": "package seedu.happypills.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "itskesin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "itskesin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "itskesin"
        },
        "content": "class PatientTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    Patient patientOne \u003d new Patient(\"Nyan\", \"S1234Z\", 999,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "itskesin"
        },
        "content": "            \"22 Aug\", \"O+\", \"Peanuts\", \"NIL\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    Patient patientTwo \u003d new Patient(\"Nadiah\", \"S9988N\", 888,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "itskesin"
        },
        "content": "            \"25 Sept\", \"A-\", \"School\", \"NIL\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    Patient patientThree \u003d new Patient(\"Jan\", \"S9888F\", 912,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "itskesin"
        },
        "content": "            \"10 March\", \"B\", \"NIL\", \"NIL\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    void getName() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        assertEquals(\"Nyan\", patientOne.getName());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    void getNric() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        assertEquals(\"S9988N\", patientTwo.getNric());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    void getPhoneNumber() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        assertEquals(912, patientThree.getPhoneNumber());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    void getDateOfBirth() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        assertEquals(\"25 Sept\", patientTwo.getDateOfBirth());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    void getBloodType() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        assertEquals(\"O+\", patientOne.getBloodType());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    void getAllergies() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        assertEquals(\"NIL\", patientThree.getAllergies());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    void getRemarks() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        assertEquals(\"NIL\", patientThree.getRemarks());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        String correctOutput \u003d \"        Name : Nyan\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"        NRIC : S1234Z\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"        Phone Number : 999\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"        DOB : 22 Aug\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"        Blood Type : O+\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"        Allergies : Peanuts\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "itskesin"
        },
        "content": "                + \"        Remarks : NIL\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "itskesin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "itskesin"
        },
        "content": "        assertEquals(correctOutput, patientOne);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "itskesin"
        },
        "content": "    */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "itskesin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "itskesin": 65
    }
  }
]
