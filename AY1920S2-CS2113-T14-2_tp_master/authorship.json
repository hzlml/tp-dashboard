[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Project Template for the tP"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## Team 14"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a small CLI Java project. It uses Gradle for build automation and GitHub Actions for CI."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. **IMPORTANT: Locate the `build.gradle` file** in the project directory, select it, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the set up is complete, you can locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :compileJava"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :processResources NO-SOURCE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :classes"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :Duke.main()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   What is your name?"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   Type some word and press enter to let the execution proceed to the end. Also note how Intellij is now using Gradle to run your code (you can make Intellij run the code without Gradle [this way](tutorials/assets/RunUsingIntellij.png))."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "## Build Automation using Gradle"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "This project is already configured to use Gradle. Read the following tutorial to learn how to use gradle to do tasks such as running tests, checking code against teh style rules, and generating the JAR file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "To run JUnit tests (after you have added JUnit tests), you can run the `test` Gradle task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "## CI using GitHub Actions"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "The project is already configured to use [GitHub actions](https://github.com/features/actions). When you push a commit to your fork or PR against an upstream repo, GitHub actions will run automatically to build and verify the product."
      }
    ],
    "authorContributionMap": {
      "-": 49,
      "alaukiknpant": 1
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "group \u0027seedu.techtoday\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    compile \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    compile \u0027com.mashape.unirest:unirest-java:1.4.9\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    implementation \u0027org.jetbrains:annotations:15.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    mainClassName \u003d \"seedu.techtoday.TechToday\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    archiveBaseName \u003d \"techtoday\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.0.1\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 4,
      "-": 37,
      "alaukiknpant": 2
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Doe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Melissa Lopez | [Github](https://github.com/melylopez99) | [Portfolio](docs/team/melissalopez.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kate Lo | [Github](https://github.com/katelo731) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yolanda Ma | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 1,
      "katelo731": 1,
      "yolanmz": 1,
      "-": 7
    }
  },
  {
    "path": "docs/melissalopez.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "# Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Portfolio: Melissa Lopez"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 3
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/Article.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yolanmz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Main class for Article objects."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "public class Article {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yolanmz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "    public static String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "    public static String url;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static String category;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * Constructor for article class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @param name - The article title given by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @param url - The url given by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @param category - The category set as default initially."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public Article(String name, String url, String category) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "        this.url \u003d url;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yolanmz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return (name + \" [\" + category + \"] : \" + url);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "melylopez99": 7,
      "katelo731": 10,
      "yolanmz": 13
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/Features.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yolanmz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yolanmz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import static seedu.techtoday.common.Messages.HEADER_LINE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import static seedu.techtoday.common.Messages.BOTTOM_LINE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import static seedu.techtoday.common.Messages.printInCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "public class Features {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yolanmz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "    public static ArrayList\u003cArticle\u003e savedArticles;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static ArrayList\u003cArticle\u003e viewArticles;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yolanmz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Features(ArrayList\u003cArticle\u003e saved, ArrayList\u003cArticle\u003e view) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.savedArticles \u003d saved;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.viewArticles \u003d view;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "    * Add an article found outside the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "    */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "    public void addArticle() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Enter the name of the article: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "        String articleName \u003d in.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Enter the url of the article: \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "        String articleUrl \u003d in.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        Article toAdd \u003d new Article(articleName, articleUrl, \"default\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "        savedArticles.add(toAdd);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"You saved a new article: \" + toAdd);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Saves a chose article from view to the saved articles list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param command - The command given by the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void saveView(String command) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        int articleNum \u003d Integer.parseInt(command) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Article toSave \u003d viewArticles.get(articleNum);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        savedArticles.add(toSave);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"This article has been saved: \" + toSave);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * Lists all saved articles by category."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        for (Article savedArticle : savedArticles) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            System.out.println(savedArticle);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Deletes an article from the saved list articles."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param command - command given by the user."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void delete(String command) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        int articleNum \u003d Integer.parseInt(command) - 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Article toDelete \u003d savedArticles.get(articleNum);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        savedArticles.remove(toDelete);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 31,
      "katelo731": 22,
      "yolanmz": 18
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/TechToday.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.apiview.JsonReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import static seedu.techtoday.common.Messages.greet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class TechToday {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static ArrayList\u003cArticle\u003e savedArticles \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static ArrayList\u003cArticle\u003e viewArticles;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that updates defaults for view articles."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void getViewArticles() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        viewArticles.add(new Article(\"Hackers Hit US health agency during coronavirus crisis\",\"https://www.cnet.com/news/hackers-hit-us-health-agency-during-coronavirus-crisis/\", \"default\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        viewArticles.add(new Article(\"Microsoft Releases Xbox Series X specs, controller details\",\"https://www.cnet.com/news/microsoft-releases-xbox-series-x-specs-controller-details/\", \"default\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        viewArticles.add(new Article(\"Apple find @1.2B by France\u0027s competition watchdog\", \"https://www.cnet.com/news/apple-fined-1-2b-by-frances-competition-watchdog/\", \"default\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        viewArticles.add(new Article(\"Windows 10 is now on 1 billion devices\", \"https://www.cnet.com/news/windows-10-is-now-on-1-billion-devices/\", \"default\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        viewArticles.add(new Article(\"Apple announces $149 Powerbeats with 15 hours of battery life\", \"https://www.theverge.com/2020/3/16/21181279/apple-beats-powerbeats-4-wireless-earbuds-announced-features\", \"default\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Main entry-point for the java.techtoday application."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Ui ui \u003d new Ui(savedArticles);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Features features \u003d new Features(savedArticles, viewArticles);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        getViewArticles();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String userResponse \u003d ui.getCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String command \u003d userResponse.split(\" \")[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String restOfUserInput \u003d userResponse.replace(command, \"\").trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if (command.equals(\"view\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                ui.printArticles(viewArticles);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else if (command.equals(\"save\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                features.saveView(restOfUserInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                features.list();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else if (command.equals(\"add\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                features.addArticle();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                features.delete(restOfUserInput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else if (command.equals(\"create\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                // do create command"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } else if (command.equals(\"exit\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                isRunning \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                System.out.println(\"Invalid command! Please try again!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "katelo731": 2,
      "melylopez99": 42,
      "alaukiknpant": 16
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Class for User Interface objects and interacting with user commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static ArrayList\u003cArticle\u003e savedArticles;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Ui(ArrayList\u003cArticle\u003e articles) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.savedArticles \u003d articles;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Returns the trimmed command of the user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of user input trimmed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String userResponse \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return userResponse.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Prints specified list of articles."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param articles - array of articles given."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void printArticles(ArrayList\u003cArticle\u003e articles) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        for (Article article : articles) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            System.out.println(article);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 36
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/apiview/JsonParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.apiview;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.Reader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents a class that parses JSON objects that are required for the project. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class JsonParser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private static String readAll(Reader rd) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int cp;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        while ((cp \u003d rd.read()) !\u003d -1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            sb.append((char) cp);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns an array of the words in a string seperated by a comma."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param array String of words that ill be converted into an array"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return arrOfIndices Array representing the indices of the news articles that are to be saved."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static int[] stringToArray(String array) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] arrayStr \u003d array.split(\",\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int[] arrOfIndices \u003d new int[6];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (int i \u003d 1; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            int a \u003d Integer.parseInt(arrayStr[i].trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            arrOfIndices[i - 1] \u003d a;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return arrOfIndices;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns a string from a news url."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param url url representing a news article."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return String representing news in the form of a json text."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws IOException IO expection."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws JSONException JSON exception."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String readJsonArrayfromUrl(String url) throws IOException, JSONException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        InputStream is \u003d new URL(url).openStream();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            BufferedReader rd \u003d new BufferedReader(new InputStreamReader(is, Charset.forName(\"UTF-8\")));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String jsonText \u003d readAll(rd);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return jsonText;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            is.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Reads a JSON object from a url."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param url url representing news"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return json JSON object representing news."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws IOException IO exception."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws JSONException JSON exception."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static JSONObject readJsonFromUrl(String url) throws IOException, JSONException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        InputStream is \u003d new URL(url).openStream();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            BufferedReader rd \u003d new BufferedReader(new InputStreamReader(is, Charset.forName(\"UTF-8\")));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String jsonText \u003d readAll(rd);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JSONObject json \u003d new JSONObject(jsonText);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return json;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            is.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 76
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/apiview/JsonReader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.apiview;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents a class that reads a URL as a JSON objecs. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class JsonReader {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static JSONObject newsList \u003d new JSONObject();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static  int index \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Takes a url with a list of user stories identified by their story number(check url) and picks 5"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * top stories for the user to view."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void viewNewNews() throws IOException, JSONException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        NewsListCreator.execute(\"https://hacker-news.firebaseio.com/v0/topstories.json?print\u003dpretty\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 25
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/apiview/NewsCreator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.apiview;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Create news creates a JSON object for 1 news article fetched through the API. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class NewsCreator {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Takes a JSON object representing one new news and filters any unnecessary titles from the news article."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param json takes a JSON object representing one rews article"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return newsDetails a JSON object representing only the necessary parts of that particular JSON news object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static JSONObject rawToProcessedNews(JSONObject json) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String title \u003d json.get(\"title\").toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String timeStamp \u003d json.get(\"time\").toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String url \u003d json.get(\"url\").toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JSONObject newsDetails \u003d new JSONObject();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        newsDetails.put(\"title\", title);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        newsDetails.put(\"timeStamp\", timeStamp);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        newsDetails.put(\"url\", url);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return newsDetails;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 23
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/apiview/NewsListCreator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.apiview;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents a creates a list of news that can be viewed by the user. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class NewsListCreator {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Takes a url and pick 5 top stories to print."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param url URL  with a list of user stories identified by their story number(check url)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *            (example: \"https://hacker-news.firebaseio.com/v0/topstories.json?print\u003dpretty\")."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws IOException IO exception."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws JSONException JSON exception."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(String url) throws IOException, JSONException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String indicesStr \u003d JsonParser.readJsonArrayfromUrl(url);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int[] indicesArr \u003d JsonParser.stringToArray(indicesStr);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (int i \u003d 0; i \u003c indicesArr.length; i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String headOfUrl \u003d \"https://hacker-news.firebaseio.com/v0/item/\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String midUrl \u003d Integer.toString(indicesArr[i]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String tailUrl \u003d \".json?print\u003dpretty\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String finalUrl \u003d headOfUrl + midUrl + tailUrl;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            // Creating a news each time"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JSONObject rawNews \u003d JsonParser.readJsonFromUrl(finalUrl);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JSONObject processedNews \u003d NewsCreator.rawToProcessedNews(rawNews);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            //Adding it to bigger newslist"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JsonReader.newsList.put(Integer.toString(JsonReader.index), processedNews);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            //Incrementing Index"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JsonReader.index +\u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(JsonReader.newsList.toString(10));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        //return (JsonReader.newsList.toString(10));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 1,
      "alaukiknpant": 41
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "katelo731"
        },
        "content": "package seedu.techtoday.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import org.jetbrains.annotations.NotNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static String HEADER_LINE \u003d \"     ﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎﹎\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static String BOTTOM_LINE \u003d \"     ﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊﹊\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static String SPLIT_LINE \u003d \"______________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Let the statement be printed in center. **/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void printInCenter(@NotNull String str) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int left \u003d (83 - str.length()) / 2;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int right \u003d 83 - left - str.length();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String repeatedChar \u003d \" \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String buff \u003d \"\\t∣\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                + repeatedChar.repeat(Math.max(0, left))"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                + str"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                + repeatedChar.repeat(Math.max(0, right - 1))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                + \"∣\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(buff);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Show a ASCII code message to user. **/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"_____  ____  __    _    _____  ___   ___    __    _    \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\" | |  | |_  / /`  | |_|  | |  / / \\\\ | | \\\\  / /\\\\  \\\\ \\\\_/ \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\" |_|  |_|__ \\\\_\\\\_, |_| |  |_|  \\\\_\\\\_/ |_|_/ /_/--\\\\  |_|  \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Hello! Here\u0027s TechToday.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Let me show you some technology news to refresh your mind!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(SPLIT_LINE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Your queries can be of the following forms:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"1. view [topic]\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"2. list [category (optional)]\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"3. save [article number] [category (optional)]\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"4. add [category]\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 43
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/TechTodayTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "katelo731"
        },
        "content": "package seedu.techtoday;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "class TechTodayTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    void main() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 6,
      "-": 10
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/apiview/NewsCreatorTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.apiview;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "class NewsCreatorTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    void testNewsCreation() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String inputJsonText \u003d \"{ \\\"by\\\" : \\\"pjmlp\\\",\\\"descendants\\\"\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \" : 6, \\\"id\\\" : 22582276, \\\"kids\\\" : [ 22582600 ], \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"\\\"score\\\" : 76, \\\"time\\\" : 1584262684, \\\"title\\\" : \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"\\\"WebAssembly brings extensibility to network proxies\\\",\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \" \\\"type\\\" : \\\"story\\\", \\\"url\\\" : \\\"https://opensource.googl\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"eblog.com/2020/03/webassembly-brings-extensibility-to.html\\\"}\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JSONObject input \u003d new JSONObject(inputJsonText);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String outputJsonText \u003d \"{ \\\"timeStamp\\\": \\\"1584262684\\\", \\\"title\\\": \\\"WebAssembly \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"brings extensibility to network proxies\\\", \\\"url\\\": \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"\\\"https://opensource.googleblog.com/2020/03/\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"webassembly-brings-extensibility-to.html\\\"}\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JSONObject expectedOutput \u003d new JSONObject(outputJsonText);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JSONObject output \u003d NewsCreator.rawToProcessedNews(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        assertEquals(expectedOutput.toString(), output.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 1
    }
  }
]
