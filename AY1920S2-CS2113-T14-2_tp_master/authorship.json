[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# Set Up for TechToday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## Team 14"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a small CLI Java project. It uses Gradle for build automation and GitHub Actions for CI."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## Setting Up"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. **IMPORTANT: Locate the `build.gradle` file** in the project directory, select it, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. After the set up is complete, you can locate the `src/main/java/seedu/techtoday/TechToday.java` file, right-click it, and choose `Run TechToday.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _ **_____________________________________________________________________________**_"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _                                                                                  _"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _                             Hello! Here\u0027s TechToday.                             _"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _            Let me show you some technology news to refresh your mind!            _"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _ **_____________________________________________________________________________**_"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _                    Your queries can be of the following forms:                   _"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _                                      1. help                                     _"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _                              2. view [article / job]                             _"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _                       3. save [article / job] INDEX_NUMBER                       _"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _                         4. create [article / job / note]                         _"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _                          5. list [article / job / note]                          _"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _                   6. delete [article / job / note] INDEX_NUMBER                  _"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _              7. addinfo [article / job / note] INDEX_NUMBER EXTRACT              _"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _                                      8. exit                                     _"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _                                                                                  _"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         _ **_____________________________________________________________________________**_"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "              What can I do for you?"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         All the required files do not exist. We will create completely new files to save your data."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         __________________________________________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Type exit and press enter to let the execution proceed to the end. Also note how Intellij is now using Gradle to run your code (you can make Intellij run the code without Gradle [this way](tutorials/assets/RunUsingIntellij.png))."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Acknowledgement- The set-up portion is a direct adaptation of the set-up instructions given to us for this project."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "## Build Automation using Gradle"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "This project is already configured to use Gradle. Read the following tutorial to learn how to use gradle to do tasks such as running tests, checking code against teh style rules, and generating the JAR file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "To run JUnit tests (after you have added JUnit tests), you can run the `test` Gradle task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "## CI using GitHub Actions"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "The project is already configured to use [GitHub actions](https://github.com/features/actions). When you push a commit to your fork or PR against an upstream repo, GitHub actions will run automatically to build and verify the product."
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 31,
      "-": 30
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "group \u0027seedu.techtoday\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    compile \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    compile \u0027com.mashape.unirest:unirest-java:1.4.9\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    implementation \u0027org.jetbrains:annotations:15.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    mainClassName \u003d \"seedu.techtoday.TechToday\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    archiveBaseName \u003d \"techtoday\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.0.1\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        attributes("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                \u0027Main-Class\u0027: \u0027seedu.techtoday.TechToday\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        )"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 3,
      "melylopez99": 1,
      "-": 48,
      "alaukiknpant": 9
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "![](https://encrypted-tbn0.gstatic.com/images?q\u003dtbn%3AANd9GcS2EoLW7aqD-NAoG9co0ZPgZGKnvJMVSlNY1h0FJotfyTmotVoD) | Alaukik Pant | [Github](https://github.com/alaukiknpant) | [Portfolio](https://github.com/AY1920S2-CS2113-T14-2/tp/blob/master/docs/team/alaukikpant.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Melissa Lopez | [Github](https://github.com/melylopez99) | [Portfolio](docs/team/melissalopez.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yolanda Ma | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "melylopez99": 1,
      "yolanmz": 1,
      "-": 4,
      "alaukiknpant": 2
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# [Project TechToday](https://github.com/AY1920S2-CS2113-T14-2/tp) - Developer Guide"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "By: `Alaukik Pant, Melissa Lopez`      Since: `Mar 2020`      Licence: `MIT`"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## Table Of Contents"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [Setting Up](#1-setting-up)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [Design](#2-design)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [Implementation](#3-implementation)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * [`create` feature](#-create--feature)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [Product Scope](#3-product-scope)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * [Value Proposition](#value-proposition)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * [Target user profile](#target-user-profile)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * [User Stories](#user-stories)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [Non-Functional Requirements](#5-non-functional-requirements)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "1. [Testing](#6-testing)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [Instructions for Manual Testing](#7-instructions-for-manual-testing)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "1. [Glossary](#8-glossary)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## 1. Setting Up"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "You can find the set-up instructions [here](https://github.com/AY1920S2-CS2113-T14-2/tp/blob/master/README.md)."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## 2. Design "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "The design of the project from the point of view of the user can be described as follows:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "![Image of Design](https://github.com/AY1920S2-CS2113-T14-2/tp/blob/master/docs/images/design.png)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "The above figure demonstrates that once a user inputs a command through the **UI** component, the user response is sent to the **Commands** component for processing. Depending on the user response, the commands component can either i) affect existing lists of jobs, news or articles in the **Lists** component or ii) give user access to new articles through the **API** component or iii) load pre-existing information pieces (articles, jobs) inputted into the program through the **Creator** component. More commands can be called on information pieces loaded through the **API** component or the **Creator** component using the **Commands** component. When the program terminates, the lists of articles, jobs and notes are stored through the **Storage** component."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## 3. Implementation"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "This section will describe the design and implementation of a notable feature in the project."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Note: You will need to create an `article`, `job` or `note` for the feature. It can be done through the following commands."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     1. create article"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     2. create job"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     3. create note"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "For more information about the `create` feature, please refer to the user guide [here](https://github.com/AY1920S2-CS2113-T14-2/tp/blob/master/docs/UserGuide.md#create-command)."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "### `create` feature"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "**Current Implementation:**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "The `InformationCreator` is a standalone class inside the `commands` package. The `create` feature helps the user create information objects that can be instances of `article`, `note` and `job` classes and automatically add them an ArrayList of object types Article, Job, or Note, respectively. "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Given below is an example usage and how the `CreateCommand` mechanism behaves at each step:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Step 1:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "The user launches the application and it loads the `SavedNoteList`, `SavedArticleList` and `SavedJobList` from the storage using the corresponding JSON files(\"articleList.json\", \"jobList.json\" and \"noteList.json\"). If even one of these JSON files do not exist in the memory, the application creates entirely new JSON files with empty initial ArrayLists to store articles, jobs and notes. "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Step 2:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "The user enters the command, `create article`, for instance, into the command line. The`TechToday#executeProgram()` method from the ProgramExecutor class parses the command provided and takes the first word of the command. Since the first word is `create`, it calls a static  `InformationCreator#execute(userResponse)` method, where `userResponse` is the original command provided by the user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Step 3:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "The  `InformationCreator#execute(userResponse)` method again parses the user command to check what kind of information object the user is seeking to create. The three possibilities are `article`, `job` and `note`. The following daigram illustrates what steps are taken for different user responses."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "![Image of SwitchCase](https://github.com/AY1920S2-CS2113-T14-2/tp/blob/master/docs/images/switchCase.png)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Step 4:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "As seen from the above diagram, since the user response was `create article`, the static method, `ManualArticleCreator#execute()`, is called."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Step 5:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "The `ManualArticleCreator#execute()` method asks the user for information including **title**, **url**, **category**, and **extract** of the article by calling `Ui#getArticleTitle()`, `Ui#getArticleUrl()`, `Ui#getArticleCategory()` and `Ui#getArticleExtract()` methods respectively. The `ManualArticleCreator#execute()` fetches the current time and creates a timestamp of that time. The timestamp is assigned to a String variable called **epochSecond**. The five afformentioned variables(in bold) are used to create an `article` object, which is then added to the `SavedArticleList` eventually."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*The following sequence diagram summarizes how `create` command works:*"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "![Image of Sequence Diagram](https://github.com/AY1920S2-CS2113-T14-2/tp/blob/master/docs/images/SD.png)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## 3. Product Scope"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yolanmz"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "### Value Proposition"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "As _lifelong learners of technology brekthroughs, Computer Science and closely related disciplines_, we have access to so many news portals, job portals and we create notes ourselves. Given the sheer volume of information we have, it almost becomes hard for one to manage all that information. TechToday Information Tracker (TTIT) is for who want to organise information about technology. In particular, it helps a user **view** new articles/jobs from HackerNews (or pre-loaded articles in the event of no internet), **save** viewed articles/jobs and **create** information describing not only articles/jobs from other sources but also notes. All in all, TTIT\u0027s value stems from being an application that helps you manage your information about technology so that you do not have to feel drowned by the sheer volume of publicly available information about technology."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Note that TTIT utilizes [Hacker News API](https://github.com/HackerNews/API) to give the user the option to view new news articles and jobs and also has a feature to save them. "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "TechToday Information Tracker (TTIT) is targeted at _lifelong followers of technology brekthroughs_ who wish to organise the information that they consume."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "### User Stories"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v1.0|student of technology|view latest articles|get updated about the latest heppenings in the tech space.|"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v1.0|student of technology|save an article| can generate a summary/list of all the articles I have read.|"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v1.0|student of technology|view latest information related to job|get updated about the latest heppenings in the job market.|"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v1.0|student of technology|see the details of the article before I save it|see the details before I decide to archive it|"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v1.0|student of technology|delete an article from a list of articles|only have the essential articles I need in my manager.|"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v1.0|student of technology|create my own note|save information about technology that is not an article necessarily.|"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v1.0|student of technology|list all my notes|keep track all the notes I have written so far.|"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v1.0|student of technology|list all my articles|keep track all the articles I have saved so far.|"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v1.0|student of technology|list all my jobs|keep track all the jobs I have saved so far.|"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v1.0|student of technology|add an extract to a note|add more ideas to an exiting note.|"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v2.0|student of technology|add an extract to an article|also add a short opinion I have about it.|"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v2.0|student of technology|add an extract to a job|also skills I require to get the job.|"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v2.0|student of technology|add an extract to an article|also add a short opinion I have about it.|"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v2.0|student of technology|create my own custom article|save interesting articles I find from various sources.|"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v2.0|student of technology|create my own custom job|save interesting job I find from various sources.|"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v2.0|student of technology|save the time of the article I create|know when I saved this particular article.|"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v2.0|student of technology|save the time of the note I create|know when I saved this particular note.|"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "|v2.0|student of technology|save the time of the job I create|know when I saved this particular job.|"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## 5. Non-Functional Requirements"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "1. This application should be able to work on Linux, Windows, and OS machines as long the user has installed Java 11. "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "2. Any user with knowledge of English language and basic typing skills should be able to use this application without any issues. If user is unable to understand commands, please see User Guide for more clarification. "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "3. User interface should be seen through the terminal and, depending on command user is using, depict changes the user is making within the application. "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "4. The data the user manipulated using the application should be saved once they type `exit` which saves and exits the application. This data is restored when the user uses the application again. "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "5. If one wishes to use application from different computer with saved data, they just must transfer their saves JSON files to the new folder where the application will be run. "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "6. The application should not crash at any moment. If there is an error within application, error message will appear. "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "7. If the application is unable to connect to the internet to retrieve data for `view` feature, the application will still produce data that has been previously saved. "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "## 6. Testing"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "JUnit tests were created for this application to ensure that our code is free of bugs, runs correclty, and outputs the intended data. "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "### 6.1 IntelliJ JUnit Tests"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "1. To run all tests, right click on `src/test/java` and click Run \"Tests in tp\". "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "2. To run using Gradle, open terminal and type `gradlew clean test`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## 7. Instructions for Manual Testing"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Follow the following steps to manually test the product:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "###  7.1 Setup and Initial Storage Testing"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "1. Download the latest release [here](ljsnc) and store it in an empty folder. "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "2. Open the terminal and go to the folder where the file is stored and type `java -jar tp.jar` to initialize the program. "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "3. Once the program starts, you should get the following output: "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        _ **_____________________________________________________________________________**_"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _                                                                                  _"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _                             Hello! Here\u0027s TechToday.                             _"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _            Let me show you some technology news to refresh your mind!            _"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _ **_____________________________________________________________________________**_"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _                    Your queries can be of the following forms:                   _"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _                                      1. help                                     _"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _                              2. view [article / job]                             _"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _                       3. save [article / job] INDEX_NUMBER                       _"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _                         4. create [article / job / note]                         _"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _                          5. list [article / job / note]                          _"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _                   6. delete [article / job / note] INDEX_NUMBER                  _"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _              7. addinfo [article / job / note] INDEX_NUMBER EXTRACT              _"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _                                      8. exit                                     _"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _                                                                                  _"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _ **_____________________________________________________________________________**_"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "             What can I do for you?"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        All the required files do not exist. We will create completely new files to save your data."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        __________________________________________________________________________________________"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "4. **Note** Ensure that it outputs `All the required files do not exist. We will create completely new files to save your data.`"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "5. Type `list article` and ensure the initial list is empty. You should get the following output: "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                                   Article List                                   _"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                      There is nothing in the list currently.                     _"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "           "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "6. Type `list note` and ensure the initial list is empty. You should get the following output: "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                                     Note List                                    _"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                      There is nothing in the list currently.                     _"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "7. Type `list job` and ensure the initial list is empty. You should get the following output: "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                                     Job List                                     _"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                      There is nothing in the list currently.                     _"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "8. Type `exit` to exit the program. You should get the following output: "
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                                Saving your data...                               _"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                           We are exiting the program...                          _"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                            Bye. Come back again later.                           _"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "9. Rerun by typing `java -jar tp.jar` to start the program again. You should get the following output: "
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _ **_____________________________________________________________________________**_"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                                                                                  _"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                             Hello! Here\u0027s TechToday.                             _"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _            Let me show you some technology news to refresh your mind!            _"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _ **_____________________________________________________________________________**_"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                    Your queries can be of the following forms:                   _"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                                      1. help                                     _"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                              2. view [article / job]                             _"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                       3. save [article / job] INDEX_NUMBER                       _"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                         4. create [article / job / note]                         _"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                          5. list [article / job / note]                          _"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                   6. delete [article / job / note] INDEX_NUMBER                  _"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _              7. addinfo [article / job / note] INDEX_NUMBER EXTRACT              _"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                                      8. exit                                     _"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                                                                                  _"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _ **_____________________________________________________________________________**_"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                 What can I do for you?"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            Loading \"articleList.json\", \"jobList.json\" and \"notelist.json\"..."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            Done loading files, enter your command now:"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "           "
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "10. **Note** The message `Loading \"articleList.json\", \"jobList.json\" and \"notelist.json\"...` and `Done loading files, enter your command now:` should appear instead of previous message of missing data. This is to ensure these JSON files were created the first time you run the program. "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "### 7.2 Load Storage Testing "
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "1. Go to the sampleData folder [here](https://github.com/AY1920S2-CS2113-T14-2/tp/tree/master/docs/sampleData) and download \u0027articleList.json\u0027, \u0027noteList.json\u0027, \u0027jobList.json\u0027 and store it in the same folder where you stored the original jar file. If you have already run the program and existing JSON data files exist, replace them with the onces from the sampleData folder. "
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "2. Open the terminal and go afformentioned folder and type `java -jar tp.jar`."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "3. This should load all the data in the folders. Type the following commands:"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "  * `list article`"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        "
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    You will get the following output:"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            _                                   Article List                                   _"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               1. Title: A music discovery site used in over 1M videos and games"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Date: 2020-Apr-08 Wed 02:22 PM"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Category: default"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Url: http://dig.ccmixter.org/"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Extract: "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               2. Title: HPE sets end date for hobbyist licenses for OpenVMS"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Date: 2020-Apr-08 Wed 06:21 PM"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Category: default"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Url: https://legacyos.org/hpe-sets-end-date-for-hobbyist-licenses-for-openvms/"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Extract: "
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       "
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "  * `list job`"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        "
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     You will get the following output:"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            _                                     Job List                                     _"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               1. Title: Ask HN: What most annoying software problem you\u0027ve recently faced?"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Date: 2020-Apr-08 Wed 09:50 PM"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Category: default"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Text: I\u0026#x27;ll start with myself. Recently, I have tried to use Forestry.io to set up a personal blog, bu..."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Extract: "
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               2. Title: Ask HN: What is your blog and why should I read it?"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Date: 2020-Apr-07 Tue 11:33 AM"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Category: default"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Text: Looking for awesome new places to read things written by actual human beings.\u003cp\u003eSo where can I find ..."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "               Extract: "
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "           "
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "  * `list note`"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "           "
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "      You will get the following output:"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "          "
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "              __________________________________________________________________________________________"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                _                                     Note List                                    _"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                   1. Title: How to work with Github?"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                   Date: 2020-Apr-08 Wed 10:06 PM"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                   Category: default"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                   URL: https://guides.github.com"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                   Extract: This is a guide to githubs official tutorial."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                __________________________________________________________________________________________"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "### 7.3 Feature Testing"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "**Important Note** "
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "***Please ensure JSON data files are empty for feature testing.*** "
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "#### `create` "
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "1. Type `create article` "
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "2. When asked `Enter the title of article?` enter the following: `ManualTestArticle`"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "3. When asked `What is the URL of the article (type \"No URL\")?` enter the following: `www.manualtestarticle.com`"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "4. When asked `What is the the category (type \"default\" if you don\u0027t know it)` enter the following: `test`"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "5. When asked `Would you like to add any extract?` type `This is for testing.`"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "5. You should see the following output: "
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            Done, we have added the following article to your list of saved articles"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Title: ManualTestArticle"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Date: 2020-Apr-09 Thu 08:30 PM"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Category: test"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Url: www.manualtestarticle.com"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Extract: This is for testing."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "#### `list` "
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "1. Type `list article` "
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "2. The only article in your list should be the article previously created. You should see the following output: "
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                                   Article List                                   _"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               1. Title: ManualTestArticle"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Date: 2020-Apr-09 Thu 08:30 PM"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Category: test"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Url: www.manualtestarticle.com"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Extract: This is for testing."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            "
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            "
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            "
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "#### `addinfo` "
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "1. Type `addinfo article 1 Testing the addinfo feature` "
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "2. You should see the following output: "
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            Done, the article description now looks like the following "
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Title: ManualTestArticle"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Date: 2020-Apr-09 Thu 08:30 PM"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Category: test"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Url: www.manualtestarticle.com"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Extract: Testing the addinfo feature"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "#### `delete`"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "1. Type `delete article 1` "
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "2. You should see the following output: "
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            Deleting the following article:"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Title: ManualTestArticle"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Date: 2020-Apr-09 Thu 08:30 PM"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Category: test"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Url: www.manualtestarticle.com"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Extract: Testing the addinfo feature"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            "
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "3. To ensure it was deleted from the article list type `list article` "
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "4. You should see the following output: "
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                                   Article List                                   _"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            _                      There is nothing in the list currently.                     _"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "#### `view` "
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "1. Type `view article` "
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "2. You should see the following output: "
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            Connecting to the internet and loading information... "
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               1. Title: The Global Dollar Short Squeeze"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Date: 2020-Apr-09 Thu 06:24 PM"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Category: default"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Url: https://www.lynalden.com/global-dollar-short-squeeze/"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Extract: "
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               2. Title: The software industry\u0027s greatest sin: hiring"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Date: 2020-Apr-09 Thu 06:13 PM"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Category: default"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Url: https://www.neilwithdata.com/developer-hiring"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Extract: "
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               3. Title: Take-home vs. whiteboard coding: The problem is bad interviews"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Date: 2020-Apr-09 Thu 05:48 PM"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Category: default"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Url: https://andrewrondeau.com/blog/2020/04/take-home-vs-whiteboard-coding-the-problem-is-bad-interviews"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Extract: "
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               4. Title: Ask HN: Has any progress been made on large format E-ink displays?"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Date: 2020-Apr-09 Thu 03:24 PM"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Category: default"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Url: URL Not provided"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Extract: "
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               5. Title: Founder\u0027s Field Guide for Navigating This Crisis"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Date: 2020-Apr-09 Thu 12:38 PM"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Category: default"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Url: https://firstround.com/review/the-founders-field-guide-for-navigating-this-crisis-advice-from-recession-                  era-leaders-investors-and-ceos-currently-at-the-helm/"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Extract: "
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               6. Title: Ask HN: Recommend me a course on Coursera"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Date: 2020-Apr-09 Thu 01:15 PM"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Category: default"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Url: URL Not provided"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "               Extract: "
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            __________________________________________________________________________________________"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "#### `save` "
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "1. Type `save article 1` "
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "2. You should see the following output: "
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        __________________________________________________________________________________________"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Done, saved the article with the following details:"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "           Title: The Global Dollar Short Squeeze"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "           Date: 2020-Apr-09 Thu 06:24 PM"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "           Category: default"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "           Url: https://www.lynalden.com/global-dollar-short-squeeze/"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "           Extract: "
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        __________________________________________________________________________________________"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "   "
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "   "
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "3. To ensure it was added to article list type `list article` "
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "4. You should see the following output: "
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        __________________________________________________________________________________________"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        _                                   Article List                                   _"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "           1. Title: The Global Dollar Short Squeeze"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "           Date: 2020-Apr-09 Thu 06:24 PM"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "           Category: default"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "           Url: https://www.lynalden.com/global-dollar-short-squeeze/"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "           Extract: "
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        __________________________________________________________________________________________"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "**Additional Note: These manual tests were created just for article objects. Similar commands can be replicated for note and job objects as well.** "
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "## 8. Glossary "
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Article - an object that contains the metadata of a news/website article "
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Job - an object that contains the metadata about opportunities/questions about technology related jobs."
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "* Note - an object that holds additional information about a certain topic that does not fit under article or job description. "
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "* Extract - refers to additional information you would like to add to certain article, job, or note object. "
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "melylopez99": 329,
      "yolanmz": 1,
      "-": 17,
      "alaukiknpant": 192
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# TechToday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Information Manager for technology news for the lifelong tech-learner."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 3,
      "-": 5
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## [Project TechToday](https://github.com/AY1920S2-CS2113-T14-2/tp) - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "By: `Alaukik Nath Pant, Melissa Lopez`      Since: `Feb 2020`      Licence: `MIT`      Course: `CS2113`"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [Introduction](#1-Introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "2. [Quick Start](#2-quick-start)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "3. [Features](#3-features)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    1. [Command Format](#command-format)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        1. [Asking for help with valid commands : `help`](#help-command)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        2. [Viewing articles or jobs : `view`](#view-command)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        3. [Saving an article or job: `save `](#save-command)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        4. [Creating an `article`, `job`, or `note`: `create`](#create-command)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        5. [Listing saved/created `article`, `job`, `note`: `list `](#list-command)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        5. [Deleting saved/created `article`, `job`, or `note`: `delete `](#delete-command)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        7. [Adding an extract to `article`, `job`, or `note`: `list`](#add-command)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        8. [Exiting the program : `exit`](#exit-command)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "4. [FAQ](#4-faq)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "5. [Command Summary](#5-command-summary)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "6. [Acknowledgement](#6-acknowledgement)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "TechToday Information Tracker(TTIT) is for those who *prefer to use a desktop app for **managing** information about technology including news, jobs or even notes*. TTIT is *optimized for those who prefer to work with a Command Line Interface* (CLI). TTIT utilizes [Hacker News](https://github.com/HackerNews/API) API to give the user the option to **view** new news articles and questions/jobs. However, note that the purpose of TTIT isn\u0027t to act as a news/job/note portal, but rather a **manager** of technology related information for a lifelong learner of Computer Science and closely related disciplines. Hence, we help the user to manage metadata such as title, URL and date of an article/job/note. The user can go to the relavent article, for instance, using the URL if they are interested in the article and even add a short extract to articles that they have saved using the `addinfo` functionality. If the device is not connected to the internet, the user can **view** pre-loaded articles and jobs. The user also has the option to add interesting articles, jobs and notes about technology themselves using the **create** functionality. "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*  Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*  Download the jar file -`CS2113-T14-2.TechToday.jar` [latest release here!](https://github.com/AY1920S2-CS2113-T14-2/tp/releases/tag/v2.1)."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*  Copy the file to the folder you want to use as the home folder for your Technology Information tracker."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*  Open command prompt in the directory where the Jar file is stored and type `java -jar CS2113-T14-2.TechToday.jar`."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* When the application executes, all possible commands that can help you manage your information are shown."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*Some example commands you can try:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    * **`view `**`article` : helps you view articles about technolgy from the internet. If the device is not connected to the internet, it loads an existing set of articles pre-loaded into the program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    * **`list `**`article`: Lists all the articles you have saved in your database into the Command Line."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    * **`delete `**` article 1` : deletes the 1st article that appears in the article list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    * **`exit`** : exits the app."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## 3. Features"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "### Command Format"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* When the user types the help command and sees`[article / job / note]` or `[article / job]` under the command format option, it means that the user is requred to choose one of `article`, `job` or `note`. For example, `view [article / job]` can be intrepreted as `view article` or `view job`."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* The `INDEX_NUMBER` is the interger index of a article/job/note to be saved, deleted, or edited from a saved article list, or a saved note list or a saved job list. It is of format `delete article INDEX_NUMBER`, `save job TASK_NUMBER`."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* `EXTRACT` represents a string that can be composed of multiple words that you wish to add to an existing note, job or article. For example, `addinfo article INDEX_NUMBER EXTRACT`."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Note that if the input from the user is a valid command followed by arbitrary input, the programme will just ignore the arbitrary input and execute the valid command. For example, a command like `view article ls;dgljfg` will only read `view article` and ignore the gibberish command that follows the valid part."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Help Command"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "##### Asking for help with valid commands : `help`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Loads all possible commands that the user can type."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `help`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### View Command"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "##### Viewing articles or jobs : `view`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Displays a latest list articles or jobs from the internet. If device is not connected to the internet, pre-loaded articles or jobs is shown. Note that you cannot `view note` as notes are to to created by the user and not loaded from the internet."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `view [article / job]`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Connect to the internet if you wish to see latest articles. If you use the `view` command more than once in a short period of time, it is highly likely that it will load the same articles/jobs as HackerNews updates information related to articles/jobs once or twice a day only."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    view article "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Shows six articles from the internet/memory."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Save Command"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "##### Saving an article or job: `save `"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Saves an article/job you see from the internet/database through the view option into a seperate list of saved articles or jobs. The saved articles/jobs get saved into the memory and you can see them again using the `list` functionality when you load the application some other time."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `save [article / job] INDEX_NUMBER`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "You have to view an article/job before being able to save it. Even if you exit the program and immediately reload it, the application is designed such that you will have you view a list of articles/jobs first before saving a particlar one."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    save article 1"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Saves viewed article with index number 1."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Done, saved the article with the following details:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Title: The Global Dollar Short Squeeze"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Date: 2020-Apr-10 Fri 09:24 AM"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Category: default"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Url: https://www.lynalden.com/global-dollar-short-squeeze/"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Extract: "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Create Command"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "##### Creating an `article`, `job`, or `note`: `create`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Helps user manually create  an `article`, `job`, or `note` and add it to the list of saved articles, jobs or notes respectively."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Note that a created `article`, `job`, or `note` is saved to the list of saved articles/job/notes and not the one the user sees when she invokes the \"view articles\" command for example. The saved article/job list is composed of a list of individually *saved* articles from the view list and *created* articles."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `create [article / job / note]`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    create article"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Asks user input to create an information piece describing an article."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### List Command"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "##### Listing saved/created `article`, `job`, `note`: `list `"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Lists articles, jobs or notes that you have creaed or saved from the internet/database."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `list [article / job / note]`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "You must have saved or created some articles/jobs/notes in order to list them."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    list article"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Lists all saved articles."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Delete Command"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "##### Deleting saved/created `article`, `job`, or `note`: `delete `"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Deletes `article`, `job`, or `note` at the specified `INDEX_NUMBER`. "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* When an `article`, `job`, or `note` is deleted, all subsequent ones in the resepective list will have their index reduced by 1."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `delete [article / job / note] INDEX_NUMBER`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    delete article 1"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Deleting the following article:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Title: The Global Dollar Short Squeeze"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Date: 2020-Apr-10 Fri 09:24 AM"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Category: default"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Url: https://www.lynalden.com/global-dollar-short-squeeze/"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Extract: "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Add Command"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "##### Adding an extract to `article`, `job`, or `note`: `addinfo`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Adds an extract to an `article`, `job`, or `note`."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `addinfo [article / job / note] INDEX_NUMBER EXTRACT`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    addinfo article 1 It turns out that yes, fresh grads and keener interns do complain to senior developers about asymptotic efficiency."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Done, the article description now looks like the following "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Title: New grad vs senior dev"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Date: 2020-Apr-10 Fri 01:44 PM"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Category: Funny"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Url: https://ericlippert.com/2020/03/27/new-grad-vs-senior-dev/"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       Extract: It turns out that yes, fresh grads and keener interns do complain to senior developers about asympto..."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Exit Command"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "##### Exiting the program : `exit`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Exits the program. "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `exit`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## 4. FAQ"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*Q*: How do I transfer my data to another Computer? "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*A*: Copy three text files called \"articlelist.json\", \"notelist.json\", \u0027joblist.json\u0027 that has saved your information into the directory from which you will run the application using the jar file in your new computer. You are then set to go!"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## 5. Command Summary"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Help*  : `help`; "
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "e.g. `help`"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *View* : `view [article / job]`;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eg. `view article`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Save* : `save [article / job] INDEX_NUMBER\"`;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eg. `save article 1`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Create* : `create [article / job / note]`"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eg. `create article`"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *List* : `list [article / job / note]`;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eg. `list article`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Delete* : `delete [article / job / note] INDEX_NUMBER`;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "e.g. `delete article 1`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Addinfo* : `addinfo [article / job / note] INDEX_NUMBER EXTRACT`;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "e.g. `addinfo article 1 It turns out that yes, fresh grads and keener interns do complain to senior developers about asymptotic efficiency.`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Exit* : `exit`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "e.g. `exit`"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## 6. Acknowledgement"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Our UserGuide has been heavily inspired by the superb format of the AddressBook user guide that we were given access to for this course."
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 214,
      "-": 20
    }
  },
  {
    "path": "docs/team/alaukikpant.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# Project Portfolio Page (PPP)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "TechToday Information Tracker(TTIT) is a Command Line Application(CLI) designed for lifelong learners of Computer Science or closely related disciplines to manage information about technology. TTIT not only helps a user access and save latest information about articles and jobs from HackerNews, but can also be used to save articles/jobs/notes that the user wants to input themselves."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## Summary of Contributions "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "### Code contributed: "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* designed and implemented most of the project [(find code for my contributions here)](https://nus-cs2113-ay1920s2.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-03-01\u0026timeframe\u003dcommit\u0026mergegroup\u003dfalse\u0026groupSelect\u003dgroupByRepos\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dalaukiknpant\u0026tabRepo\u003dAY1920S2-CS2113-T14-2%2Ftp%5Bmaster%5D)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "### Enhancements: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* implemented all of the major features of the application including `help`, `view`, `save`, `create`, `list` and `addinfo` features.\t \t\t"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Notable enhancement:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* added the ability to view new articles/jobs using [Hacker News API](https://github.com/HackerNews/API)\t      "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### What it does: "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* allows the user to view 6 latest articles and job updates from HackerNews when prompted with the relevant `view` command\t\t"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Justification:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* This feature improves the product significantly because a user can not only save job questions/articles that they find interesting manually, but also make a quick browse and save the latest articles from a quality news source like HackerNews. \t"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* **Highlights:** This enhancement complements existing functionalities and commands because you can view new articles/jobs from the internet and save them instead of just having the feature of manually adding articles. This enhancement also lets the user quickly save latest news without having to spend time manually entering the detail. This enhancement required understanding the relevant API documentation. Apart from the HackerNews API documentation, I used the following sources to use the API in TechToday. \t\t\t"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Sources Reference for this enhancement: \t\t\t\t\t\t\t\t"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. https://stackoverflow.com/questions/4308554/simplest-way-to-read-json-from-a-url-in-java "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. https://searchcode.com/codesearch/view/72088059/\t\t\t\t\t"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "### Contributions to documentation: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* wrote the entire [User Guide](https://ay1920s2-cs2113-t14-2.github.io/tp/UserGuide.html) "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* contributed to most of the sections, including \"Setting Up\", \"Design\", \"Implementation\", \"Product Scope\" and \"Instructions for Manual Testing\", of the [Developer Guide](https://ay1920s2-cs2113-t14-2.github.io/tp/DeveloperGuide.html)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* designed the Sequence Diagram explaining the `create` feature of the final product "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* designed the figure describing the design of the project from the point of view of the user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "### Contributions to team-based tasks:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. Led the team in designing and implementing TechToday"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. Checked the code quality and usability of nearly all pull requests"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. Set up Gradle for the project for build automation "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. Managed all the releases for the project including v1.0, v2.0 and v2.1"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. Wrote the majority of the user/developer documents on behalf of the team"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. Incorporated HackerNews API into the project to help other members build features around this API"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. Incorporated google’s GSON library to help in storage related tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. Dealt with all the issues pointed out by testers "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. Reviewed 12 pull requests made by teammates before merging with the main source code"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 48
    }
  },
  {
    "path": "docs/team/melissalopez.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "# Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Portfolio: Melissa Lopez"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 3
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/TechToday.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.SavedArticleList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.ViewedArticleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.commands.ProgramExecutor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.SavedJobList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.ViewedJobList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.notelist.SavedNoteList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.exception.TechTodayException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import static seedu.techtoday.common.Messages.greet;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * \u003ch1\u003eTechToday News/Jobs/Notes for technology related information for the technologist.\u003c/h1\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Entry point of the \"TechToday\" application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * \u003cb\u003eNote:\u003c/b\u003e This application is written for CS2113 for tp at the NUS School of computing."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * @author  Alaukik, Kate, Melissa, Yolanda"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * @since   2020-03-27"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class TechToday {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Version info of the program. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static final String VERSION \u003d \"TechToday - Version 2.1\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public ViewedArticleList viewedArticleList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public SavedArticleList savedArticleList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public ViewedJobList viewedJobList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public SavedJobList savedJobList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public SavedNoteList savedNoteList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Constructor that initializes the data structures that saves technology information. */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    TechToday() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        viewedArticleList \u003d new ViewedArticleList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        savedArticleList \u003d new SavedArticleList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        viewedJobList \u003d new ViewedJobList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        savedJobList \u003d new SavedJobList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        savedNoteList \u003d new SavedNoteList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "  "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Main entry-point for the java.techtoday application."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void main(String[] args) throws TechTodayException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        new TechToday();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ProgramExecutor.loadData();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ProgramExecutor.startLogger();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ProgramExecutor.executeProgram(isRunning);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "melylopez99": 21,
      "katelo731": 4,
      "alaukiknpant": 29
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/api/UrlJsonParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.api;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.Reader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "// Source: https://stackoverflow.com/questions/4308554/simplest-way-to-read-json-from-a-url-in-java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents a class that parses JSON objects that are required for the project. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class UrlJsonParser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private static String readAll(Reader rd) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int cp;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        while ((cp \u003d rd.read()) !\u003d -1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            sb.append((char) cp);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns an array of the words in a string seperated by a comma."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param array String of words that ill be converted into an array"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return arrOfIndices Array representing the indices of the news articles that are to be saved."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static int[] stringToArray(String array) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] arrayStr \u003d array.split(\",\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int[] arrOfIndices \u003d new int[6];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (int i \u003d 1; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            int a \u003d Integer.parseInt(arrayStr[i].trim());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            arrOfIndices[i - 1] \u003d a;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return arrOfIndices;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns a string from a news url."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param url url representing a news article."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return String representing news in the form of a json text."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws IOException IO expection."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws JSONException JSON exception."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String readJsonArrayfromUrl(String url) throws IOException, JSONException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        InputStream is \u003d new URL(url).openStream();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            BufferedReader rd \u003d new BufferedReader(new InputStreamReader(is, Charset.forName(\"UTF-8\")));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String jsonText \u003d readAll(rd);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return jsonText;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            is.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Reads a JSON object from a url."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param url url representing news"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return json JSON object representing news."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws IOException IO exception."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws JSONException JSON exception."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static JSONObject readJsonFromUrl(String url) throws IOException, JSONException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        InputStream is \u003d new URL(url).openStream();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            BufferedReader rd \u003d new BufferedReader(new InputStreamReader(is, Charset.forName(\"UTF-8\")));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String jsonText \u003d readAll(rd);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JSONObject json \u003d new JSONObject(jsonText);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return json;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            is.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 79
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/api/apiviewjobs/JobsCreator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.api.apiviewjobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.CommonMethods;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Create news creates a JSON object for 1 news article fetched through the API. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class JobsCreator {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Returns an article object from a JSONObject representing a news article from the internet."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param json JSON object representing a news article."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return Article - article representing jsonObject from internet."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Job convertToProcessedJob(JSONObject json) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String title \u003d json.get(\"title\").toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String timeStamp \u003d json.get(\"time\").toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        assert (CommonMethods.checkIsLong(timeStamp)) : \"Timestamp should be of long type\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String text;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            text \u003d json.get(\"text\").toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            text \u003d \"text Not provided\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Job job \u003d new Job(title, text, \"default\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        job.setTime(timeStamp);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return job;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 1,
      "alaukiknpant": 28
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/api/apiviewjobs/JsonJobsReader.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.api.apiviewjobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.JobListPrinter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.ViewedJobList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents a class that reads a URL as a JSON objecs. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class JsonJobsReader {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Takes a url with a list of user stories identified by their story number(check url) and picks 5"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * top stories for the user to view."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void viewNewJobs() throws IOException, JSONException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        ViewedJobListCreator.execute(\"https://hacker-news.firebaseio.com/v0/askstories.json?print\u003dpretty\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        JobListPrinter.execute(ViewedJobList.viewedJobList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "melylopez99": 2,
      "katelo731": 2,
      "alaukiknpant": 18
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/api/apiviewjobs/ViewedJobListCreator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.api.apiviewjobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.api.UrlJsonParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.ViewedJobList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents a creates a list of news that can be viewed by the user. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ViewedJobListCreator {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Takes a url and pick 5 top stories to print."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param url URL  with a list of user stories identified by their story number(check url)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *            (example: \"https://hacker-news.firebaseio.com/v0/topstories.json?print\u003dpretty\")."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws IOException IO exception."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws JSONException JSON exception."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(String url) throws IOException, JSONException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String indicesStr \u003d UrlJsonParser.readJsonArrayfromUrl(url);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int[] indicesArr \u003d UrlJsonParser.stringToArray(indicesStr);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (int i \u003d 0; i \u003c indicesArr.length; i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String headOfUrl \u003d \"https://hacker-news.firebaseio.com/v0/item/\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String midUrl \u003d Integer.toString(indicesArr[i]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String tailUrl \u003d \".json?print\u003dpretty\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String finalUrl \u003d headOfUrl + midUrl + tailUrl;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JSONObject rawJob \u003d UrlJsonParser.readJsonFromUrl(finalUrl);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Job processedJob \u003d JobsCreator.convertToProcessedJob(rawJob);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            ViewedJobList.viewedJobList.add(processedJob);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 1,
      "alaukiknpant": 36
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/api/apiviewnews/JsonNewsReader.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.api.apiviewnews;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.ArticleListPrinter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.ViewedArticleList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents a class that reads a URL as a JSON objecs. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class JsonNewsReader {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Takes a url with a list of user stories identified by their story number(check url) and picks 5"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * top stories for the user to view."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void viewNewNews() throws IOException, JSONException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ViewedArticleListCreator.execute(\"https://hacker-news.firebaseio.com/v0/topstories.json?print\u003dpretty\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleListPrinter.execute(ViewedArticleList.viewedArticleList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "melylopez99": 3,
      "alaukiknpant": 18
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/api/apiviewnews/NewsCreator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.api.apiviewnews;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.CommonMethods;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Create news creates a JSON object for 1 news article fetched through the API. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class NewsCreator {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns an article object from a JSONObject representing a news article from the internet."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param json JSON object representing a news article."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return Article - article representing jsonObject from internet."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Article convertToProcessedNews(JSONObject json) throws JSONException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String title \u003d json.get(\"title\").toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String timeStamp \u003d json.get(\"time\").toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        assert (CommonMethods.checkIsLong(timeStamp)) : \"Timestamp should be of long type\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String url;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            url \u003d json.get(\"url\").toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            url \u003d \"URL Not provided\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Article article \u003d new Article(title, url, \"default\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        article.setTime(timeStamp);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return article;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 31
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/api/apiviewnews/ViewedArticleListCreator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.api.apiviewnews;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.api.UrlJsonParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.ViewedArticleList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents a creates a list of news that can be viewed by the user. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ViewedArticleListCreator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Takes a url and pick 5 top stories to print."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param url URL  with a list of user stories identified by their story number(check url)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *            (example: \"https://hacker-news.firebaseio.com/v0/topstories.json?print\u003dpretty\")."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws IOException IO exception."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws JSONException JSON exception."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(String url) throws IOException, JSONException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String indicesStr \u003d UrlJsonParser.readJsonArrayfromUrl(url);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int[] indicesArr \u003d UrlJsonParser.stringToArray(indicesStr);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (int i \u003d 0; i \u003c indicesArr.length; i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String headOfUrl \u003d \"https://hacker-news.firebaseio.com/v0/item/\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String midUrl \u003d Integer.toString(indicesArr[i]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String tailUrl \u003d \".json?print\u003dpretty\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String finalUrl \u003d headOfUrl + midUrl + tailUrl;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JSONObject rawNews \u003d UrlJsonParser.readJsonFromUrl(finalUrl);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Article processedArticle \u003d NewsCreator.convertToProcessedNews(rawNews);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            ViewedArticleList.viewedArticleList.add(processedArticle);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 2,
      "alaukiknpant": 33
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/articlelist/ArticleAdder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.articlelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents a class that adds an article object to an article list. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class ArticleAdder extends ViewedArticleList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public ArticleAdder() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Adds an article to an article list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param articleList Array list of articles."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param article An article object representing the description of an article."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cArticle\u003e articleList, Article article) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        articleList.add(article);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 3,
      "alaukiknpant": 19
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/articlelist/ArticleDeleter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.articlelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents command that is used to call a method to delete article from taskList. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class ArticleDeleter {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Deletes the task at index taskNumber from the tasklist."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param command Command inputted by the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] commandArray \u003d command.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int articleNumber \u003d Integer.parseInt(commandArray[2]) - 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Article articleToDelete \u003d SavedArticleList.savedArticleList.get(articleNumber);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Deleting the following article:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticlePrinter.printIsolatedArticle(articleToDelete);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedArticleList.savedArticleList.remove(articleNumber);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 7,
      "katelo731": 1,
      "alaukiknpant": 13
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/articlelist/ArticleListPrinter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.articlelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents class that is used to call a method to delete article from taskList. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class ArticleListPrinter {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Prints all available tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param articleList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cArticle\u003e articleList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (articleList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printInCenter(\"There is nothing in the list currently.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int taskCounter \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (Article article : articleList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            ArticlePrinter.execute(taskCounter, article);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            taskCounter +\u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 3,
      "alaukiknpant": 22
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/articlelist/ArticlePrinter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.articlelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.CommonMethods;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.TimeStampToDateConverter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class that represents a command used to print an article. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class ArticlePrinter {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Executes the printing of an article."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskCounter - Index of the information in the information list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param article - Article representing an article object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(int taskCounter, Article article) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String articleToPrint \u003d taskCounter + \". \" + returnArticleString(article);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"   \" + articleToPrint);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Prints an article outside the setting of a article list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param article - Article representing an article object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void printIsolatedArticle(Article article) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String articleToPrint \u003d returnArticleString(article);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"   \" + articleToPrint);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Retuns a string with the details of the article to be printed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param article - Article under consideration."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return String representing article."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private static String returnArticleString(Article article) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String timeStamp \u003d article.getTimeStamp();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String date \u003d TimeStampToDateConverter.execute(timeStamp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String title \u003d article.getTitle();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String url \u003d article.getUrl();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String category \u003d article.getCategory();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String extract \u003d article.getExtract();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String upToNCharacters \u003d CommonMethods.returnUptoNcharacters(extract);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String articleToPrint \u003d \"Title: \" + title + System.lineSeparator()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Date: \" + date + System.lineSeparator()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Category: \" + category + System.lineSeparator()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Url: \" + url + System.lineSeparator()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Extract: \" + upToNCharacters;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return articleToPrint;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 6,
      "katelo731": 2,
      "alaukiknpant": 45
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/articlelist/ArticleSaver.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.articlelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class to save articles to SavedArticleList. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class ArticleSaver extends SavedArticleList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public ArticleSaver() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that executes the save features for articles."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param viewedArticleList - list of articles to be saved to."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param command - number of article to be saved."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cArticle\u003e viewedArticleList, String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] commandArray \u003d command.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int commandNumber \u003d Integer.parseInt(commandArray[2]) - 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Article articleToSave \u003d ViewedArticleList.viewedArticleList.get(commandNumber);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Done, saved the article with the following details:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticlePrinter.printIsolatedArticle(articleToSave);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleAdder.execute(SavedArticleList.savedArticleList, articleToSave);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 11,
      "katelo731": 1,
      "alaukiknpant": 15
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/articlelist/SavedArticleList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.articlelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents the data structure, i.e a list of Tasks, that stores the tasks.*/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class SavedArticleList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Class variable that represents a the savedArticle list. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static ArrayList\u003cArticle\u003e savedArticleList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Initializes a new taskList.  */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public SavedArticleList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        savedArticleList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 7,
      "alaukiknpant": 11
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/articlelist/ViewedArticleList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.articlelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents the data structure, i.e a list of Tasks, that stores the tasks.*/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class ViewedArticleList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Class variable that represents a the viewedArticle list. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static ArrayList\u003cArticle\u003e viewedArticleList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Initializes a new taskList.  */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public ViewedArticleList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        viewedArticleList \u003d new ArrayList\u003cArticle\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 6,
      "alaukiknpant": 12
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/commands/ApplicationTerminator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.articlelist.SavedArticleList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.joblist.SavedJobList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.notelist.SavedNoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.storage.ArticleToFileSaver;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.storage.JobToFileSaver;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.storage.NoteToFileSaver;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class used to represent the command to terminate the program. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ApplicationTerminator {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Executes the termination of the program and also saves the jobs, notes and articles in memory. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Messages.printInCenter(\"Saving your data...\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ArticleToFileSaver.execute(SavedArticleList.savedArticleList, \"articleList.json\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JobToFileSaver.execute(SavedJobList.savedJobList, \"jobList.json\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        NoteToFileSaver.execute(SavedNoteList.savedNoteList, \"noteList.json\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Messages.printInCenter(\"We are exiting the program...\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Messages.printInCenter(\"Bye. Come back again later.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 23
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/commands/Helper.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class used to represent the help command. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Helper {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Executes the printing of the help manual. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Messages.printCommand();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Messages.printStraightLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 13
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/commands/InformationAdder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.articlelist.ArticlePrinter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.articlelist.SavedArticleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.CommonMethods;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.joblist.JobPrinter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.joblist.SavedJobList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.notelist.NotePrinter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.notelist.SavedNoteList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Note;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class that represents the addition of extracts to information objects. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class InformationAdder {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(CommonMethods.class.getName());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private static final String LOGGER_FILE_PATH \u003d  \"command.log\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Initializes the LOGGER."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @throws IOException when logger set up fails."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void startLogger() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        LOGGER.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        LOGGER.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        FileHandler fileHandler \u003d new FileHandler(LOGGER_FILE_PATH, true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        LOGGER.addHandler(fileHandler);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Executes the addinfo feature."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param userResponse - Command that the user adds to the command line."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(String userResponse) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        LOGGER.log(Level.INFO, \"\\n going to start processing at Information Adder \\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String type \u003d userResponse.split(\" \")[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            int index \u003d Integer.parseInt(userResponse.split(\" \")[2]) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String extract \u003d userResponse.split(\" \", 4)[3];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"article\": {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                addInfoToArticle(index, extract);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"job\": {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                addInfoToJob(index, extract);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"note\": {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                addInfoToNote(index, extract);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printAddInfoException(\" addinfo [article / job / note] INDEX_NUMBER EXTRACT\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            LOGGER.log(Level.INFO, \"\\n Successful \\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            LOGGER.log(Level.INFO, \"\\n Index out of bounds for Information Adder. \\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printAddInfoException(\" addinfo [article / job / note] INDEX_NUMBER EXTRACT\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            LOGGER.log(Level.INFO, \"\\n Incorrect format alltogether for Information Adder.. \\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printAddInfoException(\" addinfo [article / job / note] INDEX_NUMBER EXTRACT\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Adds extract to an existing Note."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param index - Index of the article in the note list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param extract - Extract to be added."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void addInfoToNote(int index, String extract) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Note note \u003d SavedNoteList.savedNoteList.get(index);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"Done, the note description now looks like the following \\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            note.setExtract(note, extract);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            NotePrinter.printIsolatedNote(note);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printStraightLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"Sorry, Index number is incorrect!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printStraightLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Adds extract to an existing job."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param index - Index of the article in the job list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param extract - Extract to be added."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void addInfoToJob(int index, String extract) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Job job \u003d SavedJobList.savedJobList.get(index);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"Done, the job description now looks like the following \\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            job.setExtract(job, extract);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JobPrinter.printIsolatedJob(job);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printStraightLine();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"Sorry, Index number is incorrect!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printStraightLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Adds extract to an existing article."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param index - Index of the article in the article list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param extract - Extract to be added."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void addInfoToArticle(int index, String extract) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Article article \u003d SavedArticleList.savedArticleList.get(index);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            article.setExtract(article, extract);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"Done, the article description now looks like the following \\n\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            ArticlePrinter.printIsolatedArticle(article);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printStraightLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"Sorry, Index number is incorrect!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printStraightLine();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 134
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/commands/InformationCreator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.creator.ManualArticleCreator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.creator.ManualJobCreator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.creator.ManualNoteCreator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing the creation of article, note and job objects. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class InformationCreator {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Executes the creation process of information objects."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param userResponse - Input of the user in the command line."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(String userResponse) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String type \u003d userResponse.split(\" \")[1];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"article\": {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                ManualArticleCreator.execute();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"job\": {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                ManualJobCreator.execute();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"note\": {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                ManualNoteCreator.execute();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Invalid command for create!. You can only create [article / job / note]\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"Create should be of the following form:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printInCenter(\"6. create [article / job / note]\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printStraightLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 45
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/commands/InformationDeleter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.articlelist.ArticleDeleter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.joblist.JobDeleter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.joblist.SavedJobList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.notelist.NoteDeleter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.notelist.SavedNoteList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing the deletion of articles, jobs and notes from their respective lists. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class InformationDeleter {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Executes the deletion of a note/article/job."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param userResponse - Input of the user in the command line."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(String userResponse) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String type \u003d userResponse.split(\" \")[1];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"article\": {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                ArticleDeleter.execute(userResponse);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"job\": {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                JobDeleter.execute(SavedJobList.savedJobList, userResponse);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"note\": {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                NoteDeleter.execute(SavedNoteList.savedNoteList, userResponse);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Delete command or its index incorrect. It should be of the following form: \\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printInCenter(\"delete [article / job / note] [valid index number]\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"Sorry! You can only delete article/job/note with valid index number! \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    + \"Your command format is incorrect. Try again \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printStraightLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "            System.out.println(\"Sorry! Please enter a valid index number for the delete command. Try again.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "            Messages.printStraightLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yolanmz": 3,
      "alaukiknpant": 48
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/commands/InformationLister.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.articlelist.ArticleListPrinter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.articlelist.SavedArticleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.joblist.JobListPrinter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.joblist.SavedJobList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.notelist.NoteListPrinter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.notelist.SavedNoteList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing the listing of articles, jobs and notes from their respective lists. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class InformationLister {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Executes the listing of a note/article/job."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param userResponse - Input of the user in the command line."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(String userResponse) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String type \u003d userResponse.split(\" \")[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"article\": {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printInCenter(\"Article List\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                ArticleListPrinter.execute(SavedArticleList.savedArticleList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"job\": {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printInCenter(\"Job List\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                JobListPrinter.execute(SavedJobList.savedJobList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"note\": {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printInCenter(\"Note List\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                NoteListPrinter.execute(SavedNoteList.savedNoteList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Invalid command for list!. It should be of \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        + \"the form \\\"list [article / job / note]\\\"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"List command is incorrect. It should be of the following form: \\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printInCenter(\"list [article / job / note]\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 50
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/commands/InformationSaver.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.articlelist.ArticleSaver;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.articlelist.SavedArticleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.articlelist.ViewedArticleList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.joblist.SavedJobList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.joblist.ViewedJobList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing the saving of articles, jobs and notes from their respective lists. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class InformationSaver {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Executes the saving of a note/article/job."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param userResponse - Input of the user in the command line."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(String userResponse) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String type \u003d userResponse.split(\" \")[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"article\": {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (ViewedArticleList.viewedArticleList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    System.out.println(\"Sorry, you have not viewed any article to save.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    System.out.println(\"Try \\\"view article\\\" first\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    Messages.printStraightLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    ArticleSaver.execute(SavedArticleList.savedArticleList, userResponse);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    Messages.printStraightLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"job\": {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (ViewedJobList.viewedJobList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    System.out.println(\"Sorry, you have not viewed any job to save.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    System.out.println(\"Try \\\"view job\\\" first\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    Messages.printStraightLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    seedu.techtoday.joblist.JobSaver.execute(SavedJobList.savedJobList, userResponse);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    Messages.printStraightLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Save command is incorrect. \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        + \"It should be of the following form: \\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printInCenter(\"save [article / job] INDEX_NUMBER\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"Sorry! You can only save article/job with valid index number!\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    + \"Try \\\"save [article \\\\ job] VALID_INDEX_NUMBER\\\"\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printStraightLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "            System.out.println(\"Sorry! Please enter a valid index number for the save command. Try again.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yolanmz"
        },
        "content": "            Messages.printStraightLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yolanmz": 3,
      "alaukiknpant": 58
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/commands/InformationViewer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.api.apiviewjobs.JsonJobsReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.api.apiviewnews.JsonNewsReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.articlelist.ArticleListPrinter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.articlelist.ViewedArticleList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.joblist.JobListPrinter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.joblist.ViewedJobList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.storage.InBuiltArticleListGenerator;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.storage.InBuiltJobListGenerator;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing the viewing of articles, jobs and notes from their respective lists. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class InformationViewer {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Executes the viewing of a note/article/job."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param userResponse - Input of the user in the command line."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(String userResponse) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String type \u003d userResponse.split(\" \")[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if (type.equals(\"job\") || type.equals(\"article\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Connecting to the internet and loading information... \\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if (type.equals(\"job\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (ViewedJobList.viewedJobList.size() !\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    ViewedJobList.viewedJobList.clear();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    JsonJobsReader.viewNewJobs();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    System.out.println(\"Your device is not connected to the internet, \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                            + \"we will load pre-existing jobs \\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    InBuiltJobListGenerator.execute();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    JobListPrinter.execute(ViewedJobList.viewedJobList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } else if (type.equals(\"article\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (ViewedArticleList.viewedArticleList.size() !\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    ViewedArticleList.viewedArticleList.clear();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    JsonNewsReader.viewNewNews();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    System.out.println(\"Your device is not connected to the internet, \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                            + \"we will load pre-existing articles \\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    InBuiltArticleListGenerator.execute();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    ArticleListPrinter.execute(ViewedArticleList.viewedArticleList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.print(\"Sorry! You can only view article/job! \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        + \"Your command format is incorrect. Try again \\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"View command is incorrect. It should be of the following form: \\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printInCenter(\"1. view [article / job]\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 61
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/commands/ProgramExecutor.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import com.google.gson.JsonSyntaxException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.storage.Loader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing the commands essential for the logic that laods the data and runs the program. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ProgramExecutor {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Executes the program when isRunning condition is met."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param isRunning - Boolean value representing weather user has typed the command \"exit\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void executeProgram(Boolean isRunning) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String userResponse \u003d Ui.getCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String command \u003d userResponse.split(\" \")[0].trim().toLowerCase();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            case \"view\": {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                InformationViewer.execute(userResponse);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } case \"exit\": {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                ApplicationTerminator.execute();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                isRunning \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } case \"save\": {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                InformationSaver.execute(userResponse);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } case \"list\": {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                InformationLister.execute(userResponse);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } case \"create\": {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                InformationCreator.execute(userResponse);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } case \"delete\": {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                InformationDeleter.execute(userResponse);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } case \"addinfo\": {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                InformationAdder.execute(userResponse);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } case \"help\": {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Helper.execute();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } default: {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Invalid command. Try again using a valid command! \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        + \"Type \\\"help\\\" for looking at commands\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Loads the data of the program from the memory. */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void loadData() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        File articleListFile \u003d new File(\"articleList.json\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        File jobListFile \u003d new File(\"articleList.json\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        File noteListFile \u003d new File(\"noteList.json\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        boolean existsArticle \u003d articleListFile.exists();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        boolean existsJob \u003d jobListFile.exists();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        boolean existsNote \u003d noteListFile.exists();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (existsArticle \u0026 existsJob \u0026 existsNote) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Loading \\\"articleList.json\\\", \\\"jobList.json\\\" and \\\"notelist.json\\\"...\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Loader.execute(\"articleList.json\", \"jobList.json\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        \"noteList.json\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Done loading files, enter your command now:\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } catch (JsonSyntaxException | JSONException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Corrupted Json Files encountered.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"All the required files do not exist. \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    + \"We will create completely new files to save your data.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printStraightLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Initializes the logger for Information Adder class- the only class that utilizes logger. */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void startLogger() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            InformationAdder.startLogger();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"Logging setup failed! Logs will be printed to console instead of saved to file.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 98
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/common/CommonMethods.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class containing methods that can be used across classes in the application. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class CommonMethods {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Retutns a Boolean value to see if s is an integer or not."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param longer - String that can possibly be turned into an long type."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return - Boolean value isValidInteger."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static boolean checkIsLong(String longer) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        boolean isValidInt \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Long.parseLong(longer);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            isValidInt \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            // Case where a string representing an interger isn\u0027t fed as longer."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return isValidInt;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns upto the first 100 characters of a sting."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param string - String that is to be formatted."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return - String that is reduced in size."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String returnUptoNcharacters(String string) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String upToNCharacters;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (string.length() \u003c\u003d 100) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            upToNCharacters \u003d string;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            upToNCharacters \u003d string.substring(0, Math.min(string.length(), 100)) + \"...\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return upToNCharacters;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 38
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/common/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "katelo731"
        },
        "content": "package seedu.techtoday.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import org.jetbrains.annotations.NotNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String SPLIT_LINE_HELP \u003d \"**_____________________________________________\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            + \"________________________________**\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String SPLIT_LINE \u003d \"__________________________________________\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            + \"________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Let the statement be printed in center. **/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void printInCenter(@NotNull String str) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int left \u003d (83 - str.length()) / 2;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int right \u003d 83 - left - str.length();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String repeatedChar \u003d \" \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String buff \u003d \"_\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                + repeatedChar.repeat(Math.max(0, left))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                + str"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                + repeatedChar.repeat(Math.max(0, right - 1))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"_\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(buff);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Shows message to user. **/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printInCenter(SPLIT_LINE_HELP);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printInCenter(\"\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Hello! Here\u0027s TechToday.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Let me show you some technology news to refresh your mind!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printInCenter(SPLIT_LINE_HELP);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printInCenter(SPLIT_LINE_HELP);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Prints the list of possible commands the user can type. **/"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void printCommand() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Your queries can be of the following forms:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printInCenter(\"1. help\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printInCenter(\"2. view [article / job]\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printInCenter(\"3. save [article / job] INDEX_NUMBER\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printInCenter(\"4. create [article / job / note]\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printInCenter(\"5. list [article / job / note]\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printInCenter(\"6. delete [article / job / note] INDEX_NUMBER\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printInCenter(\"7. addinfo [article / job / note] INDEX_NUMBER EXTRACT\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printInCenter(\"8. exit\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Prints a straight line. */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void printStraightLine() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(SPLIT_LINE + \"\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Prints Exception Message when addInfo Command is incorrect."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param s - Message to be printed in the center."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void printAddInfoException(String s) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"addinfo should be of the following form: \\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Messages.printInCenter(s);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Messages.printStraightLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 23,
      "alaukiknpant": 46
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/common/TimeStampToDateConverter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing a method used to convert timestamp to date. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class TimeStampToDateConverter {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * This method sets a date for an article."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param timeStamp A string representing the timestamp of the article"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String execute(String timeStamp) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        if (timeStamp.isEmpty()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            return timeStamp;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String pattern \u003d \"yyyy-MMM-dd E hh:mm a\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            int intTimeStamp \u003d Integer.parseInt(timeStamp);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String date \u003d simpleDateFormat.format((new Date((long) intTimeStamp * 1000)));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 4,
      "alaukiknpant": 22
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/creator/CurrentTimeFetcher.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.creator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing the method used to fetch the current time. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class CurrentTimeFetcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Retutns the timestamp associated with the current time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return - Current timestamp (epochSecond)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Instant instant \u003d Instant.now();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        long timeStampSeconds \u003d instant.getEpochSecond();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String epochSecond \u003d Long.toString(timeStampSeconds);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return epochSecond;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 2,
      "alaukiknpant": 16
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/creator/ManualArticleCreator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.creator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.SavedArticleList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.ArticlePrinter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing a method used to ceate an article based on user input. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ManualArticleCreator {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Executes the method used to create an article object using user inputs. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String title \u003d getArticleTitle();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String url \u003d getArticleUrl();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String category \u003d getArticleCategory();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String extract \u003d getArticleExtract();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String epochSecond \u003d CurrentTimeFetcher.execute();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Article article \u003d new Article(title, url, category);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        article.setTime(epochSecond);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        article.setExtract(extract);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedArticleList.savedArticleList.add(article);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Done, we have added the following article to your list of saved articles\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticlePrinter.printIsolatedArticle(article);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that gets article name from the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of the title from user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String getArticleTitle() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Enter the title of the article?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return Ui.getCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that gets the URL from the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of url from user input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String getArticleUrl() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"What is the URl of the article (type \\\"No URL\\\")?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return Ui.getCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that gets category from the user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of category from user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String getArticleCategory() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"What is the category (type \\\"default\\\" if you don\u0027t know it)\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return Ui.getCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that asks and gets extract from the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of category from user input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String getArticleExtract() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Would you like to add any extract?\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return Ui.getCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "melylopez99": 37,
      "alaukiknpant": 25
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/creator/ManualJobCreator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.creator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.JobPrinter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.SavedJobList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing a method used to create a job based on user input. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ManualJobCreator {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Executes the creation of a job object from user input. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String title \u003d getJobTitle();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String text \u003d getJobText();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String category \u003d getJobCategory();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String extract \u003d getJobExtract();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String epochSecond \u003d CurrentTimeFetcher.execute();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Job job \u003d new Job(title, text, category);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        job.setExtract(extract);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        job.setTime(epochSecond);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        SavedJobList.savedJobList.add(job);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Done, we have added the job to your list of saved jobs\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JobPrinter.printIsolatedJob(job);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that asks and gets job title."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of title from user input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String getJobTitle() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Enter the title of the job?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return Ui.getCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that asks and gets job description."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of job description given by user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String getJobText() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"What is the job description/details?\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return Ui.getCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that asks and gets job category."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of job category given by user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String getJobCategory() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"What is the category of the Job? (type \\\"default\\\" if you don\u0027t know it)\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return Ui.getCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that asks and gets job extract."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of extract form user input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String getJobExtract() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Would you like to add any extract to the Job?\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return Ui.getCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 32,
      "alaukiknpant": 30
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/creator/ManualNoteCreator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.creator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.notelist.NotePrinter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Note;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.notelist.SavedNoteList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing a method used to create a note based on user input. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ManualNoteCreator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Executes the creation of a note based on user input. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String title \u003d getNoteTitle();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String url \u003d getNoteUrl();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String category \u003d getNoteCategory();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String extract \u003d getNoteExtract();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String epochSecond \u003d CurrentTimeFetcher.execute();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Note note \u003d new Note(title, extract, epochSecond);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        note.setUrl(url);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        note.setCategory(category);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        SavedNoteList.savedNoteList.add(note);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Done, we have added the following note to your list of saved notes\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        NotePrinter.printIsolatedNote(note);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that asks and gets title of note."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of note title from user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String getNoteTitle() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Enter the title you would like to give this Note?\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return Ui.getCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that asks and gets url of note."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of url from user input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String getNoteUrl() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Paste any URLs associated with this note:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return Ui.getCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that asks and gets category of note."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of category from user input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String getNoteCategory() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"What is the category of the note? (type \\\"default\\\" if you don\u0027t know it)\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return Ui.getCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that asks and gets note extract."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of extract from user input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String getNoteExtract() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"What would you like to add to the extract of this note?\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return Ui.getCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 33,
      "alaukiknpant": 30
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/exception/TechTodayException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Exceptions class for TechToday."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class TechTodayException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 7
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/joblist/JobAdder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.joblist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing a method used to add a job to a joblist. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class JobAdder extends ViewedJobList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public JobAdder() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Adds a job to a jobList. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cJob\u003e jobList, Job job) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        jobList.add(job);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 1,
      "alaukiknpant": 16
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/joblist/JobDeleter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.joblist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents command that is used to call a method to delete job from taskList. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class JobDeleter {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Deletes the task at index taskNumber from the tasklist."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param savedJobList List of all jobs saved as of now."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param command Command inputted by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cJob\u003e savedJobList, String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] commandArray \u003d command.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int jobNumber \u003d Integer.parseInt(commandArray[2]) - 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        Job jobToDelete \u003d SavedJobList.savedJobList.get(jobNumber);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Deleting the following job:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JobPrinter.printIsolatedJob(jobToDelete);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        SavedJobList.savedJobList.remove(jobNumber);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 2,
      "katelo731": 2,
      "alaukiknpant": 19
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/joblist/JobListPrinter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.joblist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class JobListPrinter {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Prints all available tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param jobList List that stores the jobs mentioned until now."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cJob\u003e jobList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (jobList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printInCenter(\"There is nothing in the list currently.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int taskCounter \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (Job job : jobList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JobPrinter.execute(taskCounter, job);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            taskCounter +\u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 1,
      "alaukiknpant": 24
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/joblist/JobPrinter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.joblist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.CommonMethods;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.TimeStampToDateConverter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing a method used to print a job. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class JobPrinter {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Executes the printing of a job."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskCounter - Index number of jobs in jobList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param job - Job object representing a job."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(int taskCounter, Job job) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String jobToPrint \u003d taskCounter + \". \" + returnJobString(job);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"   \" + jobToPrint);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Prints a job outside the context of a jobList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param job - Job object representing a job."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void printIsolatedJob(Job job) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String jobToPrint \u003d returnJobString(job);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"   \" + jobToPrint);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Retuns a string with the details of the note to be printed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param job - Note under consideration."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return String representing job."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private static String returnJobString(Job job) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String timeStamp \u003d job.getTimeStamp();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String date \u003d TimeStampToDateConverter.execute(timeStamp);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String title \u003d job.getTitle();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String text \u003d job.getText();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String upToNCharactersText \u003d CommonMethods.returnUptoNcharacters(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String category \u003d job.getCategory();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String extract \u003d job.getExtract();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String upToNCharactersExtract \u003d CommonMethods.returnUptoNcharacters(extract);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String jobToPrint \u003d \"Title: \" + title + System.lineSeparator()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Date: \" + date + System.lineSeparator()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Category: \" + category + System.lineSeparator()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Text: \" + upToNCharactersText + System.lineSeparator()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Extract: \" + upToNCharactersExtract;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return jobToPrint;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 5,
      "katelo731": 2,
      "alaukiknpant": 44
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/joblist/JobSaver.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.joblist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Class representing a method used to save a job. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class JobSaver extends SavedJobList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public JobSaver() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Executes the saving of a job."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param jobArrayList - List of jobs."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param command - User command on the terminal."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cJob\u003e jobArrayList, String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] commandArray \u003d command.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int commandNumber \u003d Integer.parseInt(commandArray[2]) - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Job jobToSave \u003d ViewedJobList.viewedJobList.get(commandNumber);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //add the job"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Done, saved the job with the following details:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JobPrinter.printIsolatedJob(jobToSave);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JobAdder.execute(SavedJobList.savedJobList, jobToSave);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 3,
      "katelo731": 1,
      "alaukiknpant": 23
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/joblist/SavedJobList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.joblist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents the data structure, i.e a list of Tasks, that stores the tasks.*/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class SavedJobList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static ArrayList\u003cJob\u003e savedJobList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Initializes a new taskList.  */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public SavedJobList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        savedJobList \u003d new ArrayList\u003cJob\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 4,
      "alaukiknpant": 13
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/joblist/ViewedJobList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.joblist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents the data structure, i.e a list of Tasks, that stores the tasks.*/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ViewedJobList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static ArrayList\u003cJob\u003e viewedJobList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Initializes a new taskList.  */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public ViewedJobList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        viewedJobList \u003d new ArrayList\u003cJob\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 4,
      "alaukiknpant": 13
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/notelist/NoteAdder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.notelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import seedu.techtoday.objects.Note;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents command that is used to call a method to add a note from noteList. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class NoteAdder extends SavedNoteList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public NoteAdder() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void execute(ArrayList\u003cNote\u003e noteList, Note note) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        noteList.add(note);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 1,
      "katelo731": 14,
      "alaukiknpant": 1
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/notelist/NoteDeleter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.notelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import seedu.techtoday.objects.Note;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": "/** Represents command that is used to call a method to delete note from taskList. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class NoteDeleter {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Deletes the task at index taskNumber from the tasklist."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @param savedNoteList - List of all notes saved as of now."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @param command - Command inputted by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void execute(ArrayList\u003cNote\u003e savedNoteList, String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String[] commandArray \u003d command.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int noteNumber \u003d Integer.parseInt(commandArray[2]) - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        Note noteToDelete \u003d SavedNoteList.savedNoteList.get(noteNumber);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(\"Deleting the following note:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        NotePrinter.printIsolatedNote(noteToDelete);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        SavedNoteList.savedNoteList.remove(noteToDelete);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 2,
      "katelo731": 19,
      "alaukiknpant": 1
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/notelist/NoteListPrinter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.notelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import seedu.techtoday.objects.Note;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents command that is used to call a method to print noteList. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class NoteListPrinter {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Prints all available notes."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @param noteList List that stores the jobs mentioned until now."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void execute(ArrayList\u003cNote\u003e noteList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (noteList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Messages.printInCenter(\"There is nothing in the list currently.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int taskCounter \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        for (Note job : noteList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            NotePrinter.execute(taskCounter, job);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            taskCounter +\u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 1,
      "katelo731": 16,
      "alaukiknpant": 8
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/notelist/NotePrinter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.notelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.CommonMethods;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.TimeStampToDateConverter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import seedu.techtoday.objects.Note;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents command that is used to call a method to print note from noteList. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class NotePrinter {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Prints a particular note."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskCounter - Index of the note in noteList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param note - Objecting representing note."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void execute(int taskCounter, Note note) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String noteToPrint \u003d taskCounter + \". \" + returnNoteString(note);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"   \" + noteToPrint);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Prints a note outside the scope of a noteList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param note - Object representing note."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void printIsolatedNote(Note note) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String noteToPrint \u003d returnNoteString(note);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"   \" + noteToPrint);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns a string represeting a note  object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param note - represents a note object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return - String representing note."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private static String returnNoteString(Note note) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String timeStamp \u003d note.getTimeStamp();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String date \u003d TimeStampToDateConverter.execute(timeStamp);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String title \u003d note.getTitle();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String extract \u003d note.getExtract();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String upToNCharacters \u003d CommonMethods.returnUptoNcharacters(extract);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String category \u003d note.getCategory();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String url \u003d note.getUrl();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String noteToPrint \u003d \"Title: \" + title + System.lineSeparator()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Date: \" + date + System.lineSeparator()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Category: \" + category + System.lineSeparator()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   URL: \" + url + System.lineSeparator()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Extract: \" + upToNCharacters;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return noteToPrint;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "melylopez99": 5,
      "katelo731": 11,
      "alaukiknpant": 35
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/notelist/SavedNoteList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.notelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import seedu.techtoday.objects.Note;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "/** Represents the data structure, i.e a list of Tasks, that stores the tasks.*/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class SavedNoteList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static ArrayList\u003cNote\u003e savedNoteList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Initializes a new taskList.  */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public SavedNoteList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        savedNoteList \u003d new ArrayList\u003cNote\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 4,
      "katelo731": 12
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/objects/Article.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.objects;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Main class for Article objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class Article extends Information {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String url;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Constructor for article class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param title - The article title given by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param url - The url given by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param category - The category set as default initially."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Article(String title, String url, String category) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        super(title, \"\", \"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.url \u003d url;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getUrl() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return url;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 2,
      "alaukiknpant": 29
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/objects/Information.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "katelo731"
        },
        "content": "package seedu.techtoday.objects;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": " * Structure for an information."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class Information {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    protected String extract;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    protected String timeStamp;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    protected String category;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Constructor for the Information class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param title - String representing the title"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param extract - String representing the extract"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param timeStamp - String representing the timestamp"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public Information(String title, String extract, String timeStamp) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.extract \u003d extract;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.timeStamp \u003d timeStamp;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * This methods sets an extract for a given article."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @param info Information object represting a news article."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @param extract An extract from the news info."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public void setExtract(Information info, String extract) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        info.extract \u003d extract;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void setExtract(String extract) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.extract \u003d extract;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public String getExtract() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return extract;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public String getTimeStamp() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return timeStamp;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void setTime(String timeStamp) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.timeStamp \u003d timeStamp;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 38,
      "melylopez99": 11,
      "alaukiknpant": 9
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/objects/Job.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.objects;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Main class for Job objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class Job extends Information {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String text;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Constructor for Job class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param title - The article title given by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param text - The text given by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param category - The category set as default initially."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Job(String title, String text, String category) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        super(title, \"\", \"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getText() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void setTime(String timeStamp) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.timeStamp \u003d timeStamp;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 4,
      "alaukiknpant": 30
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/objects/Note.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.objects;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class Note extends Information {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String url;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * Constructor for note class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @param title - The note title given by the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public Note(String title) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        super(title, \"\", \"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Alternate constructor for Note class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param title - The note title."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param extract - The note extractor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param epochSecond - The note epochSecond."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public Note(String title, String extract, String epochSecond) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        super(title, extract, epochSecond);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void setCategory(String category) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void setUrl(String url) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.url \u003d url;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getUrl() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return url;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 14,
      "melylopez99": 6,
      "alaukiknpant": 22
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/storage/ArticleToFileSaver.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import com.google.gson.JsonArray;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import com.google.gson.JsonObject;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents class that saves articles to file. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ArticleToFileSaver {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Executes saving og articles to file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param articleArrayList - List of articles."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param filePath - Path where articles are saved."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cArticle\u003e articleArrayList, String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JsonArray articleList \u003d new JsonArray();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (int i \u003d 0; i \u003c articleArrayList.size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Article article \u003d articleArrayList.get(i);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String title \u003d article.getTitle();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String url \u003d article.getUrl();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String category \u003d article.getCategory();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String extract \u003d article.getExtract();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String timeStamp \u003d article.getTimeStamp();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            //article Details"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JsonObject articleDetails \u003d new JsonObject();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            articleDetails.addProperty(\"title\", title);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            articleDetails.addProperty(\"url\", url);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            articleDetails.addProperty(\"timestamp\", timeStamp);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            articleDetails.addProperty(\"category\", category);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            articleDetails.addProperty(\"extract\", extract);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            //Index: article Details"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JsonObject articleObject \u003d new JsonObject();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            articleObject.add(Integer.toString(index), articleDetails);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            index +\u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            articleList.add(articleObject);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //Write JSON file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try (FileWriter file \u003d new FileWriter(filePath)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String jsonString \u003d articleList.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            file.write(jsonString);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            file.flush();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 2,
      "alaukiknpant": 58
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/storage/InBuiltArticleListGenerator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.SavedArticleList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.articlelist.ViewedArticleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.ArticleAdder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Class representing method to generate an article list when there is no internet."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class InBuiltArticleListGenerator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Executes the generation of articles from existing information."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String timeStampToday \u003d \"1584768812\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // article 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String title1 \u003d \"How Tailscale Works\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String url1 \u003d \"https://tailscale.com/blog/how-tailscale-works/\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Article article1 \u003d new Article(title1, url1, \"default\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        article1.setTime(timeStampToday);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // article 2"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String title2 \u003d \"Tesla Model 3 Vulnerability – Disable Autopilot Notifications, Speedometer, etc.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String url2 \u003d \"https://safekeepsecurity.com/about/cve-2020-10558/\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Article article2 \u003d new Article(title2, url2, \"default\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        article2.setTime(timeStampToday);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // article 3"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String title3 \u003d \"It never makes sense to use foldl on lists\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String url3 \u003d \"https://github.com/hasura/graphql-engine/pull/2933#discussion_r328821960\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Article article3 \u003d new Article(title3, url3, \"default\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        article3.setTime(timeStampToday);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // article 4"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String title4 \u003d \"George Gershwin, Then and Now\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String url4 \u003d \"https://www.the-tls.co.uk/articles/summertime-crawford-cambridge-companion-to-gerschwin-calenza-review-russell-davies/\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Article article4 \u003d new Article(title4, url4, \"default\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        article4.setTime(timeStampToday);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // article 5"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String title5 \u003d \"AI for generative design: Plain text to 3D Designs\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String url5 \u003d \"https://blog.insightdatascience.com/ai-for-3d-generative-design-17503d0b3943\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Article article5 \u003d new Article(title5, url5, \"default\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        article5.setTime(timeStampToday);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // article 6"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String title6 \u003d \"Furstenberg and Margulis awarded 2020 Abel Prize\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String url6 \u003d \"https://www.nature.com/articles/d41586-020-00799-7\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Article article6 \u003d new Article(title6, url6, \"default\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        article6.setTime(timeStampToday);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ArticleAdder.execute(ViewedArticleList.viewedArticleList, article1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ArticleAdder.execute(ViewedArticleList.viewedArticleList, article2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ArticleAdder.execute(ViewedArticleList.viewedArticleList, article3);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ArticleAdder.execute(ViewedArticleList.viewedArticleList, article4);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ArticleAdder.execute(ViewedArticleList.viewedArticleList, article5);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ArticleAdder.execute(ViewedArticleList.viewedArticleList, article6);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 32,
      "alaukiknpant": 30
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/storage/InBuiltJobListGenerator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.articlelist.ViewedArticleList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.JobAdder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.joblist.ViewedJobList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.SavedJobList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class InBuiltJobListGenerator {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Method to add jobs to viewedJobList in case of no internet."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String timeStampOfToday \u003d \"1584768812\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // job 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String job1 \u003d \"Tech jobs after COVID-19\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String text1 \u003d \"With the COVID-19 outbreak, many companies were forced to rethink the way they operate \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"and how to use those technologies in order to establish a new way of working to reach their goals.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Job jobOne \u003d new Job(job1, text1, \"default\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        jobOne.setTime(timeStampOfToday);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // job 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String job2 \u003d \"What are the best blogging platforms for developers in 2020?\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String text2 \u003d \"Medium, Towards Data Science, HackerNet, GeekForGeek.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Job jobTwo \u003d new Job(job2, text2, \"default\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        jobTwo.setTime(timeStampOfToday);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // job 3"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String job3 \u003d \"What is the average Salary of a Silicon Valley Software Engineer?\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String text3 \u003d \"$104,000\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Job jobThree \u003d new Job(job3, text3, \"default\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        jobThree.setTime(timeStampOfToday);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // job 4"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String job4 \u003d \"How to Excel as a Software Engineer in developing countries?\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String text4 \u003d \"(FROM Quora): When I was working in China for awhile (a few years ago), I noticed that the \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"biggest mismatch wasn\u0027t so much in coding skills, but in what would be called project management \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"skills in the US.  Several groups I encountered didn\u0027t use source code control for code and didn\u0027t \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"have a clue about configuration and release management.  When things broke, they\u0027d have a \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"massive shouting match to figure out who to blame, followed by a \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"fire-drill to try to put things back together.\" + System.lineSeparator();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Job jobFour \u003d new Job(job4, text4, \"default\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        jobFour.setTime(timeStampOfToday);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // job 5"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String job5 \u003d \"Outreach for Covid-19 longitudinal study proposal?\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String text5 \u003d \"I\u0026#x27;m failing at finding development help for a COVID-19 study initiative. I could\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \" use your ideas and critiques.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Job jobFive \u003d new Job(job5, text5, \"default\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        jobFive.setTime(timeStampOfToday);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // job 6"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String job6 \u003d \"What\u0027s your favorite technical book to read during this time of home quarantine?\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String text6 \u003d \"Mine is Elements of Programming\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Job jobSix \u003d new Job(job6, text6, \"default\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        jobSix.setTime(timeStampOfToday);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JobAdder.execute(ViewedJobList.viewedJobList, jobOne);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JobAdder.execute(ViewedJobList.viewedJobList, jobTwo);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JobAdder.execute(ViewedJobList.viewedJobList, jobThree);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JobAdder.execute(ViewedJobList.viewedJobList, jobFour);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JobAdder.execute(ViewedJobList.viewedJobList, jobFive);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JobAdder.execute(ViewedJobList.viewedJobList, jobSix);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 35,
      "alaukiknpant": 28
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/storage/JobToFileSaver.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import com.google.gson.JsonArray;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import com.google.gson.JsonObject;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class JobToFileSaver {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Saves a list of jobs to a file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param jobArrayList - List representing jobs."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param filePath - The path wo where the job is to be saved."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cJob\u003e jobArrayList, String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JsonArray jobList \u003d new JsonArray();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (int i \u003d 0; i \u003c jobArrayList.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Job job \u003d jobArrayList.get(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String title \u003d job.getTitle();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String text \u003d job.getText(); //gets text"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String category \u003d job.getCategory();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String extract \u003d job.getExtract();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String timeStamp \u003d job.getTimeStamp();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            //job Details"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JsonObject jobDetails \u003d new JsonObject();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            jobDetails.addProperty(\"title\", title);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            jobDetails.addProperty(\"text\", text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            jobDetails.addProperty(\"timestamp\", timeStamp);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            jobDetails.addProperty(\"category\", category);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            jobDetails.addProperty(\"extract\", extract);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            //Index: job Details"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JsonObject jobObject \u003d new JsonObject();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            jobObject.add(Integer.toString(index), jobDetails);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            index +\u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            jobList.add(jobObject);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //Write JSON file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try (FileWriter file \u003d new FileWriter(filePath)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String jsonString \u003d jobList.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            file.write(jsonString);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            file.flush();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 2,
      "alaukiknpant": 57
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/storage/Loader.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import com.google.gson.JsonArray;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import com.google.gson.JsonObject;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import com.google.gson.JsonParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import com.google.gson.JsonSyntaxException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import com.google.gson.JsonParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.notelist.SavedNoteList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Note;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.SavedArticleList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.SavedJobList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Loads articles from memory."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Loader {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static int idxArticle \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static int idxJob \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static int idxNotes \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Executes the loading of articles from memory."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param fileNameArticle - Name of file containing articles."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param fileNameJobs - Name of file containing jobs."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param fileNameNotes - Name of file containing notes."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(String fileNameArticle, String fileNameJobs, String fileNameNotes) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JsonArray articleList \u003d jsonReader(fileNameArticle);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JsonArray jobList \u003d jsonReader(fileNameJobs);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JsonArray noteList \u003d jsonReader(fileNameNotes);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //Iterate over articleList array"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        articleList.forEach(obj -\u003e parseArticleObject((JsonObject)obj));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //Iterate over jobList array"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        jobList.forEach(obj -\u003e parseJobObject((JsonObject)obj));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //Iterate over noteList array"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        noteList.forEach(obj -\u003e parseNoteObject((JsonObject)obj));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns Json Array from JsonFile."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param fileName - Name of JsonFile."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return - JsonArray that represents file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static JsonArray jsonReader(String fileName) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        try (FileReader reader \u003d new FileReader(fileName)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Object obj \u003d JsonParser.parseReader(reader);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                JsonArray objectList \u003d (JsonArray) obj;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                return objectList;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } catch (JsonSyntaxException | ClassCastException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(String.format(\"\\\"%s\\\" is corrupted. We will clear this \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        + \"file in particular and start fresh.\", fileName));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Messages.printStraightLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IOException | JsonParseException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return new JsonArray();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns a parsed string from string read from Json."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param string - String extracted from Json object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return String that user sees."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private static String parseString(String string) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String stringWithoutQuotations \u003d string.substring(1, string.length() - 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String stringWithSlashesProcessed \u003d stringWithoutQuotations.replace(\"\\\\\\\"\", \"\\\"\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String finalString \u003d stringWithSlashesProcessed.replace(\"\\\\\\\\\", \"\\\\\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return finalString;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Parses Json Object representing article into String."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param article - Json object representing article."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private static void parseArticleObject(JsonObject article) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String index \u003d Integer.toString(idxArticle);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //Get employee object within list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JsonObject articleObject \u003d (JsonObject) article.get(index);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        idxArticle +\u003d 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String title \u003d parseString(articleObject.get(\"title\").toString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String url \u003d parseString(articleObject.get(\"url\").toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String timeStamp \u003d parseString(articleObject.get(\"timestamp\").toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String extract \u003d parseString(articleObject.get(\"extract\").toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String category \u003d parseString(articleObject.get(\"category\").toString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (category \u003d\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            category \u003d \"default\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Article newArticle \u003d new Article(title, url, category);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        newArticle.setTime(timeStamp);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (extract \u003d\u003d null) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            extract \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        newArticle.setExtract(extract);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedArticleList.savedArticleList.add(newArticle);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Parses Json Object representing job into String."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param job - Json object representing job."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private static void parseJobObject(JsonObject job) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String index \u003d Integer.toString(idxJob);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //Get employee object within list"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JsonObject jobObject \u003d (JsonObject) job.get(index);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        idxJob +\u003d 1;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //Get article title"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String title \u003d parseString(jobObject.get(\"title\").toString());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String text \u003d parseString(jobObject.get(\"text\").toString());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String timeStamp \u003d parseString(jobObject.get(\"timestamp\").toString());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String extract \u003d parseString(jobObject.get(\"extract\").toString());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String category \u003d parseString(jobObject.get(\"category\").toString());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (category \u003d\u003d null) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            category \u003d \"default\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (extract \u003d\u003d null) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            extract \u003d \"\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //Creates a job and a"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Job newJob \u003d new Job(title, text, category);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        newJob.setTime(timeStamp);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        newJob.setExtract(extract);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        SavedJobList.savedJobList.add(newJob);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Parses Json Object representing note into String."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param note - Json object representing note."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private static void parseNoteObject(JsonObject note) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String index \u003d Integer.toString(idxNotes);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //Get employee object within list"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JsonObject noteObject \u003d (JsonObject) note.get(index);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        idxNotes +\u003d 1;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String title \u003d parseString(noteObject.get(\"title\").toString());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String extract \u003d parseString(noteObject.get(\"extract\").toString());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String timeStamp \u003d parseString(noteObject.get(\"timestamp\").toString());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String url \u003d parseString(noteObject.get(\"url\").toString());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String category \u003d parseString(noteObject.get(\"category\").toString());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //Creates a note and a"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Note newNote \u003d new Note(title, extract, timeStamp);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        newNote.setUrl(url);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        newNote.setCategory(category);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        // NotePrinter.printIsolatedNote(newNote);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        SavedNoteList.savedNoteList.add(newNote);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 17,
      "alaukiknpant": 169
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/storage/NoteToFileSaver.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import com.google.gson.JsonArray;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Note;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import com.google.gson.JsonObject;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class NoteToFileSaver {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Saves notes to file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param noteArrayList - List of notes."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param filePath - Filepath where notes are to be saved."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cNote\u003e noteArrayList, String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JsonArray noteList \u003d new JsonArray();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (int i \u003d 0; i \u003c noteArrayList.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Note note \u003d noteArrayList.get(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String title \u003d note.getTitle();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String extract \u003d note.getExtract();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String timeStamp \u003d note.getTimeStamp();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String category \u003d note.getCategory();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String url \u003d note.getUrl();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            //note Details"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JsonObject noteDetails \u003d new JsonObject();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            noteDetails.addProperty(\"title\", title);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            noteDetails.addProperty(\"extract\", extract);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            noteDetails.addProperty(\"timestamp\", timeStamp);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            noteDetails.addProperty(\"category\", category);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            noteDetails.addProperty(\"url\", url);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            //Index: note Details"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            JsonObject noteObject \u003d new JsonObject();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            noteObject.add(Integer.toString(index), noteDetails);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            index +\u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            noteList.add(noteObject);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //Write JSON file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try (FileWriter file \u003d new FileWriter(filePath)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String jsonString \u003d noteList.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            file.write(jsonString);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            file.flush();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 2,
      "alaukiknpant": 55
    }
  },
  {
    "path": "src/main/java/seedu/techtoday/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Class for User Interface objects and interacting with user commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Returns the trimmed command of the user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return String representation of user input trimmed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String getCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String userResponse \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(Messages.SPLIT_LINE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return userResponse.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 20,
      "alaukiknpant": 7
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/TechTodayTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "katelo731"
        },
        "content": "package seedu.techtoday;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.SavedArticleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.ViewedArticleList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.SavedJobList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.ViewedJobList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.notelist.SavedNoteList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "class TechTodayTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void constructorTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        TechToday techtoday \u003d new TechToday();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(techtoday.savedJobList.savedJobList, SavedJobList.savedJobList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(techtoday.savedNoteList.savedNoteList, SavedNoteList.savedNoteList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(techtoday.savedArticleList.savedArticleList, SavedArticleList.savedArticleList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(techtoday.viewedArticleList.viewedArticleList, ViewedArticleList.viewedArticleList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(techtoday.viewedJobList.viewedJobList, ViewedJobList.viewedJobList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    void main() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 6,
      "melylopez99": 14,
      "-": 6
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/api/apiviewjobs/JobsCreatorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.api.apiviewjobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "class JobsCreatorTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    void rawToProcessedJob() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String inputJsonText \u003d \"{ \\\"by\\\" : \\\"pjmlp\\\",\\\"descendants\\\"\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \" : 6, \\\"id\\\" : 22582276, \\\"kids\\\" : [ 22582600 ], \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"\\\"score\\\" : 76, \\\"time\\\" : 1584262684, \\\"title\\\" : \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"\\\"Augmented Reality Developer\\\",\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \" \\\"category\\\" : \\\"default\\\", \\\"text\\\" : \\\"Its a job of the future\\\"}\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JSONObject input \u003d new JSONObject(inputJsonText);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String title \u003d \"Augmented Reality Developer\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String text \u003d \"Its a job of the future\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Job output \u003d JobsCreator.convertToProcessedJob(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String textOutput \u003d output.getText();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String titleOutput \u003d output.getTitle();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        assertEquals(text, textOutput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        assertEquals(title, titleOutput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 32
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/api/apiviewnews/NewsCreatorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.api.apiviewnews;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.json.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "class NewsCreatorTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    void testNewsCreation() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String inputJsonText \u003d \"{ \\\"by\\\" : \\\"pjmlp\\\",\\\"descendants\\\"\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \" : 6, \\\"id\\\" : 22582276, \\\"kids\\\" : [ 22582600 ], \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"\\\"score\\\" : 76, \\\"time\\\" : 1584262684, \\\"title\\\" : \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"\\\"WebAssembly brings extensibility to network proxies\\\",\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \" \\\"type\\\" : \\\"story\\\", \\\"url\\\" : \\\"https://opensource.googl\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"eblog.com/2020/03/webassembly-brings-extensibility-to.html\\\"}\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        JSONObject input \u003d new JSONObject(inputJsonText);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String title \u003d \"WebAssembly brings extensibility to network proxies\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String url \u003d \"https://opensource.googleblog.com/2020/03/webassembly-brings-extensibility-to.html\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String category \u003d \"default\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Article output \u003d NewsCreator.convertToProcessedNews(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String urlOutput \u003d output.getUrl();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String categoryOutput \u003d output.getCategory();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String titleOutput \u003d output.getTitle();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        assertEquals(url, urlOutput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        assertEquals(category, categoryOutput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        assertEquals(title, titleOutput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 36
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/articlelist/ArticleAdderTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.articlelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class ArticleAdderTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArrayList\u003cArticle\u003e articleList \u003d new ArrayList\u003cArticle\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleAdder.execute(articleList, new Article(\"Test\", \"www.test.com\", \"article\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(1, articleList.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void constructorTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleAdder adder \u003d new ArticleAdder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(adder.viewedArticleList, new ArrayList\u003cArticle\u003e());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 25
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/articlelist/ArticleDeleterTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.articlelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class ArticleDeleterTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedArticleList.savedArticleList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleAdder.execute(SavedArticleList.savedArticleList, new Article(\"Test1\", \"www.test1.com\", \"article\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleAdder.execute(SavedArticleList.savedArticleList, new Article(\"Test2\", \"www.test2.com\", \"article\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleAdder.execute(SavedArticleList.savedArticleList, new Article(\"Test3\", \"www.test3.com\", \"article\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // All system.out.println statements will be in outContent"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // execute command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleDeleter.execute(\"delete article 2\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String expectedOutput \u003d \"Deleting the following article:\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Title: Test2\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Date: \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Category: article\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Url: www.test2.com\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Extract: \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 45,
      "alaukiknpant": 1
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/articlelist/ArticleSaverTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.articlelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class ArticleSaverTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedArticleList.savedArticleList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ViewedArticleList.viewedArticleList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleAdder.execute(ViewedArticleList.viewedArticleList, new Article(\"Test1\", \"www.test1.com\", \"article\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleAdder.execute(ViewedArticleList.viewedArticleList, new Article(\"Test2\", \"www.test2.com\", \"article\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleAdder.execute(ViewedArticleList.viewedArticleList, new Article(\"Test3\", \"www.test3.com\", \"article\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // All system.out.println statements will be in outContent"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // execute command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleSaver.execute(SavedArticleList.savedArticleList, \"save article 2\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String expectedOutput \u003d \"Done, saved the article with the following details:\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Title: Test2\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Date: \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Category: article\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Url: www.test2.com\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Extract: \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void constructorTest() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleSaver saved \u003d new ArticleSaver();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(saved.savedArticleList, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 51,
      "alaukiknpant": 1
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/articlelist/SavedArticleListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.articlelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class SavedArticleListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void constructorTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedArticleList saved \u003d new SavedArticleList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(saved.savedArticleList, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 17
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/articlelist/ViewedArticleListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.articlelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class ViewedArticleListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void constructorTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ViewedArticleList viewed \u003d new ViewedArticleList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(viewed.viewedArticleList, new ArrayList\u003cArticle\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 18
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/commands/ApplicationTerminatorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.SavedArticleList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.SavedJobList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.notelist.SavedNoteList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class ApplicationTerminatorTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedArticleList.savedArticleList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedJobList.savedJobList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedNoteList.savedNoteList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // All system.out.println statements will be in outContent"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // execute command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ApplicationTerminator.execute();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String expectedOutput \u003d \"_                                Saving your data...                               _\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"_                           We are exiting the program...                          _\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"_                            Bye. Come back again later.                           _\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 40
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/commands/InformationDeleterTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.ArticleAdder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.SavedArticleList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.JobAdder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.joblist.SavedJobList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.notelist.NoteAdder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.notelist.SavedNoteList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.objects.Note;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class InformationDeleterTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // article"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedArticleList.savedArticleList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleAdder.execute(SavedArticleList.savedArticleList, new Article(\"Test1\", \"www.test1.com\", \"article\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleAdder.execute(SavedArticleList.savedArticleList, new Article(\"Test2\", \"www.test2.com\", \"article\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArticleAdder.execute(SavedArticleList.savedArticleList, new Article(\"Test3\", \"www.test3.com\", \"article\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // job"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedJobList.savedJobList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobAdder.execute(SavedJobList.savedJobList, new Job(\"Test1\", \"www.test1.com\", \"job\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobAdder.execute(SavedJobList.savedJobList, new Job(\"Test2\", \"www.test2.com\", \"job\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobAdder.execute(SavedJobList.savedJobList, new Job(\"Test3\", \"www.test3.com\", \"job\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // note"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedNoteList.savedNoteList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        NoteAdder.execute(SavedNoteList.savedNoteList, new Note(\"Test1\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        NoteAdder.execute(SavedNoteList.savedNoteList, new Note(\"Test2\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        NoteAdder.execute(SavedNoteList.savedNoteList, new Note(\"Test3\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void execute_articleSizeList_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InformationDeleter.execute(\"delete article 1\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(2,SavedArticleList.savedArticleList.size());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void execute_jobSizeList_success() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InformationDeleter.execute(\"delete job 1\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(2, SavedJobList.savedJobList.size());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void execute_noteSizeList_success() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InformationDeleter.execute(\"delete note 1\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(2,SavedNoteList.savedNoteList.size());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 68
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/creator/ManualArticleCreatorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package seedu.techtoday.creator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "class ManualArticleCreatorTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    void getArticle_TestArticle_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String input \u003d \"TestArticle\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String actualOutput \u003d ManualArticleCreator.getArticleTitle();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        assertEquals(\"TestArticle\", actualOutput);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    void getUrl_TestUrl_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String input \u003d \"www.testarticle.com\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String actualOutput \u003d ManualArticleCreator.getArticleUrl();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        assertEquals(\"www.testarticle.com\", actualOutput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    void getCategory_default_success() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String input \u003d \"default\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String actualOutput \u003d ManualArticleCreator.getArticleCategory();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        assertEquals(\"default\", actualOutput);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    void getExtract_No_success() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String input \u003d \"no\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String actualOutput \u003d ManualArticleCreator.getArticleExtract();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        assertEquals(\"no\", actualOutput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 57
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/creator/ManualJobCreatorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.creator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class ManualJobCreatorTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getTitle() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String input \u003d \"testJob\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String actualOutput \u003d ManualJobCreator.getJobTitle();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(\"testJob\", actualOutput);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getText() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String input \u003d \"Testing text\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String actualOutput \u003d ManualJobCreator.getJobText();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(\"Testing text\", actualOutput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getCategory() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String input \u003d \"testCategory\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String actualOutput \u003d ManualJobCreator.getJobCategory();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(\"testCategory\", actualOutput);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getExtract() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String input \u003d \"testExtract\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String actualOutput \u003d ManualJobCreator.getJobExtract();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(\"testExtract\", actualOutput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 54,
      "alaukiknpant": 4
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/creator/ManualNoteCreatorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.creator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class ManualNoteCreatorTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getNote() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String input \u003d \"testNote\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String actualOutput \u003d ManualNoteCreator.getNoteTitle();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(\"testNote\", actualOutput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getUrl() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String input \u003d \"testUrl\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String actualOutput \u003d ManualNoteCreator.getNoteUrl();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(\"testUrl\", actualOutput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getExtract() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String input \u003d \"testExtract\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String actualOutput \u003d ManualNoteCreator.getNoteExtract();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(\"testExtract\", actualOutput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getCategory() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String input \u003d \"testCategory\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String actualOutput \u003d ManualNoteCreator.getNoteCategory();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(\"testCategory\", actualOutput);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 54,
      "alaukiknpant": 4
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/joblist/JobAdderTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.joblist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class JobAdderTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArrayList\u003cJob\u003e jobList \u003d new ArrayList\u003cJob\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobAdder.execute(jobList, new Job(\"Test\", \"www.test.com\", \"job\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(1, jobList.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void constructorTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobAdder job \u003d new JobAdder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(job.viewedJobList, new ArrayList\u003cJob\u003e());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 25
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/joblist/JobDeleterTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.joblist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class JobDeleterTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedJobList.savedJobList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobAdder.execute(SavedJobList.savedJobList, new Job(\"Test1\", \"www.test1.com\", \"job\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobAdder.execute(SavedJobList.savedJobList, new Job(\"Test2\", \"www.test2.com\", \"job\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobAdder.execute(SavedJobList.savedJobList, new Job(\"Test3\", \"www.test3.com\", \"job\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // All system.out.println statements will be in outContent"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // execute command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobDeleter.execute(SavedJobList.savedJobList, \"delete job 2\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String expectedOutput \u003d \"Deleting the following job:\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Title: Test2\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Date: \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Category: job\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Text: www.test2.com\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Extract: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 45
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/joblist/JobSaverTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.joblist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.objects.Job;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class JobSaverTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedJobList.savedJobList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ViewedJobList.viewedJobList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobAdder.execute(ViewedJobList.viewedJobList, new Job(\"Test1\", \"www.test1.com\", \"job\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobAdder.execute(ViewedJobList.viewedJobList, new Job(\"Test2\", \"www.test2.com\", \"job\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobAdder.execute(ViewedJobList.viewedJobList, new Job(\"Test3\", \"www.test3.com\", \"job\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // All system.out.println statements will be in outContent"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // execute command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobSaver.execute(SavedJobList.savedJobList, \"save job 2\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String expectedOutput \u003d \"Done, saved the job with the following details:\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Title: Test2\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Date: \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Category: job\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Text: www.test2.com\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Extract: \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void constructorTest() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        JobSaver saver \u003d new JobSaver();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(saver.savedJobList, new ArrayList\u003cJob\u003e());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 52
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/notelist/NoteAdderTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.notelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.objects.Note;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class NoteAdderTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArrayList\u003cNote\u003e noteList \u003d new ArrayList\u003cNote\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        NoteAdder.execute(noteList, new Note(\"Test\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(1, noteList.size());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void constructorTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        NoteAdder note \u003d new NoteAdder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(note.savedNoteList, new ArrayList\u003cNote\u003e());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 24
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/notelist/NoteDeleterTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.notelist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.objects.Note;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class NoteDeleterTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        SavedNoteList.savedNoteList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        NoteAdder.execute(SavedNoteList.savedNoteList, new Note(\"Test1\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        NoteAdder.execute(SavedNoteList.savedNoteList, new Note(\"Test2\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        NoteAdder.execute(SavedNoteList.savedNoteList, new Note(\"Test3\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // All system.out.println statements will be in outContent"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // execute command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        NoteDeleter.execute(SavedNoteList.savedNoteList, \"delete note 2\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String expectedOutput \u003d \"Deleting the following note:\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Title: Test2\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Date: \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   Category: null\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"   URL: null\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                + \"   Extract: \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 44,
      "alaukiknpant": 3
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/objects/InformationTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.objects;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class InformationTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void setExtract_newExtract_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Information info \u003d new Information(\"testTitle\", \"testExtract\", \"testTimeStamp\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        info.setExtract(\"newExtract\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(info.extract, \"newExtract\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void setExtract_withInfo_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Information info \u003d new Information(\"testTitle\", \"testExtract\", \"testTimeStamp\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        info.setExtract(info, \"newExtract\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(info.extract, \"newExtract\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getTitle_testTitle_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Information info \u003d new Information(\"testTitle\", \"testExtract\", \"testTimeStamp\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String actual \u003d info.getTitle();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(actual, \"testTitle\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getExtract() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Information info \u003d new Information(\"testTitle\", \"testExtract\", \"testTimeStamp\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String actual \u003d info.getExtract();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(actual, \"testExtract\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getTimeStamp() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Information info \u003d new Information(\"testTitle\", \"testExtract\", \"testTimeStamp\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String actual \u003d info.getTimeStamp();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(actual, \"testTimeStamp\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getCategory_Null_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Information info \u003d new Information(\"testTitle\", \"testExtract\", \"testTimeStamp\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String actual \u003d info.getCategory();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(actual, null);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getCategory_newCategory_success() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Information info \u003d new Information(\"testTitle\", \"testExtract\", \"testTimeStamp\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        info.category \u003d \"newCategory\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(info.category, \"newCategory\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void setTime_NewTime_success() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Information info \u003d new Information(\"testTitle\", \"testExtract\", \"testTimeStamp\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        info.setTime(\"newTime\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(info.timeStamp, \"newTime\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 65
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/objects/NoteTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.objects;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class NoteTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void constructorTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Note note \u003d new Note(\"testTitle\", \"testExtract\", \"testEpoch\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(note.title, \"testTitle\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(note.extract, \"testExtract\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(note.timeStamp, \"testEpoch\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void setCategory() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Note note \u003d new Note(\"testNote\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        note.setCategory(\"newCategory\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(note.category, \"newCategory\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void setUrl() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Note note \u003d new Note(\"testNote\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        note.setUrl(\"newUrl\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(note.url, \"newUrl\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getUrl() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Note note \u003d new Note(\"testNote\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        note.url \u003d \"testUrl\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(note.getUrl(), \"testUrl\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getCategory() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        Note note \u003d new Note(\"testNote\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        note.category \u003d \"testCategory\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(note.getCategory(), \"testCategory\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 45
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/storage/InBuiltArticleListGeneratorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.articlelist.ViewedArticleList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import seedu.techtoday.objects.Article;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class InBuiltArticleListGeneratorTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ViewedArticleList.viewedArticleList \u003d new ArrayList\u003cArticle\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InBuiltArticleListGenerator.execute();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void execute_SizeofArray_6() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(6, ViewedArticleList.viewedArticleList.size());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void testExecute_articleTitles() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(ViewedArticleList.viewedArticleList.get(0).getTitle(), \"How Tailscale Works\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(ViewedArticleList.viewedArticleList.get(1).getTitle(), \"Tesla Model 3 Vulnerability – \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"Disable Autopilot Notifications, Speedometer, etc.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(ViewedArticleList.viewedArticleList.get(2).getTitle(), \"It never makes \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                 + \"sense to use foldl on lists\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(ViewedArticleList.viewedArticleList.get(3).getTitle(), \"George Gershwin, Then and Now\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(ViewedArticleList.viewedArticleList.get(4).getTitle(), \"AI for generative \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"design: Plain text to 3D Designs\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(ViewedArticleList.viewedArticleList.get(5).getTitle(), \"Furstenberg and \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                + \"Margulis awarded 2020 Abel Prize\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void testExecute_articleUrl() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(ViewedArticleList.viewedArticleList.get(0).getUrl(), \"https://tailscale.com/blog/how-tailscale-works/\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(ViewedArticleList.viewedArticleList.get(1).getUrl(), \"https://safekeepsecurity.com/about/cve-2020-10558/\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(ViewedArticleList.viewedArticleList.get(2).getUrl(), \"https://github.com/hasura/graphql-engine/pull/2933#discussion_r328821960\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(ViewedArticleList.viewedArticleList.get(3).getUrl(), \"https://www.the-tls.co.uk/articles/summertime-crawford-cambridge-companion-to-gerschwin-calenza-review-russell-davies/\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(ViewedArticleList.viewedArticleList.get(4).getUrl(), \"https://blog.insightdatascience.com/ai-for-3d-generative-design-17503d0b3943\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(ViewedArticleList.viewedArticleList.get(5).getUrl(), \"https://www.nature.com/articles/d41586-020-00799-7\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 48
    }
  },
  {
    "path": "src/test/java/seedu/techtoday/ui/UiTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package seedu.techtoday.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "class UiTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getCommand_DeleteArticle1_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String input \u003d \"delete article 1\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String actualOutput \u003d Ui.getCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(\"delete article 1\", actualOutput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    void getCommand_DeleteWithSpaces_success() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String input \u003d \"delete                   \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String actualOutput \u003d Ui.getCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        assertEquals(\"delete\", actualOutput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 31
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed in runtest.bat! || Echo Test failed in runtest.bar!"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "alaukiknpant": 2
    }
  }
]
