[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    mainClassName \u003d \"MeetingOrganizer\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    archiveBaseName \u003d \"MeetingOrganizer\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.0.1\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 38,
      "MeLoveCarbs": 2
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "synCKun"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | CK | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Hong Wei Yang | [Github](https://github.com/MeLoveCarbs) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Xi Zhi | [Github](https://github.com/lowxizhi) | [Portfolio](docs/team/lowxizhi.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Matthew Chan | [Github](https://github.com/matthewc97) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 1,
      "lowxizhi": 1,
      "synCKun": 1,
      "-": 4,
      "MeLoveCarbs": 1
    }
  },
  {
    "path": "docs/team/lowxizhi.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "# Low Xi Zhi - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "lowxizhi": 6
    }
  },
  {
    "path": "src/main/java/CliParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " * TESTING SUMMARY DOC."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class CliParser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MeLoveCarbs": 7
    }
  },
  {
    "path": "src/main/java/Meeting.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " * TESTING SUMMARY DOC."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class Meeting {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private String meetingName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private Integer startDay;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private Integer endDay;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public Meeting(String meetingName, Integer startDay, LocalTime startTime, Integer endDay, LocalTime endTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        this.meetingName \u003d meetingName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        this.startDay \u003d startDay;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        this.endDay \u003d endDay;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public String getMeetingName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return meetingName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public Integer getStartDay() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return startDay;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public LocalTime getStartTime() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public Integer getEndDay() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return endDay;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public LocalTime getEndTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public void editTime() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return meetingName + \", \" + startDay + \", \" + startTime + \", \" + endDay + \", \" + endTime;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 35,
      "MeLoveCarbs": 13
    }
  },
  {
    "path": "src/main/java/MeetingList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " * TESTING SUMMARY DOC."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class MeetingList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private ArrayList\u003cMeeting\u003e meetingList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public void add(Meeting meeting) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        meetingList.add(meeting);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public void delete() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public ArrayList\u003cMeeting\u003e getMeetingList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return this.meetingList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public int getMeetingListSize() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return meetingList.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public Boolean isDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 13,
      "MeLoveCarbs": 15
    }
  },
  {
    "path": "src/main/java/MeetingOrganizer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " * TESTING SUMMARY DOC."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class MeetingOrganizer {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public MeetingOrganizer() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        //declare objects here"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        myMeetingList \u003d new MeetingList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private MeetingList myMeetingList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private ArrayList\u003cTeamMember\u003e myScheduleList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private ScheduleHandler myScheduleHandler;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private Boolean[][] myMasterSchedule;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    void botResponse(String userInput) throws MoException, DateTimeParseException, NumberFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        switch (userInput) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            TextUI.scheduleMeetingMsg();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            TextUI.printTimetable(myMasterSchedule);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            // Test add meeting"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            TextUI.meetingNameMsg();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String meetingName \u003d in.nextLine(); // eg. CS2113 Meeting"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            TextUI.meetingDetailsMsg();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String input \u003d in.nextLine(); // eg. 1 19:00 2 12:30"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String[] meetingDetails \u003d input.split(\" \", 4);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            Integer startDay \u003d Integer.parseInt(meetingDetails[0]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            LocalTime startTime \u003d LocalTime.parse(meetingDetails[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            Integer endDay \u003d Integer.parseInt(meetingDetails[2]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            LocalTime endTime \u003d LocalTime.parse(meetingDetails[3]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            if (myScheduleHandler.isValidMeeting(startDay, startTime, endDay, endTime)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                myMeetingList.add(new Meeting(meetingName, startDay, startTime, endDay, endTime));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                myScheduleHandler.updateMasterSchedule(startDay, startTime, endDay, endTime);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                myMasterSchedule \u003d myScheduleHandler.getMasterSchedule();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                TextUI.printTimetable(myMasterSchedule);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                TextUI.meetingListSizeMsg(myMeetingList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        case \"2\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            TextUI.deleteMeetingMsg();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            member1.deleteBusyBlocks(\"TESTMEETING\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                for (int j \u003d 0; j \u003c 48; j++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    out.print(member1.getSchedule()[i][j]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                out.println();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "             */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        case \"3\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            TextUI.editMeetingMsg();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        case \"4\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            TextUI.listMeetings();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            throw new MoException(\"Unknown command, please try again.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private void setMembersSchedule(Scanner in) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        TextUI.membersMsg();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        Integer membersN \u003d Integer.parseInt(in.nextLine());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        TextUI.enterScheduleMsg();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        myScheduleList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        for (int i \u003d 0; i \u003c membersN; ++i) { // HANDLE EXCEPTION"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            TeamMember member \u003d new TeamMember(String.valueOf(i));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String input \u003d in.nextLine(); // eg. LessonA 1 19:00 2 12:30"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String[] scheduleDetails \u003d input.split(\" \", 5);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String scheduleName \u003d scheduleDetails[0];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            Integer startDay \u003d Integer.parseInt(scheduleDetails[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String startTime \u003d scheduleDetails[2];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            Integer endDay \u003d Integer.parseInt(scheduleDetails[3]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String endTime \u003d scheduleDetails[4];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            member.addBusyBlocks(scheduleName, startDay, startTime, endDay, endTime);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            myScheduleList.add(member);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        myScheduleHandler \u003d new ScheduleHandler(myScheduleList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        myMasterSchedule \u003d myScheduleHandler.getMasterSchedule();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        TextUI.printTimetable(myMasterSchedule);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        myScheduleHandler.printFreeTimings();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        TextUI.menuMsg();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "     * Main entry-point for the application."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        TextUI.introMsg();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        setMembersSchedule(in);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        while (!userInput.equals(\"5\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                botResponse(userInput);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            } catch (MoException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                TextUI.errorMsg(e);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                TextUI.timeOutOfRangeMsg();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                TextUI.invalidNumberMsg();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        TextUI.exitMsg();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "  "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        new MeetingOrganizer().run();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "matthewc97": 75,
      "lowxizhi": 4,
      "-": 7,
      "MeLoveCarbs": 45
    }
  },
  {
    "path": "src/main/java/MoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " * TESTING SUMMARY DOC."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class MoException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public MoException(String s) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MeLoveCarbs": 9
    }
  },
  {
    "path": "src/main/java/ScheduleHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import static common.Messages.MESSAGE_STARTENDTIME_WRONG_FORMAT;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import static common.Messages.MESSAGE_STARTENDDAY_OUT_OF_RANGE;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import static common.Messages.MESSAGE_INVALID_MEETING;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import static java.lang.System.out;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " * TESTING SUMMARY DOC."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class ScheduleHandler {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private final Boolean myScheduleBlocked \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private final Boolean myScheduleFree \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    private Boolean[][] masterSchedule \u003d new Boolean[7][48];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    // ArrayList of free slots in Integer type {startDay, startBlock, endDay, endBlock}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private ArrayList\u003cArrayList\u003cInteger\u003e\u003e freeBlocks \u003d new ArrayList\u003cArrayList\u003cInteger\u003e\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public ScheduleHandler(ArrayList\u003cTeamMember\u003e teamMemberList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            Arrays.fill(masterSchedule[i], myScheduleFree); // fill every 48 index of the 7 days with 0 initially"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        for (TeamMember t : teamMemberList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            Boolean[][] memberSchedule \u003d t.getSchedule();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            fillMasterSchedule(memberSchedule);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        updateFreeBlocks();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public Boolean[][] getMasterSchedule() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        return masterSchedule;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public void fillMasterSchedule(Boolean[][] s) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            for (int j \u003d 0; j \u003c 48; j++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                if (s[i][j]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    masterSchedule[i][j] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public void updateFreeBlocks() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            for (int j \u003d 0; j \u003c 48; j++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                if (masterSchedule[i][j] \u003d\u003d myScheduleFree) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                    boolean change \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                    boolean end \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                    final int startDay \u003d i;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                    final int startBlock \u003d j;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    while (masterSchedule[i][j] \u003d\u003d myScheduleFree) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                        if (change) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                            change \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                        if (i \u003d\u003d 6 \u0026\u0026 j \u003d\u003d 47) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                            end \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                        if (j \u003d\u003d 47) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                            change \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                            j \u003d 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                            i++;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                        j++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                    int endDay \u003d i;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                    int endBlock \u003d j - 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                    if (change) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                        endBlock \u003d 47;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                    if (end) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                        endBlock \u003d 47;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                        endDay \u003d 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                    ArrayList\u003cInteger\u003e freeSlot \u003d makeSlot(startDay, startBlock, endDay, endBlock);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                    this.freeBlocks.add(freeSlot);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        correctFirstAndLastSlotContinuation();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    private ArrayList\u003cInteger\u003e makeSlot(int startDay, int startBlock, int endDay, int endBlock) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        ArrayList\u003cInteger\u003e freeSlot \u003d new ArrayList\u003cInteger\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        freeSlot.add(startDay);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        freeSlot.add(startBlock);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        freeSlot.add(endDay);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        freeSlot.add(endBlock);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        return freeSlot;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    private void correctFirstAndLastSlotContinuation() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        int size \u003d this.freeBlocks.size();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        if (size \u003e 1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            Boolean isSunday \u003d this.freeBlocks.get(0).get(0).equals(this.freeBlocks.get(size - 1).get(2));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            Boolean isMidnight \u003d this.freeBlocks.get(0).get(1).equals(0) \u0026\u0026 this.freeBlocks.get(size - 1).get(3).equals(47);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            Boolean isSundayMidnightOverlap \u003d isSunday \u0026\u0026 isMidnight;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            if (isSundayMidnightOverlap) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                Integer newStartDay \u003d this.freeBlocks.get(size - 1).get(0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                Integer newStartBlock \u003d this.freeBlocks.get(size - 1).get(1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                Integer newEndDay \u003d this.freeBlocks.get(0).get(2);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                Integer newEndBlock \u003d this.freeBlocks.get(0).get(3);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                ArrayList\u003cInteger\u003e newFreeSlot \u003d makeSlot(newStartDay, newStartBlock, newEndDay, newEndBlock);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                this.freeBlocks.set(0,newFreeSlot);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                this.freeBlocks.remove(size - 1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public void printFreeTimings() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        System.out.println(\"Here are your free slots:\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        for (int i \u003d 0; i \u003c this.freeBlocks.size(); i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            String startDay \u003d getDayFromNumber(this.freeBlocks.get(i).get(0).intValue());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            LocalTime startTime \u003d getTimeFromBlock(this.freeBlocks.get(i).get(1).intValue(), \"START\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            String endDay \u003d getDayFromNumber(this.freeBlocks.get(i).get(2).intValue());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            LocalTime endTime \u003d getTimeFromBlock(this.freeBlocks.get(i).get(3).intValue(), \"END\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            System.out.println(startDay + \" \" + startTime + \" to \" + endDay + \" \" + endTime);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public String getDayFromNumber(int dayNum) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        String day;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        switch (dayNum) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            day \u003d \"Sunday\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            day \u003d \"Monday\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            day \u003d \"Tuesday\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            day \u003d \"Wednesday\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            day \u003d \"Thursday\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            day \u003d \"Friday\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            day \u003d \"Saturday\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            day \u003d \"\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public LocalTime getTimeFromBlock(int blockNum, String startOrEnd) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        int minuteTime \u003d 0;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        int hourTime \u003d 0;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        switch (startOrEnd) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        case \"START\":"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            hourTime \u003d blockNum / 2;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            if (blockNum % 2 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                minuteTime \u003d 30;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        case \"END\":"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            if (blockNum \u003d\u003d 47) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                hourTime \u003d 0;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                hourTime \u003d (blockNum + 1) / 2;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            if (blockNum % 2 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                minuteTime \u003d 30;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            minuteTime \u003d 0;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            hourTime \u003d 0;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        LocalTime myTime \u003d LocalTime.of(hourTime, minuteTime);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        return myTime;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public ArrayList\u003cArrayList\u003cInteger\u003e\u003e getFreeBlocks() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        return this.freeBlocks;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private Integer getBlocksFromStartTime(LocalTime startTime) throws MoException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        int minuteBlocks \u003d -1;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        int hourBlocks \u003d -1;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        switch (startTime.getMinute()) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            minuteBlocks \u003d 0;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        case 30:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            minuteBlocks \u003d 1;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            throw new MoException(MESSAGE_STARTENDTIME_WRONG_FORMAT);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        hourBlocks \u003d startTime.getHour() * 2;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return minuteBlocks + hourBlocks;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private Integer getBlocksFromEndTime(LocalTime endTime) throws MoException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        int minuteBlocks \u003d -1;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        int hourBlocks \u003d -1;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        switch (endTime.getMinute()) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            minuteBlocks \u003d 0;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        case 30:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            minuteBlocks \u003d 1;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            throw new MoException(MESSAGE_STARTENDTIME_WRONG_FORMAT);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        hourBlocks \u003d endTime.getHour() * 2;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return minuteBlocks + hourBlocks - 1;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public boolean isValidMeeting(Integer startDay, LocalTime startTime, Integer endDay, LocalTime endTime) throws MoException {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        if (!(startDay \u003e\u003d 0 \u0026\u0026 startDay \u003c\u003d 6) || !(endDay \u003e\u003d 0 \u0026\u0026 endDay \u003c\u003d 6)) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            throw new MoException(MESSAGE_STARTENDDAY_OUT_OF_RANGE);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        if ((startTime.getMinute() !\u003d 0 \u0026\u0026 startTime.getMinute() !\u003d 30) || (endTime.getMinute() !\u003d 0 \u0026\u0026 endTime.getMinute() !\u003d 30)) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            throw new MoException(MESSAGE_STARTENDTIME_WRONG_FORMAT);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        Integer startBlock \u003d getBlocksFromStartTime(startTime);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        Integer endBlock \u003d -1;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        if (endTime \u003d\u003d LocalTime.parse(\"00:00\")) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            endBlock \u003d 47;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            if (endDay \u003d\u003d 0) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                endDay \u003d 6;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                endDay \u003d endDay - 1;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            endBlock \u003d getBlocksFromEndTime(endTime);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        if (startDay.equals(endDay)) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            if (startBlock.equals(endBlock)) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                if (masterSchedule[startDay][startBlock] \u003d\u003d myScheduleBlocked) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    throw new MoException(MESSAGE_INVALID_MEETING);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            } else if (startBlock \u003c endBlock) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int i \u003d startBlock; i \u003c\u003d endBlock; ++i) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    if (masterSchedule[startDay][i] \u003d\u003d myScheduleBlocked) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                        throw new MoException(MESSAGE_INVALID_MEETING);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            } else if (startBlock \u003e endBlock) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int i \u003d startBlock; i \u003c\u003d 47; ++i) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    if (masterSchedule[startDay][i] \u003d\u003d myScheduleBlocked) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                        throw new MoException(MESSAGE_INVALID_MEETING);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int i \u003d startDay + 1; i \u003c\u003d 6; ++i) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    for (int j \u003d 0; j \u003c\u003d 47; ++j) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                        if (masterSchedule[i][j] \u003d\u003d myScheduleBlocked) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                            throw new MoException(MESSAGE_INVALID_MEETING);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d endDay - 1; ++i) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    for (int j \u003d 0; j \u003c\u003d 47; ++j) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                        if (masterSchedule[i][j] \u003d\u003d myScheduleBlocked) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                            throw new MoException(MESSAGE_INVALID_MEETING);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d endBlock; ++i) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    if (masterSchedule[endDay][i] \u003d\u003d myScheduleBlocked) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                        throw new MoException(MESSAGE_INVALID_MEETING);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        if (startDay \u003c endDay) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d startBlock; i \u003c\u003d 47; ++i) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                if (masterSchedule[startDay][i] \u003d\u003d myScheduleBlocked) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    throw new MoException(MESSAGE_INVALID_MEETING);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d startDay + 1; i \u003c\u003d endDay - 1; ++i) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int j \u003d 0; j \u003c 48; ++j) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    if (masterSchedule[i][j] \u003d\u003d myScheduleBlocked) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                        throw new MoException(MESSAGE_INVALID_MEETING);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d endBlock; ++i) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                if (masterSchedule[endDay][i] \u003d\u003d myScheduleBlocked) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    throw new MoException(MESSAGE_INVALID_MEETING);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        if (startDay \u003e endDay) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d startBlock; i \u003c\u003d 47; ++i) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                if (masterSchedule[startDay][i] \u003d\u003d myScheduleBlocked) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    throw new MoException(MESSAGE_INVALID_MEETING);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d startDay + 1; i \u003c\u003d 6; ++i) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int j \u003d 0; j \u003c\u003d 47; ++j) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    if (masterSchedule[i][j] \u003d\u003d myScheduleBlocked) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                        throw new MoException(MESSAGE_INVALID_MEETING);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d endDay - 1; ++i) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int j \u003d 0; j \u003c\u003d 47; ++j) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    if (masterSchedule[i][j] \u003d\u003d myScheduleBlocked) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                        throw new MoException(MESSAGE_INVALID_MEETING);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d endBlock; ++i) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                if (masterSchedule[endDay][i] \u003d\u003d myScheduleBlocked) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    throw new MoException(MESSAGE_INVALID_MEETING);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public void updateMasterSchedule(Integer startDay, LocalTime startTime, Integer endDay, LocalTime endTime) throws MoException {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        Integer startBlock \u003d getBlocksFromStartTime(startTime);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        Integer endBlock \u003d -1;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        if (endTime \u003d\u003d LocalTime.parse(\"00:00\")) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            endBlock \u003d 47;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            if (endDay \u003d\u003d 0) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                endDay \u003d 6;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                endDay \u003d endDay - 1;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            endBlock \u003d getBlocksFromEndTime(endTime);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        if (startDay.equals(endDay)) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            if (startBlock.equals(endBlock)) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                masterSchedule[startDay][startBlock] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            } else if (startBlock \u003c endBlock) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int i \u003d startBlock; i \u003c\u003d endBlock; ++i) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    masterSchedule[startDay][i] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            } else if (startBlock \u003e endBlock) {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int i \u003d startBlock; i \u003c\u003d 47; ++i) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    masterSchedule[startDay][i] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int i \u003d startDay + 1; i \u003c\u003d 6; ++i) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    for (int j \u003d 0; j \u003c\u003d 47; ++j) {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                        masterSchedule[i][j] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d endDay - 1; ++i) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    for (int j \u003d 0; j \u003c\u003d 47; ++j) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                        masterSchedule[i][j] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d endBlock; ++i) {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    masterSchedule[endDay][i] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        if (startDay \u003c endDay) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d startBlock; i \u003c\u003d 47; ++i) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                masterSchedule[startDay][i] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d startDay + 1; i \u003c\u003d endDay - 1; ++i) {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int j \u003d 0; j \u003c 48; ++j) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    masterSchedule[i][j] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d endBlock; ++i) {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                masterSchedule[endDay][i] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        if (startDay \u003e endDay) {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d startBlock; i \u003c\u003d 47; ++i) {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                masterSchedule[startDay][i] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d startDay + 1; i \u003c\u003d 6; ++i) {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int j \u003d 0; j \u003c\u003d 47; ++j) {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    masterSchedule[i][j] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d endDay - 1; ++i) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                for (int j \u003d 0; j \u003c\u003d 47; ++j) {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                    masterSchedule[i][j] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d endBlock; ++i) {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                masterSchedule[endDay][i] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 244,
      "lowxizhi": 167,
      "MeLoveCarbs": 22
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " * TESTING SUMMARY DOC."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MeLoveCarbs": 6
    }
  },
  {
    "path": "src/main/java/TeamMember.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import static common.Messages.MESSAGE_STARTENDDAY_OUT_OF_RANGE;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import static common.Messages.MESSAGE_STARTENDTIME_OUT_OF_RANGE;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import static common.Messages.MESSAGE_STARTENDTIME_WRONG_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import static java.lang.System.out;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " * TESTING SUMMARY DOC."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "public class TeamMember {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private final Boolean myScheduleBlocked \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private final Boolean myScheduleFree \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    private String memberName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    private Boolean[][] mySchedule; //String[7][48]; 7 days, separated into 30mins within 24 hours period."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    private String[][] myScheduleName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public TeamMember(String name) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        this.memberName \u003d name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        this.mySchedule \u003d new Boolean[7][48];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        this.myScheduleName \u003d new String[7][48];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            Arrays.fill(mySchedule[i], myScheduleFree); // fill every 48 index of the 7 days with 0 initially"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            Arrays.fill(myScheduleName[i], null);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public String addBusyBlocks(String meetingName, Integer startDay, String startTime, Integer endDay, String endTime) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        LocalTime localTimeStart;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        LocalTime localTimeEnd;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            localTimeStart \u003d LocalTime.parse(startTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            localTimeEnd \u003d LocalTime.parse(endTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            out.println(MESSAGE_STARTENDTIME_OUT_OF_RANGE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            return MESSAGE_STARTENDTIME_OUT_OF_RANGE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        Integer startBlock \u003d 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        Integer endBlock \u003d 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            startBlock \u003d getBlocksFromTime(localTimeStart);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            endBlock \u003d getBlocksFromTime(localTimeEnd);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        } catch (MoException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            out.println(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        if (!checkLegitDay(startDay) || !checkLegitDay(endDay)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            return MESSAGE_STARTENDDAY_OUT_OF_RANGE;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        if (!startDay.equals(endDay)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            int startDayCopy \u003d startDay; // prevent modifying param aruguments"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            for (int i \u003d startBlock; i \u003c 48; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                mySchedule[startDayCopy][i] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                myScheduleName[startDayCopy][i] \u003d meetingName;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            startDayCopy++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            while (startDayCopy !\u003d endDay) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                for (int i \u003d 0; i \u003c 48; i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    mySchedule[startDayCopy][i] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    myScheduleName[startDayCopy][i] \u003d meetingName;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                startDayCopy++;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            for (int i \u003d 0; i \u003c endBlock; i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                mySchedule[startDayCopy][i] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                myScheduleName[startDayCopy][i] \u003d meetingName;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            for (int i \u003d startBlock; i \u003c endBlock; i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                mySchedule[startDay][i] \u003d myScheduleBlocked;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                myScheduleName[startDay][i] \u003d meetingName;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return \"Success\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    boolean checkLegitDay(Integer day) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return day \u003e\u003d 0 \u0026\u0026 day \u003c\u003d 6;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public void deleteBusyBlocks(String meetingName) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            for (int j \u003d 0; j \u003c 48; j++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                if (myScheduleName[i][j].equals(meetingName)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    mySchedule[i][j] \u003d myScheduleFree;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    myScheduleName[i][j] \u003d null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public Integer getBlocksFromTime(LocalTime myTime) throws MoException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        int minuteBlocks \u003d -1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        int hourBlocks \u003d -1;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        switch (myTime.getMinute()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            minuteBlocks \u003d 0;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        case 30:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            minuteBlocks \u003d 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            throw new MoException(MESSAGE_STARTENDTIME_WRONG_FORMAT);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        hourBlocks \u003d myTime.getHour() * 2;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return minuteBlocks + hourBlocks;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        return this.memberName;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public Boolean[][] getSchedule() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "        return this.mySchedule;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowxizhi": 62,
      "MeLoveCarbs": 66
    }
  },
  {
    "path": "src/main/java/TextUI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import static common.Messages.MESSAGE_INVALID_NUMBER;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import static common.Messages.MESSAGE_STARTENDTIME_OUT_OF_RANGE;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import static java.lang.System.out;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " * TESTING SUMMARY DOC."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "public class TextUI {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public static void introMsg() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String logo \u003d \"  ___        _____                 __  .__                 ________                            \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            + \".__                       ___     \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            + \" / _ \\\\_/\\\\   /     \\\\   ____   _____/  |_|__| ____    ____   \\\\_____  \\\\_______  _________    ___\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            + \"_ |__|_______ ___________  / _ \\\\_/\\\\ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            + \" \\\\/ \\\\___/  /  \\\\ /  \\\\_/ __ \\\\_/ __ \\\\   __\\\\  |/    \\\\  / ___\\\\   /   |   \\\\\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            + \"_  __ \\\\/ ___\\\\__  \\\\  /    \\\\|  \\\\___   // __ \\\\_  __ \\\\ \\\\/ \\\\___/ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            + \"          /    Y    \\\\  ___/\\\\  ___/|  | |  |   |  \\\\/ /_/  \u003e /    |    \\\\  \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            + \"| \\\\/ /_/  \u003e __ \\\\|   |  \\\\  |/    /\\\\  ___/|  | \\\\/          \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            + \"          \\\\____|__  /\\\\___  \u003e\\\\___  \u003e__| |__|___|  /\\\\___  /  \\\\_______  /__ \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            + \"|  \\\\___  (____  /___|  /__/_____ \\\\\\\\___  \u003e__|             \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            + \"                  \\\\/     \\\\/     \\\\/             \\\\//_____/           \\\\/     \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            + \"/_____/     \\\\/     \\\\/         \\\\/    \\\\/                 \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"Welcome to....\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static void menuMsg() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"__________________________________________________________\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                + \"______________________________________________________________________\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"1) Schedule a new meeting.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"2) Delete a scheduled meeting.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"3) Edit a scheduled meeting.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"4) List all scheduled meetings.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"5) Exit application.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"__________________________________________________________\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                + \"______________________________________________________________________\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public static void exitMsg() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"Thank you for using MeetingOrganizer, goodbye!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public static void errorMsg(MoException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"OOPS!! \" + e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static void printTimetable(Boolean[][] mySchedule) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"      SUN MON TUE WED THU FRI SAT\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        for (int i \u003d 0; i \u003c 24; ++i) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            out.println(String.format(\"%04d\", (0000 + 100 * i)) + \" +---+---+---+---+---+---+---+\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            out.print(\"     |\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int j \u003d 0; j \u003c 7; ++j) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                out.print(\" \" + (mySchedule[j][2 * i] ? \"X\" : \" \") + \" |\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            out.println();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            out.println(\"     +---+---+---+---+---+---+---+\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            out.print(\"     |\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int j \u003d 0; j \u003c 7; ++j) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                out.print(\" \" + (mySchedule[j][2 * i + 1] ? \"X\" : \" \") + \" |\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            out.println();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"0000\" + \" +---+---+---+---+---+---+---+\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static void scheduleMeetingMsg() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"You have selected new scheduled meeting\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static void meetingNameMsg() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"What do you want to name your meeting?\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static void meetingDetailsMsg() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"Enter meeting details: \u003cStart Day\u003e \u003cStart Time\u003e \u003cEnd Day\u003e \u003cEnd Time\u003e\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static void meetingListSizeMsg(MeetingList myMeetingList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"You now have \" + myMeetingList.getMeetingListSize() + \" meetings in the list.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static void deleteMeetingMsg() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"Which meeting slot do you want to delete?\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static void editMeetingMsg() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"Which meeting slot do you want to edit?\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static void listMeetings() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"Here are all your meeting slots.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static void membersMsg() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"How many members are there in your team?\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static void enterScheduleMsg() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(\"Enter schedule of team members: \u003cSchedule Name\u003e \u003cStart Day\u003e \u003cStart Time\u003e \u003cEnd Day\u003e \u003cEnd Time\u003e\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static void timeOutOfRangeMsg() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(MESSAGE_STARTENDTIME_OUT_OF_RANGE);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static void invalidNumberMsg() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        out.println(MESSAGE_INVALID_NUMBER);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 83,
      "lowxizhi": 10,
      "MeLoveCarbs": 19
    }
  },
  {
    "path": "src/main/java/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "package common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " * TESTING SUMMARY DOC."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public static final String MESSAGE_STARTENDTIME_OUT_OF_RANGE \u003d \"Start and end time must be between of 00:00-23:30\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public static final String MESSAGE_STARTENDTIME_WRONG_FORMAT \u003d \"Start and end time must be in 30 minutes interval\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public static final String MESSAGE_STARTENDDAY_OUT_OF_RANGE \u003d \"Start and end day must be between 0 and 6\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static final String MESSAGE_INVALID_MEETING \u003d \"Range entered is not within free slots\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static final String MESSAGE_INVALID_NUMBER \u003d \"You have entered an invalid number\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 2,
      "MeLoveCarbs": 10
    }
  },
  {
    "path": "src/test/java/MeetingTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "public class MeetingTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        Meeting m \u003d new Meeting(\"CS2113T Meeting\", 1, LocalTime.parse(\"14:00\"), 1, LocalTime.parse(\"15:00\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        assertEquals(\"CS2113T Meeting, 1, 14:00, 1, 15:00\", m.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public void testStartEndTime_validTime_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        Meeting m \u003d new Meeting(\"CS2113T Meeting\", 2, LocalTime.parse(\"10:00\"), 2, LocalTime.parse(\"12:30\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        assertEquals(LocalTime.parse(\"10:00\"), m.getStartTime());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        assertEquals(LocalTime.parse(\"12:30\"), m.getEndTime());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 21
    }
  },
  {
    "path": "src/test/java/TeamMemberTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "// CHECKSTYLE:OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import static common.Messages.MESSAGE_STARTENDTIME_WRONG_FORMAT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import static common.Messages.MESSAGE_STARTENDDAY_OUT_OF_RANGE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import static common.Messages.MESSAGE_STARTENDTIME_OUT_OF_RANGE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "public class TeamMemberTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    ArrayList\u003cTeamMember\u003e myMembers;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        myMembers \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public void addBusyBlocks_outOfRange() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        int invalidOutOfRangeStartDay \u003d -1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        int validStartDay \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        int invalidOutOfRangeEndDay \u003d 9;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        int validEndDay \u003d 3;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String validStartTime \u003d \"08:30\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String invalidFormatStartTime \u003d \"08:35\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String validEndTime \u003d \"12:00\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String invalidOutOfRangeEndTime \u003d \"24:00\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String meetingName \u003d \"TEST_MEETING\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        myMembers.add(new TeamMember(\"TEST_MEMBER1\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String invalidFormatStartTime_Message \u003d myMembers.get(0).addBusyBlocks(meetingName, validStartDay, invalidFormatStartTime, validEndDay, validEndTime);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        assertEquals(invalidFormatStartTime_Message, MESSAGE_STARTENDTIME_WRONG_FORMAT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        myMembers.add(new TeamMember(\"TEST_MEMBER2\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String invalidOutOfRangeEndTime_Message \u003d myMembers.get(1).addBusyBlocks(meetingName, validStartDay, validStartTime, validEndDay, invalidOutOfRangeEndTime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        assertEquals(invalidOutOfRangeEndTime_Message, MESSAGE_STARTENDTIME_OUT_OF_RANGE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        myMembers.add(new TeamMember(\"TEST_MEMBER3\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String invalidOutOfRangeEndDay_Message \u003d myMembers.get(2).addBusyBlocks(meetingName, validStartDay, validStartTime, invalidOutOfRangeEndDay, validEndTime);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        assertEquals(invalidOutOfRangeEndDay_Message, MESSAGE_STARTENDDAY_OUT_OF_RANGE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        myMembers.add(new TeamMember(\"TEST_MEMBER4\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String invalidOutOfRangeStartDay_Message \u003d myMembers.get(3).addBusyBlocks(meetingName, invalidOutOfRangeStartDay, validStartTime, validEndDay, validEndTime);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        assertEquals(invalidOutOfRangeStartDay_Message, MESSAGE_STARTENDDAY_OUT_OF_RANGE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        myMembers.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lowxizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowxizhi": 14,
      "MeLoveCarbs": 38
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "matthewc97": 1
    }
  }
]
