[
  {
    "path": "docs/AboutUs.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siuhian"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ng Siu Hian | [Github](https://github.com/siuhian) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ananda Lye | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "btricec"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Beatrice Chan | [Github](https://github.com/btricec) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigellenl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nigelle Leo | [Github](https://github.com/nigellenl) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Riccardo Di Maio | [Github](https://github.com/rdimaio) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "btricec": 2,
      "rdimaio": 1,
      "siuhian": 1,
      "nigellenl": 1,
      "-": 4,
      "ananda-lye": 1
    }
  },
  {
    "path": "src/main/java/seedu/jikan/Activity.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "btricec"
        },
        "content": "package seedu.jikan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "btricec"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "btricec"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "btricec"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Represents an activity entry with a name and total time spent."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "public class Activity {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "btricec"
        },
        "content": "    protected String[] tags;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "btricec"
        },
        "content": "    protected LocalDateTime startTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "btricec"
        },
        "content": "    protected LocalDateTime endTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "btricec"
        },
        "content": "    protected Duration duration;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "btricec"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    protected String startTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    protected String endTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "btricec"
        },
        "content": "    */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructor for a new activity entry."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param name represents the name of the activity"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param startTime the time that the activity first started"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "btricec"
        },
        "content": "     * @param tags activity tags"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "btricec"
        },
        "content": "     * @param endTime the time that the activity ended"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "btricec"
        },
        "content": "    public Activity(String name, LocalDateTime startTime, LocalDateTime endTime, String[] tags) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "btricec"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "btricec"
        },
        "content": "        this.duration \u003d Duration.between(startTime, endTime);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructor to create activity when endTime is previously known"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * (i.e. when loading from jikan.storage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param name Name of activity."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param startTime Time at which activity started."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param endTime Time at which activity ended."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "btricec"
        },
        "content": "    public Activity(String name, LocalDateTime startTime, LocalDateTime endTime) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Ends an ongoing activity and updates the total time spent on the activity."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param endTime date and time when the activity ended"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return a confirmation message that the tracking of the activity has ended"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "btricec"
        },
        "content": "    public String endActivity(LocalDateTime endTime) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        return (\"You have ended \" + this.name + \" . Great job !\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "btricec"
        },
        "content": "    public Duration getDuration() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "btricec"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "btricec"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "btricec"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "btricec"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "btricec"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "btricec"
        },
        "content": "    public String[] getTags() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "btricec"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "btricec"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "btricec"
        },
        "content": "     * Converts the seedu.jikan.Activity object to data representation to be stored in a data file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * File format:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * name, startTime, endTime"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return String representing the Task object in comma-separated data format."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "btricec"
        },
        "content": "        String dataLine \u003d (this.name + \",\" + this.startTime + \",\" + this.endTime + \",\" + Arrays.toString(this.tags));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return dataLine;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "btricec": 35,
      "rdimaio": 36,
      "ananda-lye": 15
    }
  },
  {
    "path": "src/main/java/seedu/jikan/ActivityList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "btricec"
        },
        "content": "package seedu.jikan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "btricec"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "btricec"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "btricec"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "btricec"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "btricec"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Represents the list of activities."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "public class ActivityList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    ArrayList\u003cActivity\u003e activities;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "btricec"
        },
        "content": "    //int size;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructor for a new activity list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public ActivityList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        this.activities \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "btricec"
        },
        "content": "        //this.size \u003d activities.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "btricec"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Loads activityList from data file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataFile Data file to load from."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public ActivityList(File dataFile) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.activities \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        populateTaskList(dataFile);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "btricec"
        },
        "content": "    public Activity get(int i) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "btricec"
        },
        "content": "        return activities.get(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "btricec"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "btricec"
        },
        "content": "    public void add(Activity activity) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "btricec"
        },
        "content": "        activities.add(activity);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "btricec"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "btricec"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "btricec"
        },
        "content": "        return activities.size();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "btricec"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "btricec"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "btricec"
        },
        "content": "     * Prints the activityList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "btricec"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "btricec"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "btricec"
        },
        "content": "        System.out.println(\"Your completed activities:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "btricec"
        },
        "content": "        for (int i \u003d 0; i \u003c this.getSize(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "btricec"
        },
        "content": "            long durationInNanos \u003d (activities.get(i).duration).toNanos();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "btricec"
        },
        "content": "            String duration \u003d String.format(\"%02d:%02d:%02d\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "btricec"
        },
        "content": "                    TimeUnit.NANOSECONDS.toHours(durationInNanos),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "btricec"
        },
        "content": "                    TimeUnit.NANOSECONDS.toMinutes(durationInNanos)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "btricec"
        },
        "content": "                            - TimeUnit.HOURS.toMinutes(TimeUnit.NANOSECONDS.toHours(durationInNanos)),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "btricec"
        },
        "content": "                    TimeUnit.NANOSECONDS.toSeconds(durationInNanos)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "btricec"
        },
        "content": "                            - TimeUnit.MINUTES.toSeconds(TimeUnit.NANOSECONDS.toMinutes(durationInNanos)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "btricec"
        },
        "content": "            System.out.print(i + 1 + \". \" + activities.get(i).name + \" \" + duration);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "btricec"
        },
        "content": "            if (activities.get(i).tags !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "btricec"
        },
        "content": "                System.out.println(\" \" + Arrays.toString(activities.get(i).tags));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "btricec"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "btricec"
        },
        "content": "                System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "btricec"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "btricec"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Populates task list from file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataFile Data file to populate from."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private void populateTaskList(File dataFile) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Scanner dataScanner \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            while (dataScanner.hasNext()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                parseDataLine(dataScanner.nextLine());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            System.out.println(\"Error: data file not found. Could not load into the current session\u0027s task list.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "btricec"
        },
        "content": "     * Parses the current line in the data file to an seedu.jikan.Activity object."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param s String to parse."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private void parseDataLine(String s) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        List\u003cString\u003e strings \u003d Arrays.asList(s.split(\",\"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "btricec"
        },
        "content": "        String[] tags;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "btricec"
        },
        "content": "        // if there are tags"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "btricec"
        },
        "content": "        if (strings.size() \u003e 3) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "btricec"
        },
        "content": "            tags \u003d strings.get(3).split(\" \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "btricec"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "btricec"
        },
        "content": "            tags \u003d null;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "btricec"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // strings[0] \u003d name, strings[1] \u003d startDate, string[2] \u003d endDate"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "btricec"
        },
        "content": "        Activity e \u003d new Activity(strings.get(0), LocalDateTime.parse(strings.get(1)),"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "btricec"
        },
        "content": "                LocalDateTime.parse(strings.get(2)), tags);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        activities.add(e);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "btricec": 56,
      "rdimaio": 45,
      "ananda-lye": 9
    }
  },
  {
    "path": "src/main/java/seedu/jikan/Jikan.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "btricec"
        },
        "content": "package seedu.jikan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "btricec"
        },
        "content": "import seedu.jikan.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "btricec"
        },
        "content": " * Represents the seedu.jikan.Jikan time tracker."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "public class Jikan {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Constant file path of data file. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static final String DATA_FILE_PATH \u003d \"data/data.csv\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Storage object for data file. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "btricec"
        },
        "content": "    /** seedu.jikan.Activity list to store current tasks in. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static ActivityList activityList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public static final String GREETING \u003d \"___________________________________________\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            + \"   0101 01010101 01   01  .010.  101   01 \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            + \"   `10\u0027   `10\u0027   10 ,10\u0027 10\u0027 `10 101o  01 \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            + \"    01     01    01,01   01   01 0101o 10 \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            + \"    10     10    10`10   10ooo10 10 11o01 \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            + \"01. 01    .01.   01 `01. 01   01 01  1010 \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            + \"010101  01010101 10   10 10   10 10   110 \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            + \"___________________________________________\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "btricec"
        },
        "content": "            + \" Hello! I\u0027m seedu.jikan.Jikan\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            + \" What can I do for you today?\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            + \"-------------------------------------------\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "btricec"
        },
        "content": "     * Creates seedu.jikan.ActivityList and loads data from data file if the data file previously existed;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * otherwise, an empty task list is initialized."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static void createActivityList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        if (storage.loadFile()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            activityList \u003d new ActivityList(storage.dataFile);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            activityList \u003d new ActivityList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "  "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "btricec"
        },
        "content": "     * Main entry-point for the seedu.jikan.Jikan application."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        System.out.println(GREETING);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        storage \u003d new Storage(DATA_FILE_PATH);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        createActivityList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        Parser.parseUserCommands(in, activityList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "btricec": 8,
      "rdimaio": 21,
      "siuhian": 11,
      "ananda-lye": 14
    }
  },
  {
    "path": "src/main/java/seedu/jikan/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "btricec"
        },
        "content": "package seedu.jikan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "btricec"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "btricec"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": " * Represents the object which parses user input to relevant functions for the execution of commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "     * Parses user commands to relevant functions to carry out the commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "     * @param scanner scanner object which reads user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "     * @param activityList the list of activities"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public static void parseUserCommands(Scanner scanner, ActivityList activityList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        boolean exit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "btricec"
        },
        "content": "        Activity newActivity;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "btricec"
        },
        "content": "        LocalDateTime startTime \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "btricec"
        },
        "content": "        String[] tags \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        while (exit \u003d\u003d false) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "btricec"
        },
        "content": "            String[] tokenizedInputs \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            String instruction \u003d tokenizedInputs[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            switch (instruction) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                System.out.println(\"Bye! See you again.\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                exit \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case \"start\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                System.out.println(\"Started \" + tokenizedInputs[1] + \"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "btricec"
        },
        "content": "                if (tokenizedInputs.length \u003e 2) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "btricec"
        },
        "content": "                    tags \u003d Arrays.copyOfRange(tokenizedInputs, 2, tokenizedInputs.length);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "btricec"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "btricec"
        },
        "content": "                startTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case \"end\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "btricec"
        },
        "content": "                if (startTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "btricec"
        },
        "content": "                    System.out.println(\"You have not started any activity!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "btricec"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                    System.out.println(\"Ended \" + tokenizedInputs[1] + \"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "btricec"
        },
        "content": "                    newActivity \u003d new Activity(tokenizedInputs[1], startTime, LocalDateTime.now(), tags);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "btricec"
        },
        "content": "                    activityList.add(newActivity);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "btricec"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "btricec"
        },
        "content": "                activityList.printList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "btricec"
        },
        "content": "            case \"abort\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "btricec"
        },
        "content": "                startTime \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "btricec"
        },
        "content": "                System.out.println(\"You have aborted the current activity!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "btricec": 23,
      "ananda-lye": 39
    }
  },
  {
    "path": "src/main/java/seedu/jikan/Tag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "btricec"
        },
        "content": "package seedu.jikan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": " * Represents a tag object to tag activities."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public Tag(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "btricec": 2,
      "ananda-lye": 10
    }
  },
  {
    "path": "src/main/java/seedu/jikan/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "btricec"
        },
        "content": "package seedu.jikan.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Class that holds the path and File object for the current data file."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Path to current data file. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String dataFilePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** File object for current data file. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public File dataFile;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs a Storage object for the input file path."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataFilePath The data file\u0027s file path."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public Storage(String dataFilePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.dataFilePath \u003d dataFilePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        dataFile \u003d new File(dataFilePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Writes the input string to file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param s The input string."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws IOException If an error occurs while writing."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public void writeToFile(String s) throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        FileWriter fw \u003d new FileWriter(dataFilePath, true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        fw.write(s + System.lineSeparator());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    // Return true if file previously existed, false if it didn\u0027t exist (and it created a new one)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Loads the data file. Creates file and directories if data file did not previously exist."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return True if file previously existed (and was not created); False if file did not exist and was created."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public boolean loadFile() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Create data file if it does not exist already"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        if (!dataFile.exists()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            try  {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                createDataFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                return false; // false \u003d file didn\u0027t previously exist, so it was created"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                System.out.println(\"Error loading data file.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return true; // true \u003d file previously existed, and was not created"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Creates a file and any non-existing directories to that file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws IOException If an error occurs while creating the file or directories."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private void createDataFile() throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        dataFile.getParentFile().mkdirs(); // Create data directory (does nothing if directory already exists)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        dataFile.createNewFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "btricec": 1,
      "rdimaio": 69
    }
  },
  {
    "path": "src/main/java/seedu/jikan/storage/StorageHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "btricec"
        },
        "content": "package seedu.jikan.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Class containing useful functions for modifying the data file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class StorageHandler {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Removes the line whose index matches lineNumber from file at dataFilePath."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param lineNumber Index of line to remove."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataFilePath Path to data file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws IOException If an error occurs while writing the new list to file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public static void removeLine(int lineNumber, String dataFilePath) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Read file into list of strings, where each string is a line in the file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(dataFilePath), StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        int removedIndex \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Remove line from fileContent list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        removedIndex \u003d removeLineFromList(lineNumber, fileContent, removedIndex);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Rewrite list into data file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        Files.write(Paths.get(dataFilePath), fileContent, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Update indexes of subsequent lines"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        updateIndexes(fileContent, removedIndex, dataFilePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Removes line from a list based on its index. Returns index at which the line was removed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param lineNumber Index of line to remove."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param list List of strings containing lines, each with a starting index."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param removedIndex Index at which line was removed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return Index of the removed line."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static int removeLineFromList(int lineNumber, List\u003cString\u003e list, int removedIndex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Iterate through the lines"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            // If the current line matches the taskId"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            if (list.get(i).startsWith(String.valueOf(lineNumber))) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                // Remove current line"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                removedIndex \u003d i; // Store index of removed line to use as initial index of next loop"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                list.remove(i);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return removedIndex;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * After a line has been removed, updates subsequent indexes."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param fileContent List of strings from the data file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param removedIndex Index at which line was removed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataFilePath Path to data file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws IOException If an error occurs while writing to file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static void updateIndexes(List\u003cString\u003e fileContent, int removedIndex, String dataFilePath)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Update indexes of subsequent tasks (e.g. if you remove task 2, task 3 becomes task 2)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        for (int i \u003d removedIndex; i \u003c fileContent.size(); i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            // Get current comma separated string"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            String currString \u003d fileContent.get(i);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            String updatedString \u003d decrementIndex(currString, i);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            // Replace the line with the updated string"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            replaceLine(i + 1, updatedString, dataFilePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Decrements index at beginning of string by 1."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param currString String whose index must be decremented."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param i Index that the currString\u0027s index must be set to."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return Original string with its index decremented by 1."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static String decrementIndex(String currString, int i) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Split into different cells"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        List\u003cString\u003e cells \u003d Arrays.asList(currString.split(\",\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Change first cell (taskID) to new ID (taskID-1)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Task 3 becomes task 2, task 4 becomes task 3, until end of list"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        cells.set(0, String.valueOf(i));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Recombine the comma separated string"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return String.join(\",\", cells);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Replaces line in a data file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param lineNumber Index of the line to replace."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param newString String that replaces the original line."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataFilePath Path to data file."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws IOException If an error occurs while writing to file."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public static void replaceLine(int lineNumber, String newString, String dataFilePath) throws IOException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Read file into list of strings, where each string is a line in the file"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(dataFilePath), StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Replace line in the list of strings"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        replaceLineInList(lineNumber, newString, fileContent);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Write new list of strings to file"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        Files.write(Paths.get(dataFilePath), fileContent, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Replaces a line in a list of Strings."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param lineNumber Number at which line must be replaced."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param newString String that replaces the original string."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param list List of strings."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static void replaceLineInList(int lineNumber, String newString, List\u003cString\u003e list) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Iterate through the lines"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            // If the current line matches the taskId"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            if (list.get(i).startsWith(String.valueOf(lineNumber))) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                // Replace it with the new task string"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                list.set(i, newString);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "btricec": 1,
      "rdimaio": 138
    }
  },
  {
    "path": "src/test/java/seedu/jikan/ActivityListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "btricec"
        },
        "content": "package seedu.jikan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "btricec"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "btricec"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "btricec"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "btricec"
        },
        "content": "class ActivityListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "btricec"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "btricec"
        },
        "content": "    void getIndex() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "btricec"
        },
        "content": "        ActivityList activities \u003d new ActivityList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "btricec"
        },
        "content": "        String[] tags \u003d {\"tag1\", \"tag2\"};"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "btricec"
        },
        "content": "        Activity activity1 \u003d new Activity(\"Activity1\", LocalDateTime.parse(\"2020-01-01T08:00:00\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "btricec"
        },
        "content": "                LocalDateTime.parse(\"2020-01-01T10:00:00\"), tags);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "btricec"
        },
        "content": "        Activity activity2 \u003d new Activity(\"Activity2\", LocalDateTime.parse(\"2020-01-01T10:00:00\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "btricec"
        },
        "content": "                LocalDateTime.parse(\"2020-01-01T11:00:00\"), tags);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "btricec"
        },
        "content": "        Activity activity3 \u003d new Activity(\"Activity3\", LocalDateTime.parse(\"2020-01-01T05:00:00\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "btricec"
        },
        "content": "                LocalDateTime.parse(\"2020-01-01T07:00:00\"), tags);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "btricec"
        },
        "content": "        activities.add(activity1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "btricec"
        },
        "content": "        activities.add(activity2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "btricec"
        },
        "content": "        activities.add(activity3);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "btricec"
        },
        "content": "        assertEquals(activity2, activities.get(1));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "btricec"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "btricec"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "btricec": 27
    }
  },
  {
    "path": "src/test/java/seedu/jikan/ActivityTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "btricec"
        },
        "content": "package seedu.jikan;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "btricec"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "btricec"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "btricec"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "btricec"
        },
        "content": "class ActivityTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "btricec"
        },
        "content": "    String[] tags \u003d {\"tag1\", \"tag2\"};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "btricec"
        },
        "content": "    Activity activity \u003d new Activity(\"Activity\", LocalDateTime.parse(\"2020-01-01T08:00:00\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "btricec"
        },
        "content": "            LocalDateTime.parse(\"2020-01-01T10:00:00\"), tags);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "btricec"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "btricec"
        },
        "content": "    void getDuration() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "btricec"
        },
        "content": "        assertEquals(\"PT2H\", activity.getDuration().toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "btricec"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "btricec"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "btricec"
        },
        "content": "    void getName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "btricec"
        },
        "content": "        assertEquals(\"Activity\", activity.getName());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "btricec"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "btricec"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "btricec"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "btricec"
        },
        "content": "    void getTags() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "btricec"
        },
        "content": "        assertEquals(tags, activity.getTags());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "btricec"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "btricec"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "btricec": 29
    }
  }
]
