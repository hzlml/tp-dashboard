[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.0.1\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 1,
      "-": 40
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "![Cai Runze](https://avatars1.githubusercontent.com/u/38337361?s\u003d400\u0026u\u003d3644fcf48252da2966201ee1ca61b2eaa2c4f1a6\u0026v\u003d4) | Cai Runze | [Github](https://github.com/RenzoTsai) | [Portfolio](team/renzotsai.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "![Mok Kai Sheng Daryl](https://avatars1.githubusercontent.com/u/54903425?s\u003d400\u0026u\u003daa240e29abb0b621c97b385480747b8f58787f4b\u0026v\u003d4) | Daryl Mok| [Github](https://github.com/DeetoMok) | [Portfolio](team/deetomok.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "![Benny Chan](https://via.placeholder.com/100.png?text\u003dPhoto) | Benny Chan | [Github](https://github.com/bennychanya) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "![Cheng Tze Ning](https://avatars3.githubusercontent.com/u/59819947?s\u003d400\u0026u\u003d163b16c9b95c08a179071736f9401b5271bf718e\u0026v\u003d4) | Cheng Tze Ning | [Github](https://github.com/chengTzeNing) | [Portfolio](team/chengtzening.md)"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 1,
      "DeetoMok": 1,
      "RenzoTsai": 1,
      "bennychanya": 1,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "# Module Manager - Developer Guide  "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "By: `CS2113-T15-3` Since: `2020`  "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Table of Contents  "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1. [Introduction](#1-introduction)  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    1.1 [Purpose](#11-purpose)  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    1.2 [Scope](#12-scope)  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2. [Setting up](#2-setting-up)  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    2.1 [Prerequisites](#21-prerequisites)  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    2.2 [Setting up the project in your computer](#22-setting-up-the-project-in-your-computer)  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    2.3 [Verifying the setup](#23-verifying-the-setup)  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    2.4 [Configurations to do before writing code](#24-configurations-to-do-before-writing-code)  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "3. [Design](#3-design)  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    3.1 [Architecture](#31-architecture)  "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    3.2 [UI component](#32-ui-component)  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    3.3 [Logic component](#33-logic-component)  "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    3.4 [Model component](#34-model-component)  "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    3.5 [Storage component](#35-storage-component)  "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "4. [Implementation](#4-implementation)  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    4.1 [Addition](#41-addition)  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    . . 4.1.1 [Add to Semester feature](#411-add-to-semester-feature)  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 4.1.2 [Add to available feature](#412-add-to-available-feature)  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    4.2 [Deletion](#42-deletion)  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 4.2.1 [Delete from Semester feature](#421-delete-from-semester-feature)  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 4.2.2 [Delete from Available feature](#422-delete-from-available-feature)  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    4.3 [Others](#43-others)  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    . . 4.3.1 [Calculate CAP feature](#431-calculate-cap-feature)  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    . . 4.3.2 [Marking module as done](#432-marking-module-as-done)  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    . . 4.3.3 [Searching modules with keywords](#433-searching-modules-with-keywords)  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "5. [Documentation](#5-documentation)  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    5.1 [Written documentation](#51-written-documentation)  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    5.2 [Diagrams](#52-diagrams)  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "[Appendix A: Product Scope](#appendix-a-product-scope)  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "[Appendix B: User Stories](#appendix-b-user-stories)  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "[Appendix C: Glossary](#appendix-c-glossary)  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "[Appendix D: Instructions for Manual Testing](#appendix-d-instructions-for-manual-testing)  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "[Appendix E: Non-Functional Requirements](#appendix-e-non-functional-requirements)  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "# 1. Introduction"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 1.1 Purpose"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The document contains the specified architecture and software design specifications for the application, Module Manager."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 1.2 Scope"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "This describes the software architecture and software design requirements for Module Manager. "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "This guide is mainly for developers, designers and software engineers that are or going to work on Module Manager."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "# 2. Setting up"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 2.1 Prerequisites"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1. JDK `11`."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2. IntelliJ IDE."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 2.2 Setting up the project in your computer"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1. Fork this repository, and clone the fork repository to your computer"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "dialog first)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "3. Set up the correct JDK version for Gradle"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * If `JDK 11` is listed in the drop down, select it. Otherwise, click `New…` and select the directory where you "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    installed `JDK 11`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Click `OK`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "4. Click `Import Project`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "5. Locate the `build.gradle` file and select it. Click `OK`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "6. Click `Open as Project`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "7. Click `OK` to accept the default settings if prompted"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 2.3 Verifying the setup"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1. Run Module Manager to verify and try a few commands. Do refer to the user guide for a list of commands to try out."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2. Run the JUnit Tests/gradlew test command to ensure that all test case passes."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 2.4 Configurations to do before writing code"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "**Configuring the coding style**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Module Manager uses CheckStyle to check for code quality violations."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* To configure your project to use CheckStyle, add `id \u0027checkstyle\u0027` under plugins for your `build.gradle` file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Ensure that your CheckStyle toolVersion is 8.23 by adding `toolVersion \u003d \u00278.23\u0027` into your `build.gradle` file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Refer to Module Manager\u0027s `build.gradlew` file as a reference to set up CheckStyle correctly."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "**Getting started with coding**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "When you are ready to start coding, we recommend that you get a sense of the overall design by reading about "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Module Manager\u0027s architecture in the next section."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "# 3. Design"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "This section provides a high level overview of our application, Module Manager."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "## Design \u0026 Implementation"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 3.1 Architecture"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "![Architecture Diagram](https://github.com/DeetoMok/tp/raw/master/docs/images/Architecture.png)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The Architecture Diagram given above explains the high-level design of the Module Manager Application."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Module Manager consists of a main class called Duke responsible for"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The other components involved are:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`UI`: The user interface of the application"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Parser`: This class mainly handles the parsing and handling of user commands"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Command`: This class handles the type of command"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Person`: This class manages the data of the user in memory"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Controller`: This class determines what to do with the parsed input of the user "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Storage`: Reads data from, and writes data to, the hard disk"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.2 UI component"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "![Ui Diagram](https://github.com/DeetoMok/tp/raw/master/docs/images/Ui.png)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The `UI` component consists of a `Ui` class that stores all user interaction output data. "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "It displays all user interactions to the user based on the command line inputs received."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "*   Executes user commands using the `Logic` component"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.3 Logic component"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "![Object Diagram of Logic Component](https://github.com/DeetoMok/tp/raw/master/docs/images/Object_Diagram_of_Logic_Component.png)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The `Logic` component "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1. `Logic` uses the `Parser` class to parse the user command."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2. The parsed command is passed to `Controller` which then returns a specific command class "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "e.g. `AddCommand`, `FindCommand` etc. which is executed by the main class `Duke`."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "All these command classes inherits from the abstract `Command` class."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "3. The command execution can affect the Model (e.g. adding a module in ModuleList)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "4. The result of the command execution is passed back to the Ui."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "5. In addition, the command execution can also instruct the `Ui` to perform certain actions, "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "such as displaying help to the user."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.4 Model component"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "![Class Diagram of Model Component](https://github.com/DeetoMok/tp/raw/master/docs/images/Class_Diagram_of_Model_Component.png)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The `Model` component is responsible for serving as a boundary between the `Controller` component and `Storage` "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "component. "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The responsibilities of the `Model` component includes"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Storing the data in-memory during programme runtime. It stores all `SelectedModule` objects in an "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`ArrayList\u003cSelectedModule\u003e` in a `SemModulesList` class. This represents a semester of the user\u0027s module plan."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* All `ArrayList\u003cSelectedModule\u003e` is then stored in a `PriorityQueue\u003cSemModulesList\u003e` which contains `SemModulesList`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "in an ordered fashion. This class is called `SemesterList`, which represents the entire module plan of the user."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.5 Storage component"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* can save `personInfo` objects in csv format and read it back"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* can save the available module list in csv format and read it back"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* can save the semester list in csv format and read it back"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Given below are Class Diagram of StoragePersonInfo, StorageAvailableModulesList and StorageSemesterList"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "![PI](https://github.com/RenzoTsai/tp/blob/UpdateDG_UG/docs/UML%20img%20folder/StoragePerson.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "![AML](https://raw.githubusercontent.com/RenzoTsai/tp/UpdateDG_UG/docs/UML%20img%20folder/StorageAML.png)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "![SML](https://github.com/RenzoTsai/tp/blob/UpdateDG_UG/docs/UML%20img%20folder/StorageSML.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "# 4. Implementation"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "This section describes some details on how the features are being implemented. "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "All features can be broken down into 4 distinct functionalities - addition, deletion, searching and others."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Definition:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`SemModuleList` - An array list of `Module` objects, used to contain modules allocated to a specific semester. "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Signifies a semester in the user\u0027s module plan."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`SemesterList` - A priority queue of `SemModuleList`, used to contain `semModuleList` in an sorted order. "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Signifies all semesters of the user\u0027s module plan.  "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 4.1 Addition"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 4.1.1 `Add to Semester` feature "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The `Add to Semester` mechanism is facilitated by `AddtoSemCommand` which extends from an abstract class `Command`. "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "It allows `ModuleManager` to assign a module to a semester by adding the module to a "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`SemModulesList`. "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "This feature implements the following operations:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Given below is an example how the `Add to Semester` behaves at each step."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "##### Step 1:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The user launches the application for the first time. The `SemesterList` will initialize an empty "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`SemModulesList`."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "##### Step 2:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "When users enter an add to semester command, e.g `add id/CS2113 s/4 mc/4`, the command will be parsed in `Parser`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "which will return an `AddToSemCommand`. `AddToSemCommand` then calls `Command#execute(SemesterList semesterList,"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": " AvailableModulesList availableModulesList) `, in this context,"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`(AddToSemCommand#execute(SemesterList semesterList, AvailableModulesList availableModulesList))`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "##### Step 3:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`AddToSemCommand#execute()` then calls self method `AddToSemCommand#addModule()` which calls "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`AddToSemCommand#checkModuleExist(semesterList)` to check whether the selected module is already in the "
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "user\u0027s module plan (i.e:`semesterList`). "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "If the module is not in the list, `AddToSemCommand#addModule()` will check whether there is a semester list"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "(i.e:`semesterModulesList`) whose name is equal to the module\u0027s semester name. "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "If the semester list exists, the module will be added to the list. "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "If not, `AddToSemCommand#addModule()` will create a new semester list and then add this module to the new list. "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Finally, this new semester list will be added to `semesterList`."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "#### Step 4:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`AddToSemCommand#execute()` calls `Ui.showAddedToSemMessage(selectedModule.announceAdded())` to tell the user that the"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "command has been executed."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "The following sequence diagram shows how the `Add to Semester` operation works:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "![Add to Semester](https://raw.githubusercontent.com/AY1920S2-CS2113-T15-3/tp/master/docs/UML%20img%20folder/Sequence%20Diagram%20of%20Add%20to%20Semester.png)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 4.1.2 `Add to available` feature"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The `Add to available` mechanism is facilitated by `AddtoAvailableCommand` which extends from an abstract class "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Command`. "
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "It allows `ModuleManager` to add a module to the `AvailableModulesList` so that users may access its data or add it"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "to their module plan in the future. "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "This feature implements the following operations:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Given below is an example how the `Add to available` behaves at each step."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "##### Step 1:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "When users enter an add to available command, "
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "e.g `add id/CS1231 n/Discrete Structures mc/4 pre/`, the command will be parsed in `Parser`"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "which will return its parsed Strings to `Controller`. `Controller` takes in the Strings from `Parser` and creates"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "a `AddToAvailableCommand` object, which then calls `Command#execute(SemesterList semesterList,"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": " AvailableModulesList availableModulesList) `, in this context,"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`(AddToAvailableCommand#execute(SemesterList semesterList, AvailableModulesList availableModulesList))`"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "##### Step 2:"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`AddToAvailableCommand#execute()` then calls self method `AddToAvailableCommand#addModule()` which iterates through"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "the availableModulesList to check if there exists a module which has the same name, same id, or both."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "If there is already a module with the same name and id, the program throws a `RuntimeException` to tell the user "
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "that the module is already in the list."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "If only the name attribute of the module exists, the id attribute will be updated, and vice versa."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "If there is no module that shares the name and id of the newly added module, the `newModule` object will be passed "
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "into `AvailableModulesList#add()` method to add it into the `availableModulesList`. "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Step 3:"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Finally, the `AddToAvailableCommand#checkSemesterList()` method is called to check if the `newModule` object is also"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "in the semesterList. If it exists, both its name and id attributes are updated."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 4.2 Deletion"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 4.2.1 `Delete from Semester` feature"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The `Delete from Semester` mechanism is facilitated by `DeleteFromSemCommand`, which extends from `DeleteCommand`."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Whereas `DeleteCommand` extends from the abstract class `Commmand`."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "It allows `ModuleManager` to delete a module from a `SemModulesList`."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "By doing so, the following operations are carried out:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "##### Step 1:"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "When a user enters a delete from semester command, e.g `delete id/IS4241 s/4`, this command is being parsed in `Controller`."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Controller` then returns a `DeleteFromSemCommand`, which calls "
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Command.execute(SemesterList semesterList, AvailableModulesList availableModulesList)`, in this context,"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`DeleteFromSemCommand#execute(SemesterList semesterList, AvailableModulesList availableModulesList)`."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "##### Step 2:"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`DeleteFromSemCommand.execute` then calls its own method `checkModuleExistInCorrectSem(selectedModulesList)`."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`checkModuleExistInCorrectSem(selectedModulesList)` returns a boolean value regarding whether there is such "
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "a module in the semester stated by the user."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "If the module does not exist in that semester, a `RuntimeException` is thrown."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Otherwise, it will run through the `semModulesList` in the `selectedModulesList` to find the semester indicated."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "It then calls a method of `SemModulesList`, `getModule(moduleIdentifier)`, which returns the corresponding module,"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "based on either the `moduleId` or `moduleName`."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Following, it then calls another method of `SemModulesList`, `remove(module)`, which removes the corresponding module."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "##### Step 3:"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`DeleteFromSemCommand.execute` finally calls `Ui.showDeleteFromSemMessage(String.format("
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "\"Module %s has been deleted from semester %s\", moduleIdentifier, yearSemester));`"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "This tells the user the module that has been deleted from the corresponding semester."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "The sequence diagram below shows the mechanics of `DeleteFromSemCommand`:"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "![SequenceDiagram-DeleteFromSemCommand](https://github.com/chengTzeNing/tp/blob/DG-and-UG/docs/images/SequenceDiagram_DeleteFromSemCommand.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 4.2.2 `Delete from Available` feature"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The `Delete from Available` mechanism is facilitated by `DeleteFromAvailableCommand`, "
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "which extends from `DeleteCommand`. Whereas `DeleteCommand` extends from the abstract class `Commmand`."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "It allows `ModuleManager` to delete a module from a `AvailableModulesList`."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "By doing so, the following operations are carried out:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "##### Step 1:"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "When a user first inputs a `delete` command, eg. `delete id/CS1010`, this command is being parsed in `Controller`."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Controller` then returns a `DeleteFromAvailableCommand`, which follows to call "
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Command.execute(SemesterList semesterList, AvailableModulesList availableModulesList)`, in this context,"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`DeleteFromAvailableCommand#execute(SemesterList semesterList, AvailableModulesList availableModulesList)`."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "##### Step 2:"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`DeleteFromAvailableCommand` then proceeds to call its own method `deleteModule(SemesterList selectedModulesList, "
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "AvailableModulesList availableModulesList)`."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "In this method, it first calls another method `checkIfModuleAvailable(AvailableModulesList availableModulesList)`,"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "which returns a `boolean` value about whether the module inputted is in the list of available modules to choose from."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "If the module is not found in the list of the available modules, it proceeds to throw a `RunTimeException`."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "##### Step 3:"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Or else, another method in `DeleleFromAvailableCommand`,"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`checkIfIsPreReq(Module moduleToCheck, AvailableModulesList availableModulesList)` is called."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "If the module selected is a prerequisite to other modules, it will throw a `RuntimeException`."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "##### Step 4:"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Or else, `DeleteFromAvailableCommand` then proceeds to call the method `Ui.showDeleteFromAvailableMessage(String module)`."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "This tells the user that the module has been deleted from the list of available modules."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "##### Step 5:"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "It will call another method `checkIfInModulePlan(String moduleId, SemesterList selectedModulesList)`"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "This checks if the module is in the user\u0027s module plan."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "If the module is in the user\u0027s module plan, the module will be deleted from the module plan."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`DeleteFromAvailableCommand` will then proceed to call the "
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Ui.showDeleteFromAvailableFollowUpMessage(String module)` method."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "This show the user that on top of deleting the module from the list of available modules,"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "it has also been deleted from the user\u0027s module plan."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "The sequence diagram below shows the mechanics of `DeleteFromAvailableCommand`:"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "![SequenceDiagram_DeleteFromAvailableCommand](https://raw.githubusercontent.com/chengTzeNing/tp/edit-DG/docs/images/SequenceDiagram_DeleteFromAvailableCommand.png)"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "## 4.3 Others"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "### 4.3.1 `Calculate CAP` feature"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The Calculate CAP mechanism is executed by `CalculateCapCommand`.  "
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`CalculateCapCommand` is extended from `Command` and this implementation calculates the CAP using completed "
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`SelectedModule` stored in `SemModulesList`."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Given below is the behaviour of the Calculate CAP mechanism at each step:"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Step 1: "
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "User launches the application. `SelectedModules` are added to `SemModuleList` through either of the following methods:"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1) Imported from `semesterList.csv` using `StorageSemesterList.load()`"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2) Added using `add id/ID s/SEMESTER mc/MODULE_CREDIT` command"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Step 2:"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "User executes `CAP` command to view his own CAP. The `CAP` commands is parsed through `Parser`, which would then return "
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`CalculateCapCommand()`. `CalculateCapCommand.execute()` is then called."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Step 3:"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`CalculateCapCommand.execute()` will call `CalculateCapCommand.calculateCap(SemesterList semesterList)`, which will"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "calculate CAP by looking for all the completed `SelectedModules` stored within `SemModuleList`, which are stored within "
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`SemesterList`. It will then assign a `double` type ranging from 0.00 to 5.00 to `Person.totalCap`."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Step 4:"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "After the CAP is assigned to `Person.totalCap`, `Person.totalCap` is then called and formatted using `DecimalFormat` "
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "into a `String`"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "with a pattern of `#.00`. `Ui.showcap(cap)` is called to display the user\u0027s cap using the formatted `String`."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The following diagram shows how the Calculate CAP operation works:"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "![Calculate CAP feature](https://github.com/bennychanya/tp/blob/master/CalculateCap.png?raw\u003dtrue)"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "### 4.3.2 Marking module as done"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The Marking as done mechanism is executed by `MarkAsDoneCommand`."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`MarkAsDoneCommand` is extended from the abstract class `Command`, and this implementation marks the module that has"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "been added to a `SemModuleList` in the `SemesterList` as done, and updates the respective grade to the `Module` object.  "
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Given below is the behaviour of the Marking module as done mechanism at each step:"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Step 1:"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "User launches the application. `SelectedModules` are added to `SemModuleList` through either of the following methods:"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1) Imported from `semesterList.csv` using `StorageSemesterList.load()`"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2) Added using `add id/ID s/SEMESTER mc/MODULE_CREDIT` command"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Step 2:"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "User enters a mark as done command e.g. `done id/CS2113 g/A+ `. The command will be parsed in `Parser`, "
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "which will return its parsed Strings to `Controller`. `Controller` takes in the Strings from `Parser` and creates"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "a `MarkAsDoneCommand` object which then calls "
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Command.execute(SemesterList semesterList, AvailableModulesList availableModulesList)`, in this context, "
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`(MarkAsDoneCommand#execute(SemesterList semesterList, AvailableModulesList availableModulesList))`."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Step 3:"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`MarkAsDoneCommand#execute()` then calls self method `MarkAsDone#markAsDone()` which iterates through the "
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`semesterList` to check all `SemModulesList` and compare module name and id to see if the module that has"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "been marked as done exists in the `semesterList`. "
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "If the module exists in the list, the grade of the module will be passed to the `Module` object to update the grade"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "attribute, and the `isDone` attribute of the module will be updated to be `true`. "
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "If the module does not exist in the list, a `RuntimeExcption` will be thrown to tell the user that the module does not"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": " exist in the user\u0027s module plan."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "![Mark As Done Sequence Diagram](https://github.com/DeetoMok/tp/raw/master/docs/images/Mark_As_Done_Sequence_Diagram.png)"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "### 4.3.3 Searching modules with keywords"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "The `FindCommand` allows users to look up commands using keywords. It then displays a list of related modules in"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "the module plan and the list of available modules."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "#### Step 1:"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "When a user enters the `find` keyword, the command is being parsed in `Controller`."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Controller` then returns a `FindCommand`, which proceeds to call "
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Command.execute(SemesterList semesterList, AvailableModulesList availableModulesList)`, or in this context,"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`FindCommand.execute(SemesterList semesterList, AvailableModulesList availableModulesList)`."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "#### Step 2:"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "In the `execute(SemesterList semesterList, AvailableModulesList availableModulesList)` method, it first calls another"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "method in the `FindCommand` class, "
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`generateResult(SemesterList selectedModulesList, AvailableModulesList availableModulesList)`. Within this method, it"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "first runs through the module plan to look for modules that contain the corresponding keyword."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "After this is done, it searches the list of available modules for any relevant modules. "
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "The list of relevant modules from the module plan and the list of available modules is then converted into a `String`"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "object and passed back to the `execute(semesterList, availableModulesList)` method."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "#### Step 3:"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Finally, with the `String` of the list of relevant modules, the `Ui.showFindMessage(result)` is called, and the list of "
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "relevant modules from the both the module plan and the list of available modules is printed out."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "The sequence diagram below shows the mechanics of `FindCommand`:"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "![SequenceDiagram_FindCommand](https://github.com/chengTzeNing/tp/blob/DG-and-UG/docs/images/SequenceDiagram_FindCommand.png)"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "# 5. Documentation"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 5.1 Written documentation  "
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The user and developer guide are written and formatted using MarkDown."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 5.2 Diagrams"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Diagrams are drawn and edited using the tool [draw.io](https://app.diagrams.net/). "
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The tool provides support for a wide range of UML diagrams, "
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "such as class, object and sequence diagrams."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## Appendix A: Product Scope"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* A computer science undergraduate of NUS with a need to manage modules"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Prefer desktop apps over other types"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Able to type quickly"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Prefers to control apps with typing rather than a mouse"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Comfortable using Command Line Input apps"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Manage and plan modules quickly with CLI, faster than a mouse or GUI driven app "
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## Appendix B: User Stories"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "|Priority| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "|***|User|View my study plan|Keep track of what is my study plan when I forget about it|"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "|***|User|Add and assign modules to different semesters|Update my study plan|"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "|***|User|Add modules to available module list|Add the module to my study plan when I plan to in the future|"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "|***|User|Delete study plans in specific semesters|Update my study plan according to my new plan in mind|"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "|***|New user|see usage instructions|Refer to instructions when I forgot how to use the App|"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "|***|User|Mark module as done|Update my study plan according to modules that I have completed|"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "|**|User|Calculate cap|Check my current cap based on modules I have completed|"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "|**|User|find a module by name or module code|Locate a module and its module code without having to go through all the "
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "modules|"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## Appendix C: Glossary"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "**Mainstream OS** - Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## Appendix D: Instructions for Manual Testing"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The following is a summary of all the commands in Module Manager, and some examples of input. "
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The commands are organised into sections, each relating to a particular feature. "
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "There is already some data preloaded into the ArchDuke jar file. "
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "You may follow the steps in numerical order to test all the features of ArchDuke."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### Command Summary and Testing Instructions"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Module Commands"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1. Adding Module to available module list  "
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Use the following commands to add a module to the available module list  "
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `add id/[module code] s/[semester] mc/[credit] `  "
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        or  "
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `add n/[module name] s/[semester] mc/[credit]`  "
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        or  "
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `add id/[module code] n/[module name] s/[semester] mc/[credit]`  "
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2. Adding Module to module plan  "
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Use this command to add a module from the available module list to your module plan  "
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `add id/[module code] s/[semester] mc/[credit]`  "
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "          or  "
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `add n/[module name] s/[semester] mc/[credit]`  "
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "          or  "
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `add id/[module code] n/[module name] s/[semester] mc/[credit] ` "
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "3. Deleting Module from module plan  "
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Use any of the following commands to delete a module from your module plan  "
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `delete id/[module code] s/[semester]`  "
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "          or  "
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `delete n/[module name] s/[semester]  `  "
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        "
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "4. Deleting Module from available module list  "
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Use any of the following commands to delete a module from the available module list  "
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `delete id/[module code]  `"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        or  "
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `delete n/[module name]  `"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        "
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "5. Marking Module as done  "
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Use this command to mark a module that has been added to your module plan as done  "
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `done n/[module name] g/[grade]  `"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "          or  "
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `done id/[module code] g/[grade]  `  "
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        "
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "6. View module plan  "
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Use this command to view your current module plan  "
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `view`  "
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        "
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "7. View done modules  "
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Use this command to view modules that are done  "
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `view /dm`  "
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        "
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "8. View CAP  "
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Use this command to view your current cap  "
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `CAP`  "
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    "
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "9. View Completed credits  "
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Use this command to view the number of module credits you have completed  "
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `view /cc`  "
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    "
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "10. Clear the module plan  "
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Use this command to clear your current module plan  "
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `clear`  "
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        "
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "11. Exit the Program  "
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Use this command to exit the program  "
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `bye`  "
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        "
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "12. Display help  "
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Use this command to display help message  "
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        * `help`  "
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## Appendix E: Non Functional Requirements"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1. Should work on any mainstream OS as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2. Should be able to hold up to 1000 modules in the available module list without a noticeable sluggishness in"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": " performance for typical usage."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands)"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "  should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "4. Should be secure, to prevent unauthorised modification"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "5. Should be smooth and fast to view and edit  "
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        "
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 95,
      "DeetoMok": 388,
      "RenzoTsai": 22,
      "bennychanya": 5,
      "-": 24
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "# Personal Module Manager"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Personal Module Manager is a software that tracks the number of modular credits, modules taken and modules required "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "for its user to graduate. The software is for NUS Students who want to plan their modules per semester in an easy way "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "and it is optimized for those who want to type fast with CLI."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 5,
      "-": 5
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "# Module Manager - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "By: `CS2113-T15-3` Since: `2020`  "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Table of Contents  "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1. [Introduction](#1-introduction)  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2. [Quick Start](#2-quick-start)  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "3. [Features](#3-features)  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    3.1 [Command Format](#31-command-format)  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    3.2 [Adding modules](#32-adding-modules-add)  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.2.1 [Adds a specific module to a specific semester](#321-adds-a-specific-module-to-a-specific-semester)  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.2.2 [Based on module code](#322-based-on-module-code)  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.2.3 [Based on module name](#323-based-on-module-name)  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.2.4 [Based on module code and name](#324-based-on-module-code-and-name)  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.2.5 [Adds a specific module to available module list](#325-adds-a-specific-module-to-available-module-list)  "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    3.3 [Deleting module](#33--deleting-module-delete)  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.3.1 [Delete a specific module from a semester in module plan](#331-delete-a-specific-module-from-a-semester-in-module-plan)  "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . . 3.3.1.1 [Based on module code](#3311-based-on-module-code)    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . . 3.3.1.2 [Based on module name](#3312-based-on-module-name)  "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.3.2 [Delete a specific module from available module list](#332-delete-a-specific-module-from-available-module-list)  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . . 3.3.2.1 [Based on module name](#3321-based-on-module-name)  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . . 3.3.2.2 [Based on module code](#3322-based-on-module-code)  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    3.4 [Marking as done](#34-marking-as-done-done)  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.4.1 [Based on module code](#341-based-on-module-code)  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.4.2 [Based on module name](#342-based-on-module-name)  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    3.5 [Viewing modules](#35-viewing-modules-view)  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.5.1 [Viewing all available modules](#351-viewing-all-available-modules)  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.5.2 [Viewing done modules](#352-viewing-done-modules)  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.5.3 [Viewing module plan](#353-viewing-module-plan)  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.5.4 [Viewing completed modules\u0027 credit](#354-viewing-completed-modules-credits)  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    . . 3.5.5 [Viewing CAP](#355-viewing-cap)  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    3.6 [Find](#36-find)  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    3.7 [Clear](#37-clear)  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    3.8 [Help](#38-help)  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    3.9 [Exit](#39-exit)  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "4. [FAQ](#4-faq)  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "5. [Command Summary](#5-command-summary)  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Personal Module Manager is a software that tracks the number of modular credits, modules taken and modules required "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "for its user to graduate. The software is for NUS Students who want to plan their modules per semester in an easy way "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "and it is optimized for those who want to type fast with CLI."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Interested? Jump to the Section 2, “Quick Start” to get started. Enjoy!"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "2. Down the latest version of `Duke` from [here](https://github.com/AY1920S2-CS2113-T15-3/tp/releases)."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 3. Features"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 3.1 Command Format"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "- Words in `[XXX]` are the parameters to be supplied by the user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- `[module code]` is to be entered in alpha-numeric uppercase characters i.e.`CS2113` （case insensitive)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "- `[module name]` is to be entered in alpha-numeric characters i.e.`Software Engineering \u0026 Object-Oriented Programming`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- `[semester]` is to be entered in numeric characters between 1-10 i.e.`5`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- `[credit]` is to be entered in numeric characters between 1-10 i.e. `4`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- `[grade]` is to be entered in alpha characters i.e. `A+` （case insensitive）"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "For example: in `​add id/[module code] s/[semester] mc/[credit]`, `[module code]` is the parameter of a specific "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "module’s code which can be used as `add id/CS2113 s/4 mc/4`."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 3.2 Adding modules: add"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "You can add a module to a semester or to the list of available modules."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.2.1 Adds a specific module to a specific semester."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "You can do so using the module code or the module name."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "The module to be added could be in the existing list of available modules or not.\\"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "If you add a module which is in the list of available modules, then when you input code or name, the output"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "will show both code and name of this module."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "##### 3.2.2 Based on module code"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Format: `add id/[module code] s/[semester] mc/[credit]`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example:​ `add id/IS4241 s/4 mc/4`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Okay! I have added this module to your semester\u0027s module list:`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`ID: IS4241 | Module Credit: 4 | Sem: Y2S2`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "##### 3.2.3 Based on module name"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Format: `add n/[module name] s/[semester] mc/[credit]`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example:​ `add n/Social Media Network Analysis s/3 mc/4`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example of expected output:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Okay! I have added this module to your semester\u0027s module list:`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`Name: Social Media Network Analysis | Module Credit: 4 | Sem: Y2S1`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "##### 3.2.4 Based on module code and name"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Format: `add id/[module code] n/[module name] s/[semester] mc/[credit]`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Example:​ `add id/IS4241 n/Social Media Network Analysis s/3 mc/4`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Example of expected output:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`Okay! I have added this module to your semester\u0027s module list:`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`ID: IS4241 Name: Social Media Network Analysis | Module Credit: 4 | Sem: Y2S1`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.2.5 Adds a specific module to available module list. "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Format: `add id/[module code] n/[module name] mc/[module credit] pre/[pre requisites]`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example: `add id/IS4241 n/Social Media Network Analysis mc/4 pre/CS1010 IS1103`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example of expected output:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Okay! I have added this module to the available modules to choose from:`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`ID: IS4241 Name: Social Media Network Analysis | Modular Credit: 4 | Prerequisites: CS1010`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example:  `add id/GET1018 n/Mathemetics of Games mc/4 pre/`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example of expected output:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Okay! I have added this module to the available modules to choose from:`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`ID: GET1018 Name: Mathemetics of Games | Modular Credit: 4`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 3.3  Deleting module: delete"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "You can delete a module from a semester of your module plan or from the list of available modules."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.3.1 Delete a specific module from a semester in module plan"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "You can do so by using the module code or the module name."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The module to be deleted must be in your module plan."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": " "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.3.1.1 Based on module code"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Format: `delete id/[module code] s/[semester]`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example:​ `delete id/IS4241 s/4`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Okay, this module has been deleted from the corresponding semester`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Module IS4241 has been deleted from semester Y2S2`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.3.1.2 Based on module name"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Format: `delete n/[module name] s/[semester]`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example:​ `delete n/Discrete Structure s/4`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Okay, this module has been deleted from the corresponding semester`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Module Discrete Structure has been deleted from semester Y2S2`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.3.2 Delete a specific module from available module list"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.3.2.1 Based on module name"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Format: `delete id/[module code]`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example:​ `delete id/IS4241`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Okay, this module has been deleted from the list of available modules`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`ID: IS4241 Name: Social Media Network Analysis | Modular Credit: 4`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.3.2.2 Based on module code"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Format: `delete n/[module name]`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example:​ `delete n/Social Media Network Analysis`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Okay, this module has been deleted from the list of available modules`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`ID: IS4241 Name: Social Media Network Analysis | Modular Credit: 4`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 3.4 Marking as done: done"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Marks a module as done to show that it has been completed."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "This can be done based on a module code or module name."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.4.1 Based on module code"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Format:​ `done id/[module name] g/[grade]`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example:​ `done id/Software Engineering \u0026 Object-Oriented Programming g/A+`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example of expected output:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Okay, I\u0027ve marked the module as done!`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.4.2 Based on module name"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Format: `done n/[module code] g/[grade]`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Example:​ `done n/CS2113 g/CU`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example of expected output:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Okay, I\u0027ve marked the module as done!`"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 3.5 Viewing modules: view"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.5.1 Viewing all available modules"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Display all the available modules you can choose from."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Format:​ `view`"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example of expected output:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Okay! Here are your available modules:`"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`---------------------------------------------------`"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`|  01 | CS1010   | Programming Methodology                                       | 4             | None                    |`"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`|  02 | CS2030   | Programming Methodology II                                    | 4             | CS1010                  |`"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`|  03 | CS2040   | Data Structures and Algorithms                                | 4             | CS1010                  |`"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.5.2 Viewing done modules"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Display all the modules that you have completed."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Format: ​`view /dm`"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example of expected output:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Okay! Here are your completed modules:`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `Y2S1`"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`1.[✓] ID: CS1010 Name: Programming Methodology | Module Credit: 4 | Sem: Y2S1 | Grade: A+`"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `Y2S2`"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `1.[✓] ID: IS4241 Name: Social Media Network Analysis | Module Credit: 4 | Sem: Y2S2 | Grade: A-`"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.5.3 Viewing module plan"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Display your module plan, categorised based on the semester that the module was allocated to."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Format:​ `view /mp`"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example of expected output:"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Okay! Here is your module plan:`"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `Y2S1`"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `1.[✓] ID: CS1010 Name: Programming Methodology | Module Credit: 4 | Sem: Y2S1 | Grade: A+`"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `2.[✗] ID: CS1231 Name: Discrete Structures | Module Credit: 4 | Sem: Y2S1`"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `Y2S2`"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `1.[✗] ID: CS2113 Name: Software Engineering \u0026 Object-Oriented Programming | Module Credit: 4 | Sem: Y2S2`"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `2.[✗] ID: IS4241 Name: Social Media Network Analysis | Module Credit: 4 | Sem: Y2S2`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.5.4 Viewing completed modules\u0027 credits"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Display the number of modular credits you have completed."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Format: ​`view /cc`"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example of expected output:"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`You have completed this amount of credits:`"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `4`"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.5.5 Viewing cap "
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Display your current CAP."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Format: `CAP`"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example of expected output:"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Your current CAP is:`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`4.75`"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "### 3.6 Find"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Looks up the module plan and list of available modules for modules that contain the keyword inputted."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Format: `find [keyword]`"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Example: \u0027find cs\u0027"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Okay, this is the list of related modules:`"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `List of selected modules:`"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `[✓] ID: CS1010 Name: Programming Methodology | Module Credit: 4 | Sem: Y2S1 | Grade: A+`"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `[✗] ID: CS1231 Name: Discrete Structures | Module Credit: 4 | Sem: Y2S1`"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " `List of available modules:`"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `ID: CS1010 Name: Programming Methodology | Modular Credit: 4`"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `ID: CS2030 Name: Programming Methodology II | Modular Credit: 4 | Prerequisites: CS1010`"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "### 3.7 Clear"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Clears the current module plan"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "### 3.8 Help"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Display the list of commands that you can input."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "### 3.9 Exit"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Exits the app."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 4. FAQ"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "**A**: Simply transfer the folder including your jar file and saved data to another computer, and run the jar file there"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 5. Command Summary"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 5.1 Add to module plan"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Command: "
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`add id/[module code] s/[semester] mc/[credit]` "
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "or"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`add n/[module name] s/[semester] mc/[credit]`"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "or"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`add id/[module code] n/[module name] s/[semester] mc/[credit]`"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 5.2 Add to available module list"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Command:"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`add id/[module code] n/[module name] mc/[module credit] pre/[pre requisites]`"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 5.3 Delete a specific module from a semester in module plan"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Command: "
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`delete id/[module code] s/[semester]`"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "or"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`delete n/[module name] s/[semester]`"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 5.4 Delete from available module list"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Command: "
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`delete id/[module code]`"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "or"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`delete n/[module name]`"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 5.5 Done"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Command: "
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`done n/[module name] g/[grade]` "
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "or "
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`done id/[module code] g/[grade]`"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 5.6 Find"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Command: "
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`find [keyword]`"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 5.7 View"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Command: "
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`view`"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "or"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`view /dm` "
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "or"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`view /mp`"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "or "
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`view /cc`"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "or"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`CAP`"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 5.8 Clear"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Command:"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`clear`"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 5.9 Help  "
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Command:  "
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 5.10 Bye"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Command:"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`bye`"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 116,
      "DeetoMok": 168,
      "RenzoTsai": 104,
      "-": 32
    }
  },
  {
    "path": "docs/team/chengtzening.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "# Cheng Tze Ning - Project Portfoliio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "Personal Module Manager is a software that tracks the number of modular credits, modules taken and modules required"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "for its user to graduate. The software is for NUS Students who want to plan their modules per semester in an easy way"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "and it is optimized for those who want to type fast with CLI. It is written in Java."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "#### Code contributed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "The following link is my [code contribution](https://nus-cs2113-ay1920s2.github.io/tp-dashboard/#\u003dundefined\u0026search\u003dchengtzening)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "#### Enhancements implemented"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "In this project, I contributed to the list of available modules, the command to search for modules,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "and the delete commands."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "##### List of available modules"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "When the constructor of `AvailableModulesList` is being called, a list of modules are added into"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "the list of modules are added to the `static ModuleList`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "##### Command to search for modules"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "The `FindCommand` helps users look up specific modules corresponding to any keywords inputted."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "##### Command to delete module from semester"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "The `DeleteFromSemCommand` allows the user to delete a module from his module plan. The user just needs to input the"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "module code or module name, and the semester it was allocated to."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "##### Command to delete module from list of available modules"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "The `DeleteFromAvailableCommand` allows users to delete a module from the list of available modules."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "The module is deleted if the module is not a prerequisite of any other modules."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "In the process of doing so, 3 checks are done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "If the module is in the module plan, it will be deleted from the module plan as well."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "### Contributions to documentation"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "- Added details on possible expected outputs for different commands to the User Guide"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "- Viewing module plan  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "`Okay! Here is your module plan:`  "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `Y2S1`  "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `1.[✓] ID: CS1010 Name: Programming Methodology | Module Credit: 4 | Sem: Y2S1 | Grade: A+`  "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `2.[✗] ID: CS1231 Name: Discrete Structures | Module Credit: 4 | Sem: Y2S1`  "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `Y2S2`  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `1.[✗] ID: CS2113 Name: Software Engineering \u0026 Object-Oriented Programming | Module Credit: 4 | Sem: Y2S2`  "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " - Viewing number of modular credits completed  "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " `You have completed this amount of credits:`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "  `4`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "### Contributions to the Developer Guide"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "- Added explanation and diagrams for the `DeleteFromSemCommand` and `DeleteFromAvailableCommand`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "### Contributions beyond the project team"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "- Reported bugs in releases from other team and gave suggestions to their code: [bugs and suggestions given](https://github.com/chengTzeNing/ped/issues)"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 53
    }
  },
  {
    "path": "docs/team/deetomok.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "# Mok Kai Sheng Daryl - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## Overview  "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Personal Module Manager is a software that tracks the number of modular credits, modules taken and modules required "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "for its user to graduate. The software is for NUS Students who want to plan their modules per semester in an easy way "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "and it is optimized for those who want to type fast with CLI. It is written in Java.  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### Summary of Contributions  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "This section describes a summary of my code and documentation contributions, as well as other contributions to help"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "other peers.  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Code contributed  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "For all the code that I have contributed to Module Manager, click here:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "[code contribution](https://nus-cs2113-ay1920s2.github.io/tp-dashboard/#\u003dundefined\u0026search\u003ddeetomok).  "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Enhancements implemented  "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "In this project, I added the portion of Controller, Person, JUnit test, Logging, some commands and some exception classes.  "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "##### Controller  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* What it does: When a user inputs a command line, "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Justification: "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Highlights: "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "##### Commands  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "- Mark as Done Command  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "- View Command  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "- Helping Command  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "- Clear Command  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### Contributions to documentation: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Added table of contents for the User Guide ([#133](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/133/files))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Added Command Format, Mark as Done feature, Deleting features, FAQ, Command summary "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "([#62](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/62), [#121](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/121))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### Contributions to the DG: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Added table of contents for the Developer Guide ([#133](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/133/files))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Added Introduction Section and Setting up section. ([#118](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/118))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Added Architecture, UI component, Logic component and Model component under Design section. ([#118](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/118))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Wrote implementation document for Delete from Available, Add to Available and Marking as Done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "([#121](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/121),)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Added Architecture Diagram, Sequence Diagram for MarkAsDone feature and Object Diagrams for "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Ui component, Logic component and Model component ([#119](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/119), "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "[#118](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/118), "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "[#135](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/135))  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Implemented Product Scope section, User Stories section, Non-Functional Requirements section, "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Glossary section and Instructions for Manual Testing section.([#133](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/133))  "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### Contributions to team-based tasks  "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "- configured Build Gradle windows to make sure runtest.bat works ([#28](https://github.com/AY1920S2-CS2113-T15-3/tp/commit/f2767e597522e0aa84c1a99dcf087354bddfda62))  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "- Maintaining the issue tracker.  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "- Ensuring group meetings and consolidation of group discussions  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### Review/mentoring contributions:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "- Reviewed pull requests in my team: [Review of #8](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/8), "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "[Review of #19](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/19), [Review of #35](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/35),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "[Review of #51](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/51) and 65 others.  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "- Made PRs to teammate\u0027s PR to suggest code revision "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "([#51](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/51), "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "[#4](https://github.com/chengTzeNing/tp/pull/4),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "[#5](https://github.com/chengTzeNing/tp/pull/5))  "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "- Helped team mates using windows who had trouble setting up runtest.bat on their personal computers  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### Contributions beyond the project team"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "- Contributed to CS2113/CS2113T forums discussions: ([#30](https://github.com/nus-cs2113-AY1920S2/forum/issues/30), [#93](https://github.com/nus-cs2113-AY1920S2/forum/issues/93))   "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "- bugs reported in other team\u0027s products: [Bug reports to CS2113T-T12-3](https://github.com/DeetoMok/ped/issues)  "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### Contributions to the User Guide"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The user guide is updated with relevant instructions and their correct format. I was responsible for the "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Command Format, Mark as Done feature, Deleting features, FAQ, Command summary, Table of contents."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Below is a small portion from the User Guide, showing my documentation for the Deleting feature."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "A grey highlight as `such` indicates a command which can be typed into the command line and executed by Module Manager."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Words in [square brackets] denotes parameters that have to be specified by the user."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## Project Feature"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### Deleting module: delete"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "You can delete a module from a semester of your module plan or from the list of available modules."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Delete a specific module from a semester in module plan"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "You can do so by using the module code or the module name."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The module to be deleted must be in your module plan."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": " "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Based on module code"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Format: `delete id/[module code] s/[semester]`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example:​ `delete id/IS4241 s/4`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Okay, this module has been deleted from the corresponding semester`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Module IS4241 has been deleted from semester Y2S2`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Based on module name"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Format: `delete n/[module name] s/[semester]`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example:​ `delete n/Discrete Structure s/4`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Okay, this module has been deleted from the corresponding semester`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Module Discrete Structure has been deleted from semester Y2S2`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Delete a specific module from available module list"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Based on module name"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Format: `delete id/[module code]`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example:​ `delete id/IS4241`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Okay, this module has been deleted from the list of available modules`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`ID: IS4241 Name: Social Media Network Analysis | Modular Credit: 4`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### Based on module code"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Format: `delete n/[module name]`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example:​ `delete n/Social Media Network Analysis`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected output: "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Okay, this module has been deleted from the list of available modules`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`ID: IS4241 Name: Social Media Network Analysis | Modular Credit: 4`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### Contributions to the Developer Guide (Which sections did you contribute to the DH? Which UML Diagrams did u add/update)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "This section describes my contributions to the Developer Guide of Module Manager. I implemented the Table of Contents, "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Introduction section and Setting up section. In addition, I implemented the Design section excluding Storage. "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "I designed the entire Architecture Design for Module Manager and wrote the implementation document for Addition  "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "(Add to Semester and Add to available) and Marking as Done. Lastly, I implemented Product Scope section, User Stories"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "section, Non-Functional Requirements section, Glossary section and Instructions for Manual Testing section."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Below contains an excerpt of my documentation regarding the Architecture Design of Module Manager."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "# 2. Setting up"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 2.1 Prerequisites"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1. JDK `11`."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2. IntelliJ IDE."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 2.2 Setting up the project in your computer"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1. Fork this repository, and clone the fork repository to your computer"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "dialog first)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "3. Set up the correct JDK version for Gradle"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * If `JDK 11` is listed in the drop down, select it. Otherwise, click `New…` and select the directory where you "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    installed `JDK 11`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    * Click `OK`"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "4. Click `Import Project`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "5. Locate the `build.gradle` file and select it. Click `OK`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "6. Click `Open as Project`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "7. Click `OK` to accept the default settings if prompted"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 2.3 Verifying the setup"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1. Run Module Manager to verify and try a few commands. Do refer to the user guide for a list of commands to try out."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2. Run the JUnit Tests/gradlew test command to ensure that all test case passes."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## 2.4 Configurations to do before writing code"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "**Configuring the coding style**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Module Manager uses CheckStyle to check for code quality violations."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* To configure your project to use CheckStyle, add `id \u0027checkstyle\u0027` under plugins for your `build.gradle` file."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Ensure that your CheckStyle toolVersion is 8.23 by adding `toolVersion \u003d \u00278.23\u0027` into your `build.gradle` file."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Refer to Module Manager\u0027s `build.gradlew` file as a reference to set up CheckStyle correctly."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "**Getting started with coding**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "When you are ready to start coding, we recommend that you get a sense of the overall design by reading about "
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Module Manager\u0027s architecture in the next section."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "# 3. Design"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "This section provides a high level overview of our application, Module Manager."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "## Design \u0026 Implementation"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### 3.1 Architecture"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "![Architecture Diagram](https://github.com/DeetoMok/tp/raw/master/docs/images/Architecture.png)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The Architecture Diagram given above explains the high-level design of the Module Manager Application."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Module Manager consists of a main class called Duke responsible for"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The other components involved are:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`UI`: The user interface of the application"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Parser`: This class mainly handles the parsing and handling of user commands"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Command`: This class handles the type of command"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Person`: This class manages the data of the user in memory"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Controller`: This class determines what to do with the parsed input of the user "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Storage`: Reads data from, and writes data to, the hard disk"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.2 UI component"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "![Ui Diagram](https://github.com/DeetoMok/tp/raw/master/docs/images/Ui.png)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The `UI` component consists of a `Ui` class that stores all user interaction output data. "
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "It displays all user interactions to the user based on the command line inputs received."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "*   Executes user commands using the `Logic` component"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.3 Logic component"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "![Object Diagram of Logic Component](https://github.com/DeetoMok/tp/raw/master/docs/images/Object_Diagram_of_Logic_Component.png)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The `Logic` component "
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "1. `Logic` uses the `Parser` class to parse the user command."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "2. The parsed command is passed to `Controller` which then returns a specific command class "
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "e.g. `AddCommand`, `FindCommand` etc. which is executed by the main class `Duke`."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "All these command classes inherits from the abstract `Command` class."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "3. The command execution can affect the Model (e.g. adding a module in ModuleList)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "4. The result of the command execution is passed back to the Ui."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "5. In addition, the command execution can also instruct the `Ui` to perform certain actions, "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "such as displaying help to the user."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "#### 3.4 Model component"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "![Class Diagram of Model Component](https://github.com/DeetoMok/tp/raw/master/docs/images/Class_Diagram_of_Model_Component.png)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The `Model` component is responsible for serving as a boundary between the `Controller` component and `Storage` "
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "component. "
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "The responsibilities of the `Model` component includes"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* Storing the data in-memory during programme runtime. It stores all `SelectedModule` objects in an "
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`ArrayList\u003cSelectedModule\u003e` in a `SemModulesList` class. This represents a semester of the user\u0027s module plan."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "* All `ArrayList\u003cSelectedModule\u003e` is then stored in a `PriorityQueue\u003cSemModulesList\u003e` which contains `SemModulesList`"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "in an ordered fashion. This class is called `SemesterList`, which represents the entire module plan of the user."
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 251
    }
  },
  {
    "path": "docs/team/renzotsai.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "# Cai Runze - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Personal Module Manager is a software that tracks the number of modular credits, modules taken and modules required "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "for its users. The software is for NUS Students who want to plan their modules per semester in an easy way "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "and it is optimized for those who want to type fast with CLI. It is written in Java."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "#### Code contributed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "The given link is my [code contribution](https://nus-cs2113-ay1920s2.github.io/tp-dashboard/#\u003dundefined\u0026search\u003drenzotsai)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "#### Enhancements implemented"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "In this project, I design the part of Storage, Exception and some commands."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "##### Storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Storage in our software include three parts: `Storage Available Modules List`, `Storage Semester List` and "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "`Storage Person Info`. They are all stored in CSV file. Each time the user runs the software, "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "these three file will be loaded and will be store after edit them."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "##### Exception"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Exception in our software include three parts: `Input Exception`, `Runtime Exception` and `Storage Exception`. "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "All of them extend from `ModuleManagerException`."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "##### Commands"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- Add command: This type of command allows users to assign different modules to different semester or add module "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "to `Available Modules List`."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- View all modules command: This command allows users to view all the available modules in the `Available Modules List`."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "#### Contributions to documentation"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- Write the Draft of our UG v1.0 and v2.0 and revised them."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "#### Contributions to the Developer Guide"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- Write the part of `Storage component` and draw a Class diagram to explain this implementation."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- Write the part of `Add to semseter` and draw a Sequence diagram to explain this implementation."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "#### Contributions to team-based tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- Setting up organization, team repo and Gradle."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- Maintaining the issue tracker."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- Release management: update the jar file of release v2.0 after finding something wrong with the previous one."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "#### Review/mentoring contributions:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- Review over 80% code enhancement\u0027s PRs and give code revise suggestion by making a PR to their branch. "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "e.g [#42 PR in our team repo](https://github.com/AY1920S2-CS2113-T15-3/tp/pull/42) and "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "[Revise suggestion PR to teammate\u0027s repo](https://github.com/chengTzeNing/tp/pull/3)."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- Help teammates understanding some data structures in our code by making some slides to explain. "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "[Google Slides: Available Modules List\u0027s data structure](https://docs.google.com/presentation/d/1UeuonNaPafGD5bX36J_iroB_umS6lvyD37ECp8OfvSI/edit)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "#### Contributions beyond the project team"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- responses posted in forum: [a possible answer to #89](https://github.com/nus-cs2113-AY1920S2/forum/issues/89#issuecomment-605184683)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "(why Java CI build failure only for windows)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "- bugs reported in other team\u0027s products: [bugs reports to CS2113T-T12-4](https://github.com/RenzoTsai/ped/issues)"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.Person;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.ModuleManagerException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.StorageException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.parser.Controller;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.storage.StorageAvailableModulesList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.storage.StoragePersonInfo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.storage.StorageSemesterList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static AvailableModulesList availableModulesList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private static SemesterList semesterList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static final Logger logr \u003d Logger.getLogger(\"Duke\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     * Instantiate all required classes."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            StoragePersonInfo.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (StorageException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            logr.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            availableModulesList \u003d StorageAvailableModulesList.load();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (StorageException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            logr.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            semesterList \u003d StorageSemesterList.load();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (StorageException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            logr.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     * Main program to run."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        setupLogger();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Ui.greetUser();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (!Person.isPersonExist()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            Person.createNewUser();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Ui.showHelpMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String fullCommand \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                Ui.showReadyToInput();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                fullCommand \u003d in.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                Command command \u003d Controller.control(fullCommand);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                command.execute(semesterList, availableModulesList);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                logr.log(Level.WARNING, \"Invalid input: \" + fullCommand"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                        + System.lineSeparator()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                        + \"Please input your command again!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            } catch (ModuleManagerException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                logr.log(Level.WARNING, e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        } while (!isExit);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Ui.greetFarewell();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    static void setupLogger() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        logr.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        ConsoleHandler consoleHandler \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        consoleHandler.setLevel(Level.INFO);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        logr.addHandler(consoleHandler);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            FileHandler fileHandler \u003d new FileHandler(\"myLogger.log\", true);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            fileHandler.setLevel(Level.FINE);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            logr.addHandler(fileHandler);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            logr.log(Level.SEVERE, \"File logger not working.\", e);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 32,
      "RenzoTsai": 45,
      "bennychanya": 17,
      "-": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.RuntimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(SemesterList semesterList, AvailableModulesList availableModulesList) throws RuntimeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 13,
      "bennychanya": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddToAvailableCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.SemModulesList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.exception.InputException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.RuntimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.module.SelectedModule;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.module.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.module.NewModule;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class AddToAvailableCommand extends AddCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private NewModule newModule;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public AddToAvailableCommand(NewModule newModule) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        this.newModule \u003d newModule;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(SemesterList semesterList, AvailableModulesList availableModulesList) throws RuntimeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        addModule(semesterList, availableModulesList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        Ui.showAddedToDataMessage(newModule.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super.execute(semesterList, availableModulesList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * adds a module to the user\u0027s available module list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param semesterList : user\u0027s current semester list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param availableModulesList : user\u0027s current available modules list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private void addModule(SemesterList semesterList, AvailableModulesList availableModulesList)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throws RuntimeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (Module module : availableModulesList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            boolean hasSameId \u003d newModule.getId().equals(module.getId());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            boolean hasSameName \u003d newModule.getName().equals(module.getName());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            if (hasSameId \u0026\u0026 hasSameName) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                throw new RuntimeException(\"This module\u0027s name and Id has already \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        + \"been added to the available modules list\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            } else if (hasSameId) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                String oldName \u003d module.getName();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                String id \u003d module.getId();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                module.updateName(newModule.getName());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                throw new RuntimeException(String.format(\"This module\u0027s ID \u003c%s\u003e is in available modules list.\", id)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                        + System.lineSeparator()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                        + String.format(\"So we update the module\u0027s name: \u003c%s\u003e -\u003e \u003c%s\u003e\", oldName, module.getName()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            } else if (hasSameName) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                String oldId \u003d module.getId();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                String name \u003d module.getName();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                module.updateId(newModule.getId());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                throw new RuntimeException(String.format(\"This module\u0027s name \u003c%s\u003e is in available modules list.\", name)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                        + System.lineSeparator()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                        + String.format(\"So we update the module\u0027s ID: \u003c%s\u003e -\u003e \u003c%s\u003e\", oldId, module.getId()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        availableModulesList.add(newModule);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        checkSemesterList(semesterList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        return COMMAND_WORD + \" \" + newModule;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Update the selected module in SemesterList if the newly added module is already in SemesterList."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param semesterList SemesterList."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private void checkSemesterList(SemesterList semesterList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (SemModulesList sem: semesterList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            for (SelectedModule selectedModule: sem) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                if (selectedModule.getId().equals(newModule.getId())"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        || selectedModule.getName().equals(newModule.getName())) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    selectedModule.setModuleConfig(newModule);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 14,
      "DeetoMok": 12,
      "RenzoTsai": 47,
      "bennychanya": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddToSemCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.RuntimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.module.SelectedModule;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.SemModulesList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.module.Module;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class AddToSemCommand extends AddCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private SelectedModule selectedModule;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public AddToSemCommand(SelectedModule selectedModule) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.selectedModule \u003d selectedModule;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        checkAvailableModulesList(selectedModule);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(SemesterList semesterList, AvailableModulesList availableModulesList) throws RuntimeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        addModule(semesterList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        Ui.showAddedToSemMessage(selectedModule.announceAdded());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super.execute(semesterList, availableModulesList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Adds module to semester list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param semesterList semester list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws RuntimeException throws when meets a runtime exception."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private void addModule(SemesterList semesterList) throws RuntimeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        boolean isModuleExist \u003d checkModuleExist(semesterList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (isModuleExist) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (selectedModule.isIdValid() \u0026\u0026 selectedModule.isNameValid()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                throw new RuntimeException(String.format(\"ID \u003c%s\u003e or name \u003c%s\u003e is already exist in your semester list!\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                        selectedModule.getId(), selectedModule.getName()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            } else if (selectedModule.isIdValid()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                throw new RuntimeException(String.format(\"ID \u003c%s\u003e is already exist in your semester list!\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                        selectedModule.getId()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            } else if (selectedModule.isNameValid()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                throw new RuntimeException(String.format(\"Name \u003c%s\u003e is already exist in your semester list!\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                        selectedModule.getName()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (selectedModule.getModuleCredit() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new RuntimeException(\"The module should not have non-positive module credit\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else if (selectedModule.getModuleCredit() \u003e 50) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new RuntimeException(\"Are you sure the module is that large? :O\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        for (SemModulesList sem: semesterList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (sem.getSem().equals(selectedModule.getSem())) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                sem.add(selectedModule);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        SemModulesList sem \u003d new SemModulesList(selectedModule.getSem());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        sem.add(selectedModule);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        semesterList.add(sem);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Checks whether the selected module is in available modules list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param selectedModule modules to be added to semester modules list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private void checkAvailableModulesList(SelectedModule selectedModule) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (Module availableModule: AvailableModulesList.availableModulesList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            boolean isSameName \u003d availableModule.getName().equals(selectedModule.getName());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            boolean isSameId \u003d availableModule.getId().equals(selectedModule.getId());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (isSameName || isSameId) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                this.selectedModule.setModuleConfig(availableModule);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     *Allows users to add to data later(or not) and then it if users add a module to data,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     *it will automatically update the information of the selected module."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param semesterList user\u0027s current semester list"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @return boolean value of true if the module is in the user\u0027s semester list, and false otherwise"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private boolean checkModuleExist(SemesterList semesterList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        for (SemModulesList sem: semesterList) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            if (sem.isInList(selectedModule.getName()) || sem.isInList(selectedModule.getId())) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 1,
      "DeetoMok": 12,
      "RenzoTsai": 70,
      "bennychanya": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/CalculateCapCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.data.Person;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.data.SemModulesList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.RuntimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.module.SelectedModule;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "public class CalculateCapCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"CAP\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public CalculateCapCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(SemesterList semesterList, AvailableModulesList availableModulesList) throws RuntimeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        calculateCap(semesterList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        DecimalFormat df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        String cap \u003d df.format(Person.getTotalCap());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        Ui.showCap(cap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    /** Calculate User\u0027s current Cumulative Average Point (CAP)."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     * @param semesterList All modules selected by user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void calculateCap(SemesterList semesterList) throws RuntimeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        double totalGradePoint \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        int totalGradeModuleCredit \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        for (SemModulesList sem : semesterList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            for (SelectedModule module : sem) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                boolean isModuleCompleted \u003d module.getDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                if (!isModuleCompleted) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                boolean isGradedModuleFailed \u003d module.getGrade().getGrade().equals(\"F\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                boolean isUngradedPassed \u003d module.getGrade().getGrade().equals(\"CS\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                boolean isUngradedFailed \u003d module.getGrade().getGrade().equals(\"CU\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                boolean isCompletedModuleGraded \u003d !isUngradedPassed \u0026\u0026 !isUngradedFailed;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                if (isGradedModuleFailed) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                    totalGradeModuleCredit +\u003d module.getModuleCredit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                } else if (isCompletedModuleGraded) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                    totalGradePoint +\u003d module.getModuleCredit() * module.getGrade().getPoint();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                    totalGradeModuleCredit +\u003d module.getModuleCredit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        double cap \u003d totalGradePoint / totalGradeModuleCredit;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (totalGradeModuleCredit \u003d\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new RuntimeException(\"Your CAP is currently 0. Please do some modules first.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else if (!(cap \u003e\u003d 0.0 \u0026\u0026 cap \u003c\u003d 5.0)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new RuntimeException(\"Your CAP is invalid, please check to make sure \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    + \"your grades are entered correctly\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assert cap \u003c\u003d 5.0 \u0026\u0026 cap \u003e\u003d 0.0 : \"Invalid CAP\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        Person.setTotalCap(cap);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 6,
      "bennychanya": 51,
      "RenzoTsai": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ClearCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.data.Person;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void execute(SemesterList semesterList, AvailableModulesList availableModulesList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        semesterList.clear();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Ui.showClearMessage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.exception.InputException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.RuntimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.StorageException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.storage.StorageAvailableModulesList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.storage.StoragePersonInfo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.storage.StorageSemesterList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void execute(SemesterList semesterList, AvailableModulesList availableModulesList)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throws RuntimeException, StorageException, InputException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        StoragePersonInfo.save();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        StorageAvailableModulesList.save(availableModulesList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        StorageSemesterList.save(semesterList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 1,
      "DeetoMok": 3,
      "RenzoTsai": 15,
      "bennychanya": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteFromAvailableCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.data.SemModulesList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.exception.InputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.RuntimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.StorageException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.module.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "public class DeleteFromAvailableCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private String moduleIdentifier;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * Constructor for DeleteFromAvailableCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * @param moduleIdentifier The Id or the Name of the Module."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * @param type To determine if the moduleIdentifier is an Id or the Name of the module."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public DeleteFromAvailableCommand(String moduleIdentifier, String type) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.moduleIdentifier \u003d moduleIdentifier.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(SemesterList selectedModulesList, AvailableModulesList availableModulesList)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throws RuntimeException, StorageException, InputException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        deleteModule(selectedModulesList, availableModulesList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        super.execute(selectedModulesList, availableModulesList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * This method deletes the module from the list of available modules after chcecking that it exists in the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * and that it is not a prerequisite of any modules."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * It also deletes the module from the module plan, if applicable."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * @param selectedModulesList The module plan of the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * @param availableModulesList The list of available modules to choose from."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * @throws RuntimeException Throws exception when the module does not exist or if the module is a prerequisite"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     *     of other modules."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private void deleteModule(SemesterList selectedModulesList, AvailableModulesList availableModulesList)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throws RuntimeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        boolean isModuleAvailable \u003d checkIfModuleAvailable(availableModulesList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        if (!isModuleAvailable) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new RuntimeException(String.format(\"Module %s not found in available modules\", moduleIdentifier));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Module moduleToBeDeleted \u003d availableModulesList.getModule(moduleIdentifier);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        boolean isPreReq \u003d checkIfIsPreReq(moduleToBeDeleted, availableModulesList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        if (isPreReq) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new RuntimeException(String.format("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    \"Module %s cannot be deleted because it is a prerequisite to other modules.\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                    moduleIdentifier));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        availableModulesList.remove(moduleToBeDeleted);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Ui.showDeleteFromAvailableMessage(moduleToBeDeleted.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        boolean isInModulePlan \u003d checkIfInModulePlan(moduleToBeDeleted.getId(), selectedModulesList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        if (isInModulePlan) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            for (SemModulesList sem : selectedModulesList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                if (sem.isInList(moduleToBeDeleted.getId())) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                    sem.deleteModule(moduleIdentifier);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    Ui.showDeleteFromAvailableFollowUpMessage(moduleToBeDeleted.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public boolean checkIfModuleAvailable(AvailableModulesList availableModulesList) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        if (type.equals(\"id\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            return availableModulesList.isModuleIdInList(moduleIdentifier);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        return availableModulesList.isModuleNameInList(moduleIdentifier);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public boolean checkIfIsPreReq(Module moduleToCheck, AvailableModulesList availableModulesList) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (Module module : availableModulesList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            if (module.getPreRequisiteModules().size() \u003e 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                for (Module preReqModule : module.getPreRequisiteModules()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    if (preReqModule.getId().equalsIgnoreCase(moduleToCheck.getId())) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public boolean checkIfInModulePlan(String moduleId, SemesterList selectedModulesList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (SemModulesList sem : selectedModulesList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            if (sem.isInList(moduleId)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 73,
      "DeetoMok": 20,
      "RenzoTsai": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteFromSemCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.data.SemModulesList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.exception.InputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.RuntimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.StorageException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.module.Module;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "public class DeleteFromSemCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private String moduleIdentifier;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private String semester;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private String yearSemester;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * Constructor for DeleteFromSemCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * @param moduleIdentifier The Id or the Name of the Module."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * @param semester The Semester the module was allocated to."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * @param type To determine if the moduleIdentifier is an Id or the Name of the module."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public DeleteFromSemCommand(String moduleIdentifier, String semester, String type) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        this.moduleIdentifier \u003d moduleIdentifier;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        this.semester \u003d semester;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        setYearSemester();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(SemesterList selectedModulesList, AvailableModulesList availableModulesList)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throws RuntimeException, StorageException, InputException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        deleteModule(selectedModulesList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Ui.showDeleteFromSemMessage(String.format(\"Module %s has been deleted from semester %s\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                moduleIdentifier, yearSemester));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        super.execute(selectedModulesList, availableModulesList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private void deleteModule(SemesterList selectedModulesList) throws RuntimeException, InputException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        boolean isModuleInSem \u003d checkModuleExistInCorrectSem(selectedModulesList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        if (!isModuleInSem) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new RuntimeException(String.format(\"Module %s not found in Semester %s\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    moduleIdentifier, semester));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        Module module;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (SemModulesList semModulesList : selectedModulesList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            if (semester.equals(semModulesList.getSem())) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                module \u003d semModulesList.getModule(moduleIdentifier);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                semModulesList.remove(module);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Converts semester (e.g. semester 5) to specific year semester string (Y3S1)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void setYearSemester() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        StringBuilder yearSemesterBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        int intSemester \u003d Integer.parseInt(semester);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        yearSemesterBuilder.append(\"Y\").append((intSemester + 1) / 2).append(\"S\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (intSemester % 2 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            yearSemesterBuilder.append(2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            yearSemesterBuilder.append(1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        yearSemester \u003d yearSemesterBuilder.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private boolean checkModuleExistInCorrectSem(SemesterList moduleList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        for (SemModulesList sem: moduleList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            if (sem.getSem().equalsIgnoreCase(semester) \u0026\u0026 sem.isInList(moduleIdentifier)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 43,
      "DeetoMok": 31,
      "RenzoTsai": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.exception.InputException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.RuntimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.StorageException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(SemesterList semesterList, AvailableModulesList availableModulesList)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throws StorageException, RuntimeException, InputException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super.execute(semesterList, availableModulesList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 2,
      "bennychanya": 9,
      "RenzoTsai": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.data.ModuleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.data.SemModulesList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.module.Module;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        this.keyword \u003d keyword.toLowerCase();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(SemesterList semesterList, AvailableModulesList availableModulesList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String result \u003d generateResult(semesterList, availableModulesList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        Ui.showFindMessage(result);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private String generateResult(SemesterList selectedModulesList, AvailableModulesList availableModulesList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        ModuleList listOfSelectedModulesToDisplay \u003d new ModuleList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (SemModulesList semModulesList : selectedModulesList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            for (Module module : semModulesList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                if (module.getName().toLowerCase().contains(keyword)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                        || module.getId().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                    listOfSelectedModulesToDisplay.add(module);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        ModuleList listOfAvailableModulesToDisplay \u003d new ModuleList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (Module module : availableModulesList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            if (module.getName().toLowerCase().contains(keyword) || module.getId().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                listOfAvailableModulesToDisplay.add(module);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        output.append(System.lineSeparator()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                + \"List of selected modules:\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                + System.lineSeparator());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (Module module : listOfSelectedModulesToDisplay) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            output.append(module.toString())"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    .append(System.lineSeparator());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        output.append(System.lineSeparator()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                + \"List of available modules:\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                + System.lineSeparator());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (Module module : listOfAvailableModulesToDisplay) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            output.append(module.toString())"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    .append(System.lineSeparator());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 48,
      "RenzoTsai": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/HelpingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class HelpingCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public void execute(SemesterList semesterList, AvailableModulesList availableModulesList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Ui.showHelpMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 14,
      "bennychanya": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/MarkAsDoneCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.data.Person;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.data.SemModulesList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.exception.InputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.RuntimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.StorageException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.module.Grading;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.module.SelectedModule;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class MarkAsDoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private Grading grade;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * marks the module in a semester in the selectedList as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param description : name of the module or id of the module that the user wants to mark as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     * @param grade       : Grading awarded for the module."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public MarkAsDoneCommand(String description, Grading grade) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.grade \u003d grade;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(SemesterList semesterList, AvailableModulesList availableModulesList)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throws RuntimeException, StorageException, InputException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        markAsDoneCommand(semesterList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Ui.showDoneMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super.execute(semesterList, availableModulesList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private void markAsDoneCommand(SemesterList semesterList) throws RuntimeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        for (SemModulesList sem: semesterList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            for (SelectedModule module: sem) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                if (module.getName().equals(description) || module.getId().equals(description)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                    module.setAsDone(grade);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                    if (grade !\u003d Grading.F \u0026\u0026 grade !\u003d Grading.CU) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                        Person.addTotalModuleCreditCompleted(module.getModuleCredit());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        throw new RuntimeException(\"module not found\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 30,
      "bennychanya": 15,
      "RenzoTsai": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ViewCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.SemModulesList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.RuntimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.module.Module;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.module.SelectedModule;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"view\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String VIEW_COMPULSORY_MODULES \u003d \"cm\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String VIEW_DONE_MODULES \u003d \"dm\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String VIEW_MODULE_PLAN \u003d \"mp\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String VIEW_SPECIFIC_MODULE \u003d \"sm\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String VIEW_AVAILABLE_MODULES \u003d \"am\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String VIEW_COMPLETED_CREDITS \u003d \"cc\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private String viewTaskType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private String moduleToBeViewed;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public ViewCommand(String viewTaskType) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.viewTaskType \u003d viewTaskType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public ViewCommand(String viewTaskType, String moduleIdentifier) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.viewTaskType \u003d viewTaskType;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.moduleToBeViewed \u003d moduleIdentifier;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(SemesterList semesterList, AvailableModulesList availableModulesList) throws RuntimeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        switch (viewTaskType) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case VIEW_MODULE_PLAN:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            viewModulePlan(semesterList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case VIEW_DONE_MODULES:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            viewDoneModules(semesterList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case VIEW_AVAILABLE_MODULES:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            viewAvailableModules(availableModulesList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case VIEW_COMPLETED_CREDITS:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            viewCompletedCredits();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new RuntimeException(\"Please enter \u0027help\u0027 to find an acceptable command!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        assert viewTaskType !\u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Prints the user\u0027s module plan."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     * @param semesterList user\u0027s module list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private void viewModulePlan(SemesterList semesterList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        StringBuilder viewList \u003d new StringBuilder();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        for (SemModulesList sem : semesterList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            viewList.append(sem.getYearSemester()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            for (Module selectedModule : sem) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                int index \u003d sem.indexOf(selectedModule) + 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                viewList.append(index).append(\".\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        .append(selectedModule.toString())"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        .append(System.lineSeparator());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            viewList.append(System.lineSeparator());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (viewList.toString().trim().equals(\"\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            Ui.showEmptyModulePlan();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            Ui.showViewMessage(viewList.toString().trim());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Prints the user\u0027s completed modules."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param semesterList user\u0027s module list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private void viewDoneModules(SemesterList semesterList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        StringBuilder viewList \u003d new StringBuilder();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        for (SemModulesList sem : semesterList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            StringBuilder viewSemList \u003d new StringBuilder();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            boolean haveCompletedModule \u003d false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            viewSemList.append(sem.getYearSemester()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            for (SelectedModule selectedModule : sem) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                if (selectedModule.getDone()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                    haveCompletedModule \u003d true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                    viewSemList.append(index).append(\".\")"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                            .append(selectedModule.toString())"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                            .append(System.lineSeparator());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            if (haveCompletedModule) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                viewList.append(viewSemList.toString()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Ui.showViewDoneMessage(viewList.toString().trim());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * print user\u0027s available module list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param modulesList user\u0027s available module list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private void viewAvailableModules(AvailableModulesList modulesList) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        StringBuilder viewList \u003d new StringBuilder();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (Module module : modulesList) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            int index \u003d modulesList.indexOf(module) + 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            viewList.append(Ui.BOX_MARGIN)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    .append(System.lineSeparator())"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    .append(\"|  \").append(String.format(\"%02d\", index)).append(\" | \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            viewList.append(module.getId());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            alignId(viewList, module);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            viewList.append(module.getName());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            alignName(viewList, module);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            viewList.append(module.getModuleCredit());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            alignModuleCredit(viewList, module);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            viewList.append(module.getPreReqModulesString());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            alignPreReqModules(viewList, module);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        viewList.append(System.lineSeparator());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        Ui.showViewAvailableMessage(viewList.toString().trim());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private void viewCompletedCredits() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Ui.showCompletedCredits();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private void alignPreReqModules(StringBuilder viewList, Module module) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        int lengthOfPreReqModulesColumn \u003d 24;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        viewList.append(\" \".repeat(Math.max(0,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                (lengthOfPreReqModulesColumn - module.getPreReqModulesString().length()))));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        viewList.append(\"|\").append(System.lineSeparator());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private void alignModuleCredit(StringBuilder viewList, Module module) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        int lengthOfCreditColumn \u003d 14;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        viewList.append(\" \".repeat(lengthOfCreditColumn - 1));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        viewList.append(\"| \");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private void alignName(StringBuilder viewList, Module module) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        int lengthOfNameColumn \u003d 62;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        viewList.append(\" \".repeat(Math.max(0,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                (lengthOfNameColumn - module.getName().length()))));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        viewList.append(\"| \");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private void alignId(StringBuilder viewList, Module module) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        int lengthOfIDsColumn \u003d 9;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        viewList.append(\" \".repeat(Math.max(0,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                (lengthOfIDsColumn - module.getId().length()))));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        viewList.append(\"| \");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 2,
      "DeetoMok": 40,
      "RenzoTsai": 93,
      "bennychanya": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/AvailableModulesList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.module.Module;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.module.NewModule;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "public class AvailableModulesList extends ModuleList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static ModuleList availableModulesList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public AvailableModulesList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        availableModulesList \u003d new ModuleList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"CS1010\", \"Programming Methodology\", 4));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"CS2030\", \"Programming Methodology II\",4, \"CS1010\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"CS2040\", \"Data Structures and Algorithms\", 4,\"CS1010\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"CS2100\", \"Computer Organisation\", 4, \"CS1010\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"CS2106\", \"Introduction to Operating Systems\", 4,\"CS2100\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"CS2113\", \"Software Engineering \u0026 Object-Oriented Programming\", 4,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                \"CS2040\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"CS2105\", \"Introduction to Computer Networks\", 4, \"CS2040\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"ES1000\", \"Foundation Academic English\",4));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"ES1103\", \"English for Academic Purposes\", 4, \"ES1000\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"CS2101\", \"Effective Communication for Computing Professionals\", 4));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"CS2102\", \"Database Systems\",4,\"CS2030\", \"CS1231\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"GEH1001\", \"Globalisation and New Media\",4));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"GEH1002\", \"Economic Issues in Dev World\",4));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"GEH1004\", \"Chinese Heritage: Hist \u0026 Lit\",4));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"GEQ1000\", \"Asking Questions\",4));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"GER1000\", \"Quantitative Reasoning\",4));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"GET1001\", \"Seeing the World Through Maps\",4));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"GET1002\", \"Bridging East and West: Exploring Chinese Communication\",4));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"GET1003\", \"Home\", 4));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"GES1000\", \"Singapore Employment Law\", 4));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        availableModulesList.add(new NewModule(\"GES1002\", \"Global EC Dimensions of S\u0027pore\", 4));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        availableModulesList.add(new NewModule(\"GES1003\", \"Changing Landscapes of Singapore\", 4));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (Module module: availableModulesList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            super.add(module);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public boolean add(Module module) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        availableModulesList.add(module);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return super.add(module);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public boolean remove(Object moduleObject) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        assert (moduleObject instanceof Module);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        Module module \u003d (Module) moduleObject;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        availableModulesList.remove(module);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return super.remove(module);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public boolean isModuleIdInList(String id) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (Module module : availableModulesList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            if (module.getId().equals(id)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public boolean isModuleNameInList(String name) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (Module module : availableModulesList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            if (module.getName().equalsIgnoreCase(name)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * To retrieve a module from the list of available modules from the Id or the Name of the module."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * Assumes that the user knows that the module already exists in the list of modules."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * @param moduleIdentifier Id or Name of module."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * @return Module that corresponds to the modules identifier inputted."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public Module getModule(String moduleIdentifier) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (Module module : availableModulesList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            if (moduleIdentifier.equalsIgnoreCase(module.getId())"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    || moduleIdentifier.equalsIgnoreCase(module.getName())) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                return module;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 43,
      "DeetoMok": 3,
      "bennychanya": 27,
      "RenzoTsai": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/ModuleList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.module.Module;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class ModuleList extends ArrayList\u003cModule\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public ModuleList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/Person.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class Person {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static String matricYear;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static double totalCap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private static int totalModuleCreditCompleted;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static boolean isPersonExist \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Gets user\u0027s total completed module credits."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return user\u0027s total completed module credits."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public static int getTotalModuleCreditCompleted() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        return totalModuleCreditCompleted;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Updates user\u0027s total completed module credits."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public static void addTotalModuleCreditCompleted(int modularCredit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        Person.totalModuleCreditCompleted +\u003d modularCredit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Constructor of Person."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param name user\u0027s name."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param year user\u0027s matric year."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public Person(String name, String year) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Person.name \u003d name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        matricYear \u003d year;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isPersonExist \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Creates a new user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static void createNewUser() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        name \u003d \"User\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String matricYear \u003d \"2020\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        new Person(name, matricYear);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static String getName() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static String getMatricYear() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return matricYear;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public static void setTotalCap(double cap) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        totalCap \u003d cap;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public static double getTotalCap() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        return totalCap;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static boolean isPersonExist() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return isPersonExist;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Convert personal information to string for storage."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return personal information\u0027s string for storage."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static String toStorageString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return name + \",\" + matricYear;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 15,
      "RenzoTsai": 47,
      "bennychanya": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/SemModulesList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.exception.InputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.module.Module;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import seedu.duke.module.SelectedModule;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "public class SemModulesList extends ArrayList\u003cSelectedModule\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private String semester;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private String yearSemester;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Constructor of SemModulesList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public SemModulesList(String semester) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.semester \u003d semester;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        setYearSemester();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String getSem() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        return semester;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Converts semester (e.g. semester 5) to specific year semester string (Y3S1)."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void setYearSemester() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        StringBuilder yearSemesterBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        int intSemester \u003d Integer.parseInt(semester);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        yearSemesterBuilder.append(\"Y\").append((intSemester + 1) / 2).append(\"S\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (intSemester % 2 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            yearSemesterBuilder.append(2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            yearSemesterBuilder.append(1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        yearSemester \u003d yearSemesterBuilder.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Returns true if the module exists in the SemModulesList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param moduleIdentifier : String module name or module code."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public boolean isInList(String moduleIdentifier) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        for (SelectedModule module: this) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            boolean hasSameName \u003d module.getName().equalsIgnoreCase(moduleIdentifier) \u0026\u0026 module.isNameValid();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            boolean hasSameId \u003d module.getId().equalsIgnoreCase(moduleIdentifier) \u0026\u0026 module.isIdValid();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (hasSameName || hasSameId) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * To retrieve a module from the modules in that semester from the Id or the Name of the module."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * @param moduleIdentifier Id or Name of module."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     * @return Module that corresponds to the modules identifier inputted."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public Module getModule(String moduleIdentifier) throws InputException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (Module module : this) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            if (module.getId().equalsIgnoreCase(moduleIdentifier)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    || module.getName().equalsIgnoreCase(moduleIdentifier)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                return module;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        throw new InputException(\"The module you entered seems incorrect\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public void deleteModule(String moduleIdentifier) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (Module module : this) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            if (module.getName().equals(moduleIdentifier) || module.getId().equals(moduleIdentifier)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                this.remove(module);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public String getYearSemester() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return yearSemester;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 19,
      "DeetoMok": 43,
      "RenzoTsai": 8,
      "bennychanya": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/SemesterList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import java.util.PriorityQueue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "public class SemesterList extends PriorityQueue\u003cSemModulesList\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public SemesterList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        super(Comparator.comparing(SemModulesList::getSem));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bennychanya": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/InputException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Signals that some input exceptions when ModuleManager runs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class InputException extends ModuleManagerException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public InputException(String message, String format) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(\"Input Exception: \" + message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                + \"Please enter your command again! Format:\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                + format);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public InputException(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(\"Input Exception: \" + message"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                + \"Please enter your command again!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/ModuleManagerException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Signals that some exceptions when ModuleManager runs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class ModuleManagerException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public ModuleManagerException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/RuntimeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class RuntimeException extends ModuleManagerException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public RuntimeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(\"Runtime Exception: \" + message"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                + \"Please enter your command again!\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/StorageException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Signals that some exceptions when ModuleManager store and load."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class StorageException extends ModuleManagerException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public StorageException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/module/Grading.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "package seedu.duke.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "public enum Grading {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    APLUS(\"A+\", 5.00),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    A(\"A\", 5.00),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    AMINUS(\"A-\", 4.50),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    BPLUS(\"B+\", 4.00),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    B(\"B\", 3.50),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    BMINUS(\"B-\", 3.00),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    CPLUS(\"C+\", 2.50),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    C(\"C\", 2.00),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    DPLUS(\"D+\", 1.50),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    D(\"D\", 1.00),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    F(\"F\", 0.00),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    CS(\"CS\", 0.00),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    CU(\"CU\", 0.00);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    Grading(String grade, double gradePoint) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.grade \u003d grade;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.gradePoint \u003d gradePoint;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private String grade;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private double gradePoint;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public String getGrade() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        return this.grade;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public double getPoint() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        return this.gradePoint;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 5,
      "bennychanya": 26,
      "RenzoTsai": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/module/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.ModuleList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "public abstract class Module {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected String id;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected Boolean isSUable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    protected ModuleList preRequisiteModules;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected boolean isNameValid;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected boolean isIdValid;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    protected int moduleCredit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * This is Module\u0027s constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param type the type of module identifier."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param moduleIdentifier the identifier which can be either module\u0027s name or module\u0027s id."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     * @param moduleCredit     the module\u0027s amount of module credit awarded"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public Module(String type, String moduleIdentifier, int moduleCredit) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.moduleCredit \u003d moduleCredit;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.isNameValid \u003d type.equals(\"name\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.isIdValid \u003d type.equals(\"id\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (isNameValid) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.name \u003d moduleIdentifier;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            this.id \u003d \"unnamed\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else if (isIdValid) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.id \u003d moduleIdentifier;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            this.name \u003d \"unnamed\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public Module(String type, String moduleId, String moduleName, int moduleCredit) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.moduleCredit \u003d moduleCredit;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.isNameValid \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.isIdValid \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.name \u003d moduleName;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.id \u003d moduleId;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Module() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String returnString \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (isIdValid \u0026\u0026 isNameValid) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            returnString \u003d \"ID: \" + id + \" Name: \" + name;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else if (isNameValid) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            returnString \u003d \"Name: \" + name;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else if (isIdValid) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            returnString \u003d \"ID: \" + id;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        return returnString + \" | Module Credit: \" + moduleCredit;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            name \u003d \"unnamed\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return name;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public String getId() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        return this.id;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public void updateName(String name) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public void updateId(String id) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public int getModuleCredit() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        return this.moduleCredit;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public ModuleList getPreRequisiteModules() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return preRequisiteModules;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String getPreReqModulesID() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String preReqModulesStringList \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean hasNoPreReqModules \u003d preRequisiteModules.size() \u003d\u003d 0;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (hasNoPreReqModules) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            preReqModulesStringList \u003d (\"None\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (Module preReqModule : preRequisiteModules) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            preReqModulesStringList +\u003d preReqModule.getId() + \" \";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return preReqModulesStringList;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String getPreReqModulesString() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public abstract String toStorageString();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        assert (object instanceof Module);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        Module moduleObject \u003d (Module) object;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        boolean sameId \u003d false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        if (moduleObject.getId().equals(this.getId())) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            sameId \u003d true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        boolean sameName \u003d false;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        if (moduleObject.getName().equals(this.getName())) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            sameName \u003d true;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        boolean sameMC \u003d false;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        if (moduleObject.getModuleCredit() \u003d\u003d this.getModuleCredit()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            sameMC \u003d true;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return sameId \u0026\u0026 sameMC \u0026\u0026 sameName;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public boolean isNameValid() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return isNameValid;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public boolean isIdValid() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return isIdValid;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 20,
      "DeetoMok": 21,
      "RenzoTsai": 70,
      "bennychanya": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/module/NewModule.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "package seedu.duke.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.data.ModuleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " * Mainly for the input of any new modules to the database."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " * In order to differentiate the constructors for normal Modules and new Modules with prerequisites to be added in."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "public class NewModule extends Module {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private String preReqString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public NewModule(String id, String name, int moduleCredit, String... preRequisiteModules) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        super(\"Both\", id, name, moduleCredit);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        StringBuffer preReq \u003d new StringBuffer();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (String preRequisiteModule: preRequisiteModules) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            preReq.append(preRequisiteModule).append(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.preReqString \u003d preReq.toString().trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        this.preRequisiteModules \u003d convertFromStringToModuleList(preRequisiteModules);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * converts the array of strings of modules into Modules of ModuleList object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param moduleIdentifiers : Array of strings of modules."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public static ModuleList convertFromStringToModuleList(String[] moduleIdentifiers) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        ModuleList modules \u003d new ModuleList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        for (String moduleIdentifier : moduleIdentifiers) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            for (Module module : AvailableModulesList.availableModulesList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                if (moduleIdentifier.equals(module.getId()) || moduleIdentifier.equals(module.getName())) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                    modules.add(module);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        return modules;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(String.format(\"ID: %s Name: %s | Modular Credit: %d\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                id, name, moduleCredit));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean hasPreReqModule \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        StringBuilder prereq \u003d new StringBuilder(\" | Prerequisites: \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (!getPreReqModulesString().equals(\"None\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            hasPreReqModule \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        prereq.append(getPreReqModulesString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        if (hasPreReqModule) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            output.append(prereq);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(String.format(\"%s,%s,%d,%s\","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                id, name, moduleCredit, preReqString));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String getPreReqModulesString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (preReqString.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return \"None\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return preReqString;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 32,
      "DeetoMok": 4,
      "bennychanya": 8,
      "RenzoTsai": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/module/SelectedModule.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class SelectedModule extends Module {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private Grading grade;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    protected String semester;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private String yearSemester;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * This is Module\u0027s constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param type             the type of module identifier."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param moduleIdentifier the identifier which can be either module\u0027s name or module\u0027s id."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param semester         the module\u0027s semester."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     * @param moduleCredit     the amount of MC the module awards"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public SelectedModule(String type, String moduleIdentifier, String semester, int moduleCredit) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        super(type, moduleIdentifier, moduleCredit);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.semester \u003d semester;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        setYearSemester();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * This is Module\u0027s constructor, for when String type is \"Both\"."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     * @param type             the type of module identifier."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     * @param moduleId         the module\u0027s id"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     * @param moduleName       the module\u0027s name"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     * @param semester         the module\u0027s semester."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     * @param moduleCredit     the module\u0027s amount of module credit awarded"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public SelectedModule(String type, String moduleId, String moduleName, String semester, int moduleCredit) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        super(type, moduleId, moduleName, moduleCredit);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.semester \u003d semester;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        setYearSemester();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * This is Module\u0027s constructor."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param id               the id of module"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param name             the name of module"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param semester         the module\u0027s semester."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param moduleCredit     the amount of MC the module awards"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param isDone           the module is done"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param grade            the grade of module"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public SelectedModule(String id, String name, String semester, int moduleCredit, boolean isDone, String grade) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (id.equals(\"/\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.isIdValid \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.isIdValid \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (name.equals(\"/\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.isNameValid \u003d false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.isNameValid \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.semester \u003d semester;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.moduleCredit \u003d moduleCredit;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        switch (grade) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case \"A+\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.grade \u003d Grading.APLUS;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case \"A\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.grade \u003d Grading.A;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case \"A-\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.grade \u003d Grading.AMINUS;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case \"B+\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.grade \u003d Grading.BPLUS;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case \"B\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.grade \u003d Grading.B;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case \"B-\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.grade \u003d Grading.BMINUS;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case \"C+\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.grade \u003d Grading.CPLUS;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case \"C\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.grade \u003d Grading.C;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case \"D+\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.grade \u003d Grading.DPLUS;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.grade \u003d Grading.D;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case \"F\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.grade \u003d Grading.F;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case \"CS\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.grade \u003d Grading.CS;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case \"CU\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.grade \u003d Grading.CU;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            this.grade \u003d null;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        setYearSemester();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * This is Module\u0027s constructor."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param id               the module\u0027s id."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param name             the module\u0027s name."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param semester         the module\u0027s semester."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param moduleCredit     the amount of MC the module awards."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public SelectedModule(String id, String name, String semester, int moduleCredit, boolean isDone) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.semester \u003d semester;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        setYearSemester();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Converts semester (e.g. semester 5) to specific year semester string (Y3S1)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void setYearSemester() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        StringBuilder yearSemesterBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        int intSemester \u003d Integer.parseInt(semester);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        yearSemesterBuilder.append(\"Y\").append(Integer.toString((intSemester + 1) / 2)).append(\"S\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (intSemester % 2 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            yearSemesterBuilder.append(Integer.toString(2));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            yearSemesterBuilder.append(Integer.toString(1));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        yearSemester \u003d yearSemesterBuilder.toString();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public String getYearSemester() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return yearSemester;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Updates selected module\u0027s info if it is in available modules list."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param availableModule available modules list."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void setModuleConfig(Module availableModule) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.name \u003d availableModule.name;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.id \u003d availableModule.id;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.description \u003d availableModule.description;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.isSUable \u003d availableModule.isSUable;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.preRequisiteModules \u003d availableModule.preRequisiteModules;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.isNameValid \u003d availableModule.isNameValid;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.isIdValid \u003d availableModule.isIdValid;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     * Returns the icon [✓] when this module is done, and returns [✗] if the module is not done."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return \"[v]\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return \"[x]\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public void setAsDone(Grading grade) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        this.grade \u003d grade;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public String getSem() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        return semester;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public String announceAdded() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return super.toString() + \" | Sem: \" + yearSemester;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public Grading getGrade() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        return this.grade;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return this.getIcon() + \" \" + super.toString() + \" | Sem: \" + yearSemester"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "                    + \" | Grade: \" + grade.getGrade();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return this.getIcon() + \" \" + super.toString() + \" | Sem: \" + yearSemester;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Convert module to string for storage."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return module\u0027s string for storage."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        StringBuilder storageString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (isIdValid) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            storageString.append(id);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            storageString.append(\"/\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        storageString.append(\",\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (isNameValid) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            storageString.append(name);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            storageString.append(\"/\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        storageString.append(\",\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        storageString.append(moduleCredit).append(\",\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        storageString.append(semester).append(\",\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        storageString.append(isDone).append(\",\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            storageString.append(grade.getGrade());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            storageString.append(\"/\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return storageString.toString();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 29,
      "RenzoTsai": 153,
      "bennychanya": 59
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Controller.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.AddToAvailableCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.AddToSemCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.CalculateCapCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.ClearCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.DeleteFromAvailableCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.DeleteFromSemCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.HelpingCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.MarkAsDoneCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.command.ViewCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.exception.InputException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.module.Grading;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.module.NewModule;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.module.SelectedModule;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class Controller {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Parses user input into module."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param fullCommand full user input command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @return the module."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static Command control(String fullCommand) throws InputException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String[] argsWords;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String args \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        argsWords \u003d fullCommand.split(\" \",2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String taskType \u003d Parser.parseTaskType(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (argsWords.length \u003e 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            args \u003d Parser.parseArgs(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return processAddCommand(args);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case ViewCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return processViewCommand(args);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return processExitCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case MarkAsDoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return processMarkAsDone(args);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case HelpingCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return processHelpCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return processFindCommand(args);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case CalculateCapCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return processCalculateCapCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return processDeleteCommand(args);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case ClearCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return processClearCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new InputException(\"invalid command\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static Command processClearCommand() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return new ClearCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static MarkAsDoneCommand processMarkAsDone(String args) throws InputException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String[] moduleWords;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        moduleWords \u003d args.split(\" g/\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (moduleWords.length \u003c 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new InputException(\"invalid \u0027done\u0027 command\", \"done n/NAME g/GRADE | done id/ID g/GRADE\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String grade \u003d moduleWords[1].toUpperCase();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Grading grading;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String module \u003d moduleWords[0];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        switch (grade) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"A+\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            grading \u003d Grading.APLUS;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"A\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            grading \u003d Grading.A;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"A-\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            grading \u003d Grading.AMINUS;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"B+\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            grading \u003d Grading.BPLUS;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"B\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            grading \u003d Grading.B;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"B-\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            grading \u003d Grading.BMINUS;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"C+\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            grading \u003d Grading.CPLUS;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"C\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            grading \u003d Grading.C;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"D+\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            grading \u003d Grading.DPLUS;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            grading \u003d Grading.D;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"F\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            grading \u003d Grading.F;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"CS\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            grading \u003d Grading.CS;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"CU\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            grading \u003d Grading.CU;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new InputException(\"Unexpected value: \" + grade"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    + System.lineSeparator()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    + \"Please use A+ | A | A- | B+ | B | B- | C+ | C | D+ | D | F | CS | CU.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (module.contains(\"n/\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            String moduleName \u003d module.replace(\"n/\",\"\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new MarkAsDoneCommand(moduleName, grading);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else if (module.contains(\"id/\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            String moduleId \u003d module.replace(\"id/\",\"\").toUpperCase();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new MarkAsDoneCommand(moduleId, grading);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static Command processAddCommand(String args) throws InputException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            if (args.contains(\"s/\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return processAddToSemCommand(args);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return processAddToDataCommand(args);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new InputException(\"Wrong add command!\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static AddToSemCommand processAddToSemCommand(String args) throws InputException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String[] moduleWords;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        moduleWords \u003d args.split(\" s/\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (moduleWords.length \u003c 2) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new InputException(\"invalid \u0027add\u0027 command\","
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    \"add id/ID s/SEMESTER mc/MODULE_CREDIT | \" + \"add n/Name s/SEMESTER mc/MODULE_CREDIT \""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                            + \"| add id/ID n/Name s/SEMESTER mc/MODULE_CREDIT\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String module \u003d moduleWords[0];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String semester;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String[] moduleDetails \u003d moduleWords[1].split(\" mc/\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (moduleDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new InputException(\"invalid \u0027add\u0027 command\","
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    \"add id/ID s/SEMESTER mc/MODULE_CREDIT | add n/Name s/SEMESTER mc/MODULE_CREDIT \""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                            + \"| add id/ID n/Name s/SEMESTER mc/MODULE_CREDIT\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        semester \u003d moduleDetails[0].trim();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (Integer.parseInt(semester) \u003c 1 || Integer.parseInt(semester) \u003e 10) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                throw new InputException(\"Semester should be between 1 - 10.\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            int moduleCredit \u003d Integer.parseInt(moduleDetails[1]);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (moduleCredit \u003c 1 || moduleCredit \u003e 10) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                throw new InputException(\"Module credit should be between 1 - 10.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (module.contains(\"id/\")) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                String moduleId \u003d module.replace(\"id/\",\"\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                /* if contains module name */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                if (moduleId.contains(\"n/\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    String[] idAndName \u003d moduleId.split(\"n/\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    String id \u003d idAndName[0].toUpperCase().trim();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    if (id.equals(\"\")) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                        throw new InputException(\"invalid add command.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    /* if module code is invalid */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    if (!isStandardCodeFormat(id)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                        throw new InputException(\"invalid module code: \" + id);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    String name \u003d idAndName[1].trim();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    return new AddToSemCommand(new SelectedModule(\"Both\", id, name, semester, moduleCredit));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    moduleId \u003d moduleId.toUpperCase();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                /* if module code is invalid */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                if (!isStandardCodeFormat(moduleId)) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    throw new InputException(\"invalid module code: \" + moduleId);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                moduleId \u003d moduleId.toUpperCase();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return new AddToSemCommand(new SelectedModule(\"id\", moduleId, semester, moduleCredit));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            } else if (module.contains(\"n/\")) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                String moduleName \u003d module.replace(\"n/\",\"\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return new AddToSemCommand(new SelectedModule(\"name\", moduleName, semester, moduleCredit));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new InputException(\"Invalid \u0027add\u0027 command.\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static AddToAvailableCommand processAddToDataCommand(String args) throws InputException {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String[] moduleWords;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        moduleWords \u003d args.split(\"id/\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (moduleWords.length \u003c 2) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new InputException(\"invalid \u0027add\u0027 command\","
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    \"add id/ID n/NAME mc/MODULE_CREDIT pre/PREREQMODULES]\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        moduleWords \u003d moduleWords[1].split(\" n/\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (moduleWords.length \u003c 2) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new InputException(\"invalid \u0027add\u0027 command\","
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    \"add id/ID n/NAME mc/MODULE_CREDIT pre/PREREQMODULES\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String moduleId \u003d moduleWords[0].toUpperCase().trim();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (!isStandardCodeFormat(moduleId)) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new InputException(\"invalid module code: \" + moduleId);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        moduleWords \u003d moduleWords[1].split(\" mc/\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (moduleWords.length \u003c 2) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new InputException(\"invalid \u0027add\u0027 command\","
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    \"add id/ID n/NAME mc/MODULE_CREDIT pre/PREREQMODULES\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String moduleName \u003d moduleWords[0].trim();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        moduleWords \u003d moduleWords[1].split(\" pre/\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            int moduleCredit \u003d Integer.parseInt(moduleWords[0]);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (moduleCredit \u003c 1 || moduleCredit \u003e 10) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                throw new InputException(\"Module credit should be between 1 - 10.\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            if (moduleWords.length \u003c 2) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return new AddToAvailableCommand(new NewModule(moduleId, moduleName, moduleCredit));"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            String[] preRequisiteModules;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            preRequisiteModules \u003d moduleWords[1].toUpperCase().split(\" \");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            checkPreReqValidity(preRequisiteModules, moduleId);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new AddToAvailableCommand((new NewModule(moduleId, moduleName, moduleCredit, preRequisiteModules)));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new InputException(\"Invalid \u0027add\u0027 command.\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static void checkPreReqValidity(String[] preRequisiteModules, String moduleId) throws InputException {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (String preReq : preRequisiteModules) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (preReq.equals(moduleId) || !isStandardCodeFormat(preReq)) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                throw new InputException(String.format(\"Prerequisites of \u003c%s\u003e is invalid.\", moduleId));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static ViewCommand processViewCommand(String args) throws InputException {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (args.equalsIgnoreCase(\"/cm\")) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new ViewCommand(ViewCommand.VIEW_COMPULSORY_MODULES);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else if (args.equalsIgnoreCase(\"/dm\")) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new ViewCommand(ViewCommand.VIEW_DONE_MODULES);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else if (args.equalsIgnoreCase(\"/mp\")) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new ViewCommand(ViewCommand.VIEW_MODULE_PLAN);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else if (args.contains(\"n/\")) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            String moduleToBeViewed \u003d args.replace(\"n/\",\"\").trim();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new ViewCommand(ViewCommand.VIEW_SPECIFIC_MODULE, moduleToBeViewed);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else if (args.contains(\"id/\")) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            String moduleToBeViewed \u003d args.replace(\"id/\",\"\").toUpperCase().trim();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new ViewCommand(ViewCommand.VIEW_SPECIFIC_MODULE, moduleToBeViewed);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else if (args.equalsIgnoreCase(\"/cc\")) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new ViewCommand(ViewCommand.VIEW_COMPLETED_CREDITS);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else if (args.equals(\"\")) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new ViewCommand(ViewCommand.VIEW_AVAILABLE_MODULES);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        throw new InputException(\"It seems like you are trying to view something, \""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + \"but your command is not completely right. \""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + \"Enter \\\"help\\\" to look at the possible view commands available\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static ExitCommand processExitCommand() {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static HelpingCommand processHelpCommand() {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return new HelpingCommand();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static FindCommand processFindCommand(String args) throws InputException {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (args.length() \u003c 1) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new InputException(\"Please enter your keyword to find.\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return new FindCommand(args);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static CalculateCapCommand processCalculateCapCommand() {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return new CalculateCapCommand();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static DeleteCommand processDeleteCommand(String args) throws InputException {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (args.contains(\"s/\")) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return processDeleteFromSemCommand(args);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return processDeleteFromAvailableCommand(args);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static DeleteFromSemCommand processDeleteFromSemCommand(String args) throws InputException {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String[] moduleWords \u003d args.split(\" s/\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (args.contains(\"id/\")) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            String moduleId \u003d moduleWords[0].replace(\"id/\", \"\").toUpperCase().trim();"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            String semester \u003d moduleWords[1].trim();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new DeleteFromSemCommand(moduleId, semester, \"id\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else if (args.contains(\"n/\")) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            String moduleName \u003d moduleWords[0].replace(\"n/\", \"\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            String semester \u003d moduleWords[1].trim();"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new DeleteFromSemCommand(moduleName, semester, \"name\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        throw new InputException(\"invalid \u0027delete\u0027 command to delete from Selected Modules\","
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                \"delete id/ID s/SEM OR delete n/NAME s/SEM\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static DeleteFromAvailableCommand processDeleteFromAvailableCommand(String args) throws InputException {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String[] moduleWords \u003d args.split(\"/\", 2);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (moduleWords.length !\u003d 2) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new InputException(\"invalid \u0027delete\u0027 command to delete from Available Modules\","
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    \"delete id/ID OR delete n/NAME\");"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String moduleIdentifier \u003d moduleWords[1];"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (moduleWords[0].equals(\"id\")) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return new DeleteFromAvailableCommand(moduleIdentifier.toUpperCase().trim(), \"id\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } else if (moduleWords[0].equals(\"n\")) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return new DeleteFromAvailableCommand(moduleIdentifier.trim(), \"name\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        throw new InputException(\"invalid \u0027delete\u0027 command to delete from Available Modules\","
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                \"delete id/ID OR delete n/NAME\");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Checks whether the module code is valid."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param moduleId module\u0027s id."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return whether the module code is valid."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static boolean isStandardCodeFormat(String moduleId) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String pattern \u003d \"^[A-Za-z]{2,3}\\\\d{4}[A-Za-z]?$\";"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isMatch \u003d Pattern.matches(pattern, moduleId);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return isMatch;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 262,
      "RenzoTsai": 87
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.InputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Parses user input into task type."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param fullCommand full user input command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @return the task type."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static String parseTaskType(String fullCommand) throws InputException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String[] argsWords;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        argsWords \u003d fullCommand.split(\" \",2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        taskType \u003d argsWords[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (!taskType.equals(\"\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return taskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new InputException(\"invalid command\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * returns the argument portion of the user input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param fullCommand full user input command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @return the argument portion of the user input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static String parseArgs(String fullCommand) throws InputException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String args \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String[] argsWords;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        argsWords \u003d fullCommand.split(\" \",2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (argsWords.length \u003e 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            args \u003d argsWords[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (!args.equals(\"\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return args;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new InputException(\"invalid command\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 4,
      "DeetoMok": 25,
      "RenzoTsai": 16,
      "bennychanya": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/StorageAvailableModulesList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.StorageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.module.Module;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.module.NewModule;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Saves and loads the file of available modules list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class StorageAvailableModulesList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String DEFAULT_FILEPATH \u003d \"data/availableModulesList.csv\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String FOLDER_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public StorageAvailableModulesList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Loads the file of Module Manager\u0027s available modules list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return available modules list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws StorageException if file path is wrong."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static AvailableModulesList load() throws StorageException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        AvailableModulesList availableModulesList \u003d new AvailableModulesList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            loadFileContents(availableModulesList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new StorageException(\"No file exits. I will make a new one later!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return availableModulesList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Uses scanner to get the data in file and gets the stored available modules list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws FileNotFoundException if file path is wrong."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void loadFileContents(AvailableModulesList availableModulesList)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throws FileNotFoundException, StorageException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        checkDir();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        File fileToBeLoad \u003d new File(DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        Scanner s \u003d new Scanner(fileToBeLoad);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /* skip head */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (s.hasNext()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            s.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            String moduleInfo \u003d s.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            processModuleInfoString(moduleInfo, availableModulesList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Checks whether the data folder exits. If not, make this dir."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static void checkDir() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        File dir \u003d new File(FOLDER_PATH);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Processes Module information string and loads available modules list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param moduleInfo Module information."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param availableModulesList User\u0027s available modules list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws StorageException Storage exception."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void processModuleInfoString(String moduleInfo,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            AvailableModulesList availableModulesList) throws StorageException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String[] moduleInfoWords \u003d moduleInfo.split(\",\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (moduleInfoWords.length \u003c 3) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new StorageException(\"Invalid module!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String id \u003d moduleInfoWords[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String name \u003d moduleInfoWords[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        int mc \u003d Integer.parseInt(moduleInfoWords[2]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (moduleInfoWords.length \u003c 4) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            addToAvailableModulesList(availableModulesList,new NewModule(id, name, mc));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else if (moduleInfoWords.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            String[] preReq \u003d moduleInfoWords[3].split(\" \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            addToAvailableModulesList(availableModulesList, new NewModule(id, name, mc, preReq));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Adds modules in CSV file to available modules list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param availableModulesList User\u0027s available modules list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param newModule modules in CSV file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static void addToAvailableModulesList(AvailableModulesList availableModulesList, NewModule newModule) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (Module module : availableModulesList) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            boolean hasSameId \u003d newModule.getId().equals(module.getId());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            boolean hasSameName \u003d newModule.getName().equals(module.getName());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (hasSameId \u0026\u0026 hasSameName) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            } else if (hasSameId) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                module.updateName(newModule.getName());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            } else if (hasSameName) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                module.updateId(newModule.getId());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        availableModulesList.add(newModule);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Save available modules list into a CSV file."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws StorageException if gets a IOException when saving."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void save(AvailableModulesList availableModulesList) throws StorageException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            writeToFile(availableModulesList);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new StorageException(\"Some thing wrong when saving.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Writes the available modules list to a CSV file."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws IOException if something wrong when writes the file."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void writeToFile(AvailableModulesList availableModulesList) throws IOException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        FileWriter fw \u003d new FileWriter(DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        fw.write(\"id,name,mc,prerequisites\" + System.lineSeparator());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (Module module: availableModulesList) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            fw.write(module.toStorageString() +  System.lineSeparator());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 145
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/StoragePersonInfo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.Person;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.StorageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Saves and loads the file of Person information."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class StoragePersonInfo {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String DEFAULT_FILEPATH \u003d \"data/personInfo.csv\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String FOLDER_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public StoragePersonInfo() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Loads the file of Module Manager\u0027s person information."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return Person information."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws StorageException if file path is wrong."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static Person load() throws StorageException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return loadFileContents();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new StorageException(\"No person information file exits. I will make a new one later!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Uses scanner to get the data in file and gets the stored person information."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return Person."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws FileNotFoundException if file path is wrong."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static Person loadFileContents() throws FileNotFoundException, StorageException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        checkDir();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        File fileToBeLoad \u003d new File(DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        Scanner s \u003d new Scanner(fileToBeLoad);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        Person person;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (!s.hasNext()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new StorageException(\"Invalid person information!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String personInfo \u003d s.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        person \u003d processPersonInfoString(personInfo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return person;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Checks whether the data folder exits. If not, make this dir."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static void checkDir() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        File dir \u003d new File(FOLDER_PATH);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static Person processPersonInfoString(String personInfo) throws StorageException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String[] personWords \u003d personInfo.split(\",\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (personWords.length \u003c 2) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new StorageException(\"Invalid person information!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String name \u003d personWords[0];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String matricYear \u003d personWords[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return new Person(name, matricYear);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Save person information into a local file."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws StorageException if gets a IOException when saving."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void save() throws StorageException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            writeToFile();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new StorageException(\"Some thing wrong when saving.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Writes the person information to the local file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws IOException if something wrong when writes the file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void writeToFile() throws IOException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        FileWriter fw \u003d new FileWriter(DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        fw.write(Person.toStorageString() + System.lineSeparator());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 1,
      "RenzoTsai": 98
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/StorageSemesterList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.AvailableModulesList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.SemModulesList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.SemesterList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.exception.StorageException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.module.Module;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.module.SelectedModule;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class StorageSemesterList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String DEFAULT_FILEPATH \u003d \"data/semesterList.csv\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String FOLDER_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public StorageSemesterList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Loads the file of Module Manager\u0027s available modules list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return available modules list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws StorageException if file path is wrong."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static SemesterList load() throws StorageException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        SemesterList semesterList \u003d new SemesterList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            loadFileContents(semesterList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new StorageException(\"No file exits. I will make a new one later!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return semesterList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Uses scanner to get the data in file and gets the stored available modules list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws FileNotFoundException if file path is wrong."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void loadFileContents(SemesterList semesterList)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throws FileNotFoundException, StorageException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        checkDir();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        File fileToBeLoad \u003d new File(DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        Scanner s \u003d new Scanner(fileToBeLoad);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /* skip head */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (s.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            s.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            String moduleInfo \u003d s.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            processModuleInfoString(moduleInfo, semesterList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Checks whether the data folder exits. If not, make this dir."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static void checkDir() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        File dir \u003d new File(FOLDER_PATH);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Processes Module information string and loads semester list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param moduleInfo Module information."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param semesterList User\u0027s semester list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws StorageException Storage exception."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void processModuleInfoString(String moduleInfo,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                                               SemesterList semesterList) throws StorageException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String[] moduleInfoWords \u003d moduleInfo.split(\",\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String id \u003d moduleInfoWords[0];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String name \u003d moduleInfoWords[1];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        int mc \u003d Integer.parseInt(moduleInfoWords[2]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String sem \u003d moduleInfoWords[3];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(moduleInfoWords[4]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String grade \u003d moduleInfoWords[5];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        SelectedModule selectedModule \u003d new SelectedModule(id, name, sem, mc, isDone, grade);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        checkAvailableModulesList(selectedModule);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        addToSemesterList(semesterList, selectedModule);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Checks whether the selected module in available modules list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param selectedModule the selected module."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static void checkAvailableModulesList(SelectedModule selectedModule) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (Module availableModule: AvailableModulesList.availableModulesList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            boolean isSameName \u003d availableModule.getName().equals(selectedModule.getName());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            boolean isSameId \u003d availableModule.getId().equals(selectedModule.getId());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (isSameName || isSameId) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                selectedModule.setModuleConfig(availableModule);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Adds selected modules in CSV file to semester list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param semesterList User\u0027s semester list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param selectedModule selected modules in CSV file."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static void addToSemesterList(SemesterList semesterList, SelectedModule selectedModule) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (SemModulesList sem: semesterList) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (sem.getSem().equals(selectedModule.getSem())) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                sem.add(selectedModule);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        SemModulesList sem \u003d new SemModulesList(selectedModule.getSem());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        sem.add(selectedModule);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        semesterList.add(sem);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Save available modules list into a CSV file."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws StorageException if gets a IOException when saving."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void save(SemesterList semesterList) throws StorageException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            writeToFile(semesterList);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new StorageException(\"Some thing wrong when saving.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Writes the available modules list to a CSV file."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws IOException if something wrong when writes the file."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void writeToFile(SemesterList semesterList) throws IOException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        FileWriter fw \u003d new FileWriter(DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        fw.write(\"id,name,mc,semester,isDone,grade\" + System.lineSeparator());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (SemModulesList sem: semesterList) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            for (SelectedModule module: sem) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                fw.write(module.toStorageString() + System.lineSeparator());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 154,
      "bennychanya": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import seedu.duke.data.Person;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            \"  __  __           _       _        __  __\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \" |  \\\\/  |         | |     | |      |  \\\\/  |\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \" | \\\\  / | ___   __| |_   _| | ___  | \\\\  / | __ _ _ __   __ _  __ _  ___ _ __\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \" | |\\\\/| |/ _ \\\\ / _` | | | | |/ _ \\\\ | |\\\\/| |/ _` | \u0027_ \\\\ / _` |/ _` |/ _ \\\\ \u0027__|\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \" | |  | | (_) | (_| | |_| | |  __/ | |  | | (_| | | | | (_| | (_| |  __/ |\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \" |_|  |_|\\\\___/ \\\\__,_|\\\\__,_|_|\\\\___| |_|  |_|\\\\__,_|_| |_|\\\\__,_|\\\\__, |\\\\___|_|\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"                                                              __/ |\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"                                                             |___/\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static final String START_MESSAGE \u003d \"Hello from\\n\" + LOGO;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static final String FAREWELL_MESSAGE \u003d \"Bye bye! I hope to see you again soon ^.^\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private static final String ADDED_TO_SEM_MESSAGE \u003d \"Okay! I have added this module to your semester\u0027s module list:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private static final String ADDED_TO_DATA_MESSAGE \u003d \"Okay! \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            + \"I have added this module to the available modules to choose from:\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static final String VIEWED_MODULE_PLAN_MESSAGE \u003d \"Okay! Here is your module plan:\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static final String VIEWED_AVAILABLE_MODULE_MESSAGE \u003d \"Okay! Here are your available modules:\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static final String VIEWED_DONE_MODULE_MESSAGE \u003d \"Okay! Here are your completed modules:\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static final String DONE_MESSAGE \u003d \"Okay, I\u0027ve marked the module as done!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private static final String FIND_MESSAGE \u003d \"Okay, this is the list of related modules:\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private static final String DELETE_FROM_SEM_MESSAGE"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            \u003d \"Okay, this module has been deleted from the corresponding semester\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private static final String DELETE_FROM_AVAILABLE_MESSAGE"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            \u003d \"Okay, this module has been deleted from the list of available modules\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private static final String DELETE_FROM_AVAILABLE_FOLLOW_UP_MESSAGE"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            \u003d \"Since the following module was found in your module plan, it will be deleted from your module plan too!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private static final String LINE_SEPARATOR \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private static final String BOX_EDGE \u003d \"--------------------------------------------------------------------------\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            + \"--------------------------------------------------\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static final String INPUT_MARK \u003d \"Please input your command:\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    private static final String BOX_HEADER \u003d \"| S/N |    ID    | Name                                                 \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            + \"         | Module Credit | Prerequisites           |\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public static final String BOX_MARGIN \u003d \"|-----|----------|------------------------------------------------------\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            + \"---------|---------------|-------------------------|\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static final String HELP \u003d \"Here are the commands that I can do for you:\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"1. \\\"help\\\" to look at all the commands that I can do\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"2. \\\"view\\\" to see all modules you have in your module list\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"3. \\\"add id/[module code] s/[semester] mc/[credit] \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"| add n/[module name] s/[semester] mc/[credit] \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"| add id/[module code] n/[module name] s/[semester] mc/[credit]\\\"\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \" to add a module to your personal module manager\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"4. \\\"add id/[module code] n/[name of module] mc/[module credit] pre/[pre requisites]\\\"\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \" to add a module to the list of available modules\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"5. \\\"done n/[module name] g/[grade] | done id/[module code] g/[grade]\\\" \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"to mark it as done\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"6. \\\"delete id/[module code] s/[semester] \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"| delete n/[module name] s/[semester] \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \" to delete a module from your personal module manager\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"7. \\\"delete id/[module code] \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"| delete n/[module name] \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \" to delete a module from your list of available modules\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"8. \\\"view /mp\\\" to view your module plan\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"9. \\\"view /dm\\\" to view all finished modules\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"10. \\\"view /cc\\\" to view the number of modular credits u have completed\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"11. \\\"CAP\\\" to view your current cap\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            + \"12. \\\"find\\\" [keyword] to search a module based on the keyword\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "            + \"13. \\\"bye\\\" to exit\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static final String VIEWED_CREDITS \u003d \"You have completed this amount of credits:\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static final String SHOW_CAP \u003d \"Your current CAP is:\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static final String SHOW_INPUT_ERROR \u003d \"Input Error, please enter your comand again!\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \" Type \\\"help\\\" for help\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static final String CLEAR \u003d \"Your module plan has been cleared :)\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static final String EMPTY_MODULE_PLAN \u003d \"Your module plan is empty.\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    private static void showToUser(String... messages) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        for (String m: messages) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "            System.out.println(m);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public static void greetUser() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        showToUser(START_MESSAGE, LINE_SEPARATOR);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public static void greetFarewell() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        showToUser(FAREWELL_MESSAGE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public static void showAddedToSemMessage(String module) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        showToUser(ADDED_TO_SEM_MESSAGE, module, LINE_SEPARATOR);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public static void showAddedToDataMessage(String module) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        showToUser(ADDED_TO_DATA_MESSAGE, module, LINE_SEPARATOR);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static void showViewMessage(String viewList) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        showToUser(VIEWED_MODULE_PLAN_MESSAGE, viewList, LINE_SEPARATOR);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void showViewAvailableMessage(String viewList) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        showToUser(VIEWED_AVAILABLE_MODULE_MESSAGE, BOX_EDGE, BOX_HEADER, viewList, BOX_EDGE, LINE_SEPARATOR);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static void showViewDoneMessage(String viewList) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        showToUser(VIEWED_DONE_MODULE_MESSAGE, viewList, LINE_SEPARATOR);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static void showDoneMessage() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        showToUser(DONE_MESSAGE, LINE_SEPARATOR);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public static void showFindMessage(String viewList) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        showToUser(FIND_MESSAGE, viewList,  LINE_SEPARATOR);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public static void showDeleteFromSemMessage(String output) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        showToUser(DELETE_FROM_SEM_MESSAGE, output, LINE_SEPARATOR);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public static void showDeleteFromAvailableMessage(String output) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        showToUser(DELETE_FROM_AVAILABLE_MESSAGE, output, LINE_SEPARATOR);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    public static void showDeleteFromAvailableFollowUpMessage(String module) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        showToUser(DELETE_FROM_AVAILABLE_FOLLOW_UP_MESSAGE, module, LINE_SEPARATOR);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void showError(String errorMessage) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        showToUser(errorMessage, LINE_SEPARATOR);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static void showHelpMessage() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        showToUser(HELP);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static void showCompletedCredits() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        showToUser(VIEWED_CREDITS, Integer.toString(Person.getTotalModuleCreditCompleted()), LINE_SEPARATOR);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    public static void showCap(String cap) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        showToUser(SHOW_CAP, cap, LINE_SEPARATOR);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static void showInputError() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        showToUser(SHOW_INPUT_ERROR);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static void showClearMessage() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        showToUser(CLEAR);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static void showEmptyModulePlan() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        showToUser(EMPTY_MODULE_PLAN);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void showReadyToInput() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        showToUser(INPUT_MARK);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 45,
      "DeetoMok": 73,
      "RenzoTsai": 24,
      "bennychanya": 33
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/AddToAvailableCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.module.NewModule;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class AddToAvailableCommandTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void addToAvailableCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        NewModule newModule \u003d new NewModule(\"CS1231\", \"Discrete Structures\", 4);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        AddToAvailableCommand addToAvailableCommand \u003d new AddToAvailableCommand(newModule);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 17
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/AddToSemCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class AddToSemCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void checkModuleExist() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 12
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/AvailableModulesListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "import seedu.duke.module.NewModule;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "public class AvailableModulesListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    void getModule() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        NewModule module \u003d new NewModule(\"CS1010\", \"Programming Methodology\", 4);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        assertEquals(module, new AvailableModulesList().getModule(\"CS1010\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "        assertEquals(module, new AvailableModulesList().getModule(\"Programming Methodology\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void isModuleNameInList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        AvailableModulesList modulesList \u003d new AvailableModulesList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        NewModule module \u003d new NewModule(\"CS1010\", \"Programming Methodology\", 4);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        modulesList.add(module);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertTrue(modulesList.isModuleNameInList(\"Programming Methodology\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(modulesList.isModuleNameInList(\"Program Methodology\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void isModuleIdInList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        AvailableModulesList modulesList \u003d new AvailableModulesList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        NewModule module \u003d new NewModule(\"CS1010\", \"Programming Methodology\", 4);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        modulesList.add(module);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertTrue(modulesList.isModuleIdInList(\"CS1010\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(modulesList.isModuleIdInList(\"CS2040C\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void remove() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        AvailableModulesList modulesList \u003d new AvailableModulesList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        NewModule module \u003d new NewModule(\"CS1231\", \"Discrete Structures\", 4);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        modulesList.add(module);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertTrue(modulesList.isModuleIdInList(\"CS1231\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        modulesList.remove(module);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(modulesList.isModuleIdInList(\"CS1231\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 15,
      "DeetoMok": 33
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/PersonTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "public class PersonTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    void getPersonName() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Person person \u003d new Person(\"Duke\", \"2018\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        String name \u003d \"Duke\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        assertEquals(name, Person.getName());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bennychanya"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    void getPersonYear() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Person person \u003d new Person(\"Duke\", \"2018\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String matricYear \u003d \"2018\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        assertEquals(matricYear, Person.getMatricYear());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void createNewUser() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(Person.isPersonExist());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Person.createNewUser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"User\", Person.getName());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"2020\", Person.getMatricYear());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertTrue(Person.isPersonExist());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void getTotalCap() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Person.setTotalCap(5.0);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(5.0, Person.getTotalCap());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void toStorageString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Person person \u003d new Person(\"Duke\", \"2018\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"Duke,2018\",Person.toStorageString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void addTotalModuleCreditCompleted() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(0, Person.getTotalModuleCreditCompleted());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Person.addTotalModuleCreditCompleted(4);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(4, Person.getTotalModuleCreditCompleted());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 35,
      "bennychanya": 18
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/SemModulesListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package seedu.duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.exception.InputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.module.SelectedModule;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.module.Module;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class SemModulesListTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void getSem() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SemModulesList semModulesList \u003d new SemModulesList(\"7\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"7\", semModulesList.getSem());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void getYearSemester() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SemModulesList semModulesList \u003d new SemModulesList(\"8\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        semModulesList.setYearSemester();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"Y4S2\", semModulesList.getYearSemester());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void isInList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SemModulesList semModulesList \u003d new SemModulesList(\"8\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        semModulesList.add(new SelectedModule(\"Both\", \"CS1010\", \"Programming Methodology\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                \"8\", 4));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(semModulesList.isInList(\"CS1231\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(semModulesList.isInList(\"Discrete Structures\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        semModulesList.add(new SelectedModule(\"Both\", \"CS1231\", \"Discrete Structures\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                \"8\", 4));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertTrue(semModulesList.isInList(\"CS1231\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertTrue(semModulesList.isInList(\"Discrete Structures\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void deleteModule() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SemModulesList semModulesList \u003d new SemModulesList(\"8\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        semModulesList.add(new SelectedModule(\"Both\", \"CS1231\", \"Discrete Structures\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                \"8\", 4));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertTrue(semModulesList.isInList(\"CS1231\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertTrue(semModulesList.isInList(\"Discrete Structures\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        semModulesList.deleteModule(\"CS1231\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(semModulesList.isInList(\"CS1231\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(semModulesList.isInList(\"Discrete Structures\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        semModulesList.add(new SelectedModule(\"Both\", \"CS1231\", \"Discrete Structures\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                \"8\", 4));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        semModulesList.deleteModule(\"Discrete Structures\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(semModulesList.isInList(\"CS1231\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(semModulesList.isInList(\"Discrete Structures\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void getModule() throws InputException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SemModulesList semModulesList \u003d new SemModulesList(\"8\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SelectedModule selectedModule \u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"id\", \"CS1231\", \"8\", 4);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SelectedModule anotherSelectedModule \u003d"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"name\", \"Mathematics of Games\", \"8\", 4);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        semModulesList.add(selectedModule);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(selectedModule, semModulesList.getModule(\"CS1231\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        semModulesList.add(anotherSelectedModule);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(anotherSelectedModule, semModulesList.getModule(\"Mathematics of Games\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertThrows(InputException.class, () -\u003e semModulesList.getModule(\"Math of Games\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 71
    }
  },
  {
    "path": "src/test/java/seedu/duke/module/GradingTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "class GradingTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    void getGradeValue() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        double gradeValue \u003d 5.0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeValue, Grading.APLUS.getPoint());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        assertEquals(gradeValue, Grading.A.getPoint());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeValue \u003d 4.5;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeValue, Grading.AMINUS.getPoint());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeValue \u003d 4.0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeValue, Grading.BPLUS.getPoint());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeValue \u003d 3.5;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeValue, Grading.B.getPoint());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeValue \u003d 3.0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeValue, Grading.BMINUS.getPoint());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeValue \u003d 2.5;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeValue, Grading.CPLUS.getPoint());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeValue \u003d 2.0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeValue, Grading.C.getPoint());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeValue \u003d 0.0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeValue, Grading.CS.getPoint());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeValue \u003d 0.0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeValue, Grading.CU.getPoint());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeValue \u003d 0.0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeValue, Grading.F.getPoint());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    void getGradeString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String gradeString \u003d \"A+\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeString, Grading.APLUS.getGrade());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeString \u003d \"A\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeString, Grading.A.getGrade());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeString \u003d \"B+\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeString, Grading.BPLUS.getGrade());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeString \u003d \"B\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeString, Grading.B.getGrade());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeString \u003d \"B-\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeString, Grading.BMINUS.getGrade());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeString \u003d \"C+\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeString, Grading.CPLUS.getGrade());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeString \u003d \"C\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeString, Grading.C.getGrade());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeString \u003d \"D+\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeString, Grading.DPLUS.getGrade());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeString \u003d \"D\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeString, Grading.D.getGrade());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeString \u003d \"CS\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeString, Grading.CS.getGrade());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeString \u003d \"CU\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeString, Grading.CU.getGrade());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gradeString \u003d \"F\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(gradeString, Grading.F.getGrade());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 47,
      "RenzoTsai": 13,
      "bennychanya": 1
    }
  },
  {
    "path": "src/test/java/seedu/duke/module/ModuleTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package seedu.duke.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class ModuleTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void getName() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SelectedModule selectedModule \u003d new SelectedModule(\"id\", \"CS1231\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                \"4\", 4);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"unnamed\", selectedModule.getName());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void updateName() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SelectedModule selectedModule \u003d new SelectedModule(\"id\", \"CS1231\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                \"4\", 4);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule.updateName(\"Discrete Structures\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"Discrete Structures\", selectedModule.getName());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void updateId() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SelectedModule selectedModule \u003d new SelectedModule(\"name\", \"Discrete Structures\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                \"4\", 4);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule.updateId(\"CS1231\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"CS1231\", selectedModule.getId());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void getPreRequisiteModules() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        NewModule newModule \u003d new NewModule(\"CS2040\", \"Data Structures\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                4);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"[]\", newModule.getPreRequisiteModules().toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 40
    }
  },
  {
    "path": "src/test/java/seedu/duke/module/SelectedModuleTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package seedu.duke.module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class SelectedModuleTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void testMarkAsDone() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SelectedModule selectedModule \u003d new SelectedModule(\"id\", \"CS1010\", \"3\", 4);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        assertEquals(\"[x]\", selectedModule.getIcon());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "        selectedModule.setAsDone(Grading.APLUS);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        assertEquals(\"[v]\", selectedModule.getIcon());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"Y2S1\", selectedModule.getYearSemester());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void setModuleConfig() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SelectedModule selectedModule \u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"Discrete Structures\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"A+\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"Discrete Structures\", selectedModule.getName());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"CS1231\", selectedModule.getId());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule.setModuleConfig(selectedModule);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void getDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SelectedModule selectedModule \u003d new SelectedModule(\"CS1231\", \"Discrete Structures\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                \"7\", 4, false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(selectedModule.getDone());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void getSem() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SelectedModule selectedModule \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"Discrete Structures\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"A+\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"6\", selectedModule.getSem());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void announceAdded() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SelectedModule selectedModule \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"Discrete Structures\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"A+\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(\"ID: CS1231 Name: Discrete Structures | Module Credit: 4 | Sem: Y3S2\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                selectedModule.announceAdded());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void getGrade() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        SelectedModule selectedModule \u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"/\", \"Discrete Structures\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"A+\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(Grading.APLUS, selectedModule.getGrade());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule \u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"/\","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"A\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(Grading.A, selectedModule.getGrade());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule \u003d"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"Discrete Structures\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"A-\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(Grading.AMINUS, selectedModule.getGrade());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule \u003d"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"/\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"B+\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(Grading.BPLUS, selectedModule.getGrade());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule \u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"/\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"B\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(Grading.B, selectedModule.getGrade());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule \u003d"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"/\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"B-\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(Grading.BMINUS, selectedModule.getGrade());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule \u003d"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"/\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"C+\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(Grading.CPLUS, selectedModule.getGrade());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule \u003d"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"/\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"C\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(Grading.C, selectedModule.getGrade());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule \u003d"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"/\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"D+\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(Grading.DPLUS, selectedModule.getGrade());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule \u003d"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"/\","
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"D\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(Grading.D, selectedModule.getGrade());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule \u003d"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"/\","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"F\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(Grading.F, selectedModule.getGrade());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule \u003d"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"/\","
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"CS\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(Grading.CS, selectedModule.getGrade());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        selectedModule \u003d"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                new SelectedModule(\"CS1231\", \"/\","
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        \"6\", 4, false, \"CU\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertEquals(Grading.CU, selectedModule.getGrade());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 106,
      "RenzoTsai": 2,
      "bennychanya": 1
    }
  },
  {
    "path": "src/test/java/seedu/duke/parser/ControllerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import seedu.duke.exception.InputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "class ControllerTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void testIsStandardCodeFormat() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertTrue(Controller.isStandardCodeFormat(\"CS2113\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertTrue(Controller.isStandardCodeFormat(\"acc4761h\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(Controller.isStandardCodeFormat(\"is001\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(Controller.isStandardCodeFormat(\"CS001T\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(Controller.isStandardCodeFormat(\"acc4761hh\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        assertFalse(Controller.isStandardCodeFormat(\"\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void invalidSemesterThrowsInputException() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            Controller.control(\"add id/CS2104 s/11 mc/4\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            assertTrue(e instanceof InputException);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            assertTrue(e.getMessage().equals(\"Input Exception: Semester should be between 1 - 10.\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    + System.lineSeparator()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    + \"Please enter your command again!\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            Controller.control(\"add id/CS2104 s/0 mc/4\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            assertTrue(e instanceof InputException);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            assertTrue(e.getMessage().equals(\"Input Exception: Semester should be between 1 - 10.\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    + System.lineSeparator()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    + \"Please enter your command again!\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void invalidModuleCreditThrowsInputException() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            Controller.control(\"add id/TES0010 n/TEST1 mc/11\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            assertTrue(e instanceof InputException);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            assertTrue(e.getMessage().equals(\"Input Exception: Module credit should be between 1 - 10.\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    + System.lineSeparator()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    + \"Please enter your command again!\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            Controller.control(\"add id/TES0011 n/TEST2 mc/0\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            assertTrue(e instanceof InputException);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            assertTrue(e.getMessage().equals(\"Input Exception: Module credit should be between 1 - 10.\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    + System.lineSeparator()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    + \"Please enter your command again!\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 9,
      "RenzoTsai": 54
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "view"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "add id/CS2113 s/4 mc/4"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "add n/Software Engineering \u0026 Object-Oriented Programming s/4 mc/4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "add id/CS1010 s/3 mc/4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "add id/IS4241 s/4 mc/4"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "add id/IS4241 n/Social Media Network Analysis mc/4 pre/CS1010 IS1103"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "add id/CS0000 n/Test PreReq mc/4 pre/CS0001 IS000"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "add id/IS4241 s/4 mc/4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "add id/CS1231 n/Discrete Structures mc/4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "add id/CS2104 n/Programming Language Concepts mc/4 pre/CS2030"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "view"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "add id/CS1231 s/3 mc/4"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "view /mp"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "done id/IS4241 g/A-"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "view /dm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "view /cc"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "find cS"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "add id/ACC1004 s/5 mc/4"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "done id/acc1004 g/CS"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "add id/CS000T s/5 mc/4"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "view /mp"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "view /cc"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "view /dm"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bennychanya"
        },
        "content": "CAP"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "find"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "delete id/IS4241 s/4"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "view /mp"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "delete n/Singapore Employment Law"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "delete id/CS1010"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "delete id/GET1002"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "view"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "view /mp"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "CAP"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chengTzeNing"
        },
        "content": "add id/CS9999 n/hello mc/4 pre/CS9999"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chengTzeNing": 9,
      "DeetoMok": 4,
      "RenzoTsai": 11,
      "bennychanya": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    \u0027dir /b duke-0.0.1.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "java -jar ..\\build\\libs\\%jarloc% \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 1,
      "RenzoTsai": 4,
      "-": 16
    }
  }
]
